{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x29FAd1fb39Ebd5090b12c3949462A64861DE7C6D",
    "txHash": "0x173d6994bdd9d78479b85e628ced7e437f8597780025b2991add90055b4dea47"
  },
  "proxies": [
    {
      "address": "0x74A16B0b9fD5613c14A0DCfc67809ec6f3EfbECC",
      "txHash": "0xade3461493855d2044442b89d8acb02a1a1128702fe5bc0b1b6c58146edca92e",
      "kind": "transparent"
    },
    {
      "address": "0xcf784e0bc59136197760Bb85e1787299A36c131a",
      "txHash": "0x8986645967fcad183be5030a0bee4c52c33ec333095be5c042275c89432d11a2",
      "kind": "transparent"
    },
    {
      "address": "0x3aF34264F6cab8BAee45B9a9d6eDA4204e4c3a6D",
      "txHash": "0x9dca18ae0ef74430ab4fa7496dd8386cc0a53243eb515f7d2303b46819ab0175",
      "kind": "transparent"
    },
    {
      "address": "0xb12fe2c8c0C873f6054e3B17f820E5c5569B93db",
      "txHash": "0x8cc2ca68e79c8e1377fbb57dbbcb295f17ad81fe8a2dead2101701384d49d88e",
      "kind": "transparent"
    },
    {
      "address": "0xB875c1B5A9bd7bBA0935cB55B999108E7A31C9ec",
      "txHash": "0xca379deb9daaef50081758547e36f5951bb4f8ac460a9d8d3d20c86594c980b8",
      "kind": "transparent"
    },
    {
      "address": "0x09787fD312543ACfb0Dea4805A975488Dc46e8af",
      "txHash": "0x70533e04b9818a6bdaf03d6e00c3fa8c33c74c17cee7dfa2160c867331034f07",
      "kind": "transparent"
    },
    {
      "address": "0xF1162512236EFFDA56791ee33575f14fE6e3F0C8",
      "txHash": "0x56b1c566991c1a320bc062f6a5885f5330e05e316203268feda31340df136db6",
      "kind": "transparent"
    },
    {
      "address": "0x9b744fb14e5EE1431Ba0AFd539798F39d38605E3",
      "txHash": "0x88c2c9aeaf265beffe2d8eff3c1509a9b4415d41d5369ac1234a2f5363819889",
      "kind": "transparent"
    },
    {
      "address": "0xfc62FC13996EfB7267c4d8499dEcF1A0574Dede8",
      "txHash": "0x83bb2be9b4f5b16d768b53da758a8ce545354a76fa835272ad4c21a46a7474a6",
      "kind": "transparent"
    },
    {
      "address": "0xa0CBcfaD60f5A0966cf01B79ae0dFC5ccD7A653C",
      "txHash": "0xf925b73415fa5d39395df716bc48a737ebd79d6099017ce66b940fa1b68b4a4a",
      "kind": "transparent"
    },
    {
      "address": "0xD4a0766bA78Fb29CFF66a8CeAfa7AB29Bb8FE0A8",
      "txHash": "0xc98d14cb0d8b43e073df224e06ca997649e9e239e3fc4af19454c23477bcdf27",
      "kind": "transparent"
    },
    {
      "address": "0xd650DaA88405B3C56201477D27cE96674b906C95",
      "txHash": "0x9614fad40b27711448f8ff829c0214caab37b57d9451956c4ad82eb193e3dd3f",
      "kind": "transparent"
    },
    {
      "address": "0x793EdF91DE781ed57E33162AA008652c3505339b",
      "txHash": "0xe6875e9511f117cfc7fbdf7f7c799dd5bfdf0d015ae72180c08b9b491efcb046",
      "kind": "transparent"
    },
    {
      "address": "0x12a0F2f32d448665e14C2046d6581396BEC7BB16",
      "txHash": "0x80123622536c9b1107918b2283270d27edffba84c8bff3c201768d146003a1e9",
      "kind": "transparent"
    },
    {
      "address": "0x718C11881c95bAFB841FC15AEAb7723e96b54329",
      "txHash": "0xbcb43b2940582421f24f5d3bead67e104565fbefc01062b1992fef6a2d74e5c0",
      "kind": "transparent"
    },
    {
      "address": "0x261F02Aa54b1A0dE0A57d5FCc727d56031103D67",
      "txHash": "0x90c68abc4fb8204be1314ee2f7a7fff09fae1d1797b42a2648bb16cc1a22bcd9",
      "kind": "transparent"
    },
    {
      "address": "0xDeA1e8F336fDdB895DF965D8fF82df1063231b13",
      "txHash": "0xca752412d25083c6d3781755f9798f37e885c2cd1c91f933ced32c7f40ad8202",
      "kind": "transparent"
    },
    {
      "address": "0xBA710a3d401D5790103BadD5847563A1e11Dde3B",
      "txHash": "0x67efbd15c2e1b3305e03473060a769135b4656b15a40bb101702c7b8f35107b2",
      "kind": "transparent"
    },
    {
      "address": "0xA25DFEa3B6145Db84324F8d43EFDAfd0Af394362",
      "txHash": "0xae82894acf1670bd78f6a9a54c83f7ca8ef31221bc1952c0233eed22d939bbce",
      "kind": "transparent"
    },
    {
      "address": "0xf6eBB10293eD24ED27d63008375Fd01f60d6b494",
      "txHash": "0x454d52c5397b41ca7e60ce060656fcdb720e3b2304efecbc050840f28cb95f46",
      "kind": "transparent"
    },
    {
      "address": "0x67DCE0E98aA49D7Fe2e796901D55Ef916f996599",
      "txHash": "0x2d37ebc5ca1271abf9b5f32d94f6379be9af116128c2f44f9cddea4e8863956d",
      "kind": "transparent"
    },
    {
      "address": "0x996B2353608d19022Da34A2Afdc73B0bdf43EFBc",
      "txHash": "0xcc18764f4bb3da6a89e604ee7d7ba199350b543389e85ee6f0c9f7603d99fb6f",
      "kind": "transparent"
    },
    {
      "address": "0x42F6Cf2c24E25A60c2e6def1AdA6Bfa42a67a3B0",
      "txHash": "0x387a5e26bbeddc8770a0087215f508d3198e0250fdfe6681c4fe645ceb9290ac",
      "kind": "transparent"
    },
    {
      "address": "0xf916274B83e033191eD68403fD2e0F926B619679",
      "txHash": "0x9566ded102b8755120faef801709c2dd547c18266aa5bffc747a1f662dba6146",
      "kind": "transparent"
    },
    {
      "address": "0xCACB01e6a3514D8F2E63D92BfFF87918fC98642f",
      "txHash": "0x2e8b3e29428224efe312c4086190c58c0b4222227788a9b65fb0a17c862be09e",
      "kind": "transparent"
    },
    {
      "address": "0x8C81a8A95469C25745f0F7acF4Dc1D2721E0cc00",
      "txHash": "0x517a70d6fea5554b10f0518d98d7c364471f2f757590ebe94b7a1148cf3cdb01",
      "kind": "transparent"
    },
    {
      "address": "0x4b73c6700f700f8B47428C064163aeEEb1df757C",
      "txHash": "0xde8e8dc8df5a8f51e57fef2427777035bd747100c669c8889f4723c0cddf0827",
      "kind": "transparent"
    },
    {
      "address": "0x0cB6750F157acC035BeF9Be2F034fcAD7ebAf81E",
      "txHash": "0xa2e390342d455f4f498bebc166999f03d64d91c06ea2fa483f0a291e6da33fa6",
      "kind": "transparent"
    },
    {
      "address": "0x52DF93584A5506fA67cCCaee7515C96df6028747",
      "txHash": "0x7a9a50d0446eb3060b3c8ab6e277f651065b368e2222ea198744e3236ca64506",
      "kind": "transparent"
    },
    {
      "address": "0x3E05A34B6575Ba1ce39C2d35165364ACde1387F3",
      "txHash": "0x855148e383595caa127f0fc94d29ae81bcd6b318a54a4790cf45aa653f92fe08",
      "kind": "transparent"
    },
    {
      "address": "0xB9F522c8cF1a78bE30CC0f757724aaA10edEe8d9",
      "txHash": "0xb5b7547be3f485b13f126f157c0818df56347aa55a0e8782b883870cd464fc81",
      "kind": "transparent"
    },
    {
      "address": "0xb1b1D722f1564DA2e9b789BC136C71278E30C44e",
      "txHash": "0x1b848757c8681897ccc42709a8f5fdcdac8024046002a6799fce01844bdc9d2f",
      "kind": "transparent"
    },
    {
      "address": "0xF5874609b59b3dEc968DD94EB4F57Fc8B52BC70a",
      "txHash": "0xb26c35cc8d6c1fc99eb474c21aaf21ab607ece12515d5a333a4b32618d1cbac9",
      "kind": "transparent"
    },
    {
      "address": "0x311DCb5F2D865e39BA72343969b20D7e8eA5a414",
      "txHash": "0xc411956f0fff25d791568aac08d10438e8e962f6e9c627bca50a847e23a98dbe",
      "kind": "transparent"
    },
    {
      "address": "0x952e930587D3a284dA1F8364585baCAd9b3AFf47",
      "txHash": "0xdf0c5dcb0b526c227692a1b85dbcf5fe5771d3d9e6485caa1fbc778681f13630",
      "kind": "transparent"
    },
    {
      "address": "0x4BA2b49b898DA67e74fA3EDC4e78969b272B9288",
      "txHash": "0x25de266dfcd63546e02cb01a7502e5f204b97205123978b8e59d7eff17a3bac2",
      "kind": "transparent"
    },
    {
      "address": "0xc7c61957288BA97c74C4F33ed322FC897F9a5090",
      "txHash": "0x5b0db0497818ca555021e85fc3b0fa0a2ce843a2d4da8337b898108106e6177f",
      "kind": "transparent"
    },
    {
      "address": "0x63E3AD729eFa35cfbC94BCC17f5314D7f988c981",
      "txHash": "0x448e813610c959cc670106d7a7cdef69a9d13d0a5b8faf7a2abf448230a9927b",
      "kind": "transparent"
    },
    {
      "address": "0x57CddB2944ce7842D1F3Efb1866347b08a4301d6",
      "txHash": "0xed2544a77e784ddc341b1ae98118431b85e6f526fa2de0b3859de4a8821523cd",
      "kind": "transparent"
    },
    {
      "address": "0xA5d582cbB1C01322D62F9E2476141754A84CEf42",
      "txHash": "0x0d112fa39c576eaa47dd5cecd373f67d6c4c1e8663b6f964e3e0990356d99143",
      "kind": "transparent"
    },
    {
      "address": "0xa58A2A930B28A504aD30Db9d46dd5da4C3ED304b",
      "txHash": "0x2a22a06ac4ac7dbdbb79d7454759882d6be21fa11b2eb17f3ae28db755fed480",
      "kind": "transparent"
    },
    {
      "address": "0x381ad102467Aa00eAC64Fca3F38Eacb27f4206F5",
      "txHash": "0x9de8b1cf2f0851b7dba4ff0c73c6213028a8af75587f5293f838eeb9ee4cadb7",
      "kind": "transparent"
    },
    {
      "address": "0x8daD8DF83070Ca432f822342D9cc17fdd3c4995C",
      "txHash": "0x4e6cf35016841f187e167910c8dea4b9a90cf7ed77708e401f96119667bac299",
      "kind": "transparent"
    },
    {
      "address": "0x9263c3c04dd6f46278712aFe4b9f90Abec8a2643",
      "txHash": "0x3c57add43fdd79d116f1f75f6aa99b66fb2b59a9c9684edfb25528c9ad9d8cad",
      "kind": "transparent"
    },
    {
      "address": "0x0E954324F74af9481732a4dC47f70839116DFFF7",
      "txHash": "0x4fda0aa33770c2c80708b357b32b0c831ec9a61e7e3435dfcac50d0a0f3c11e8",
      "kind": "transparent"
    },
    {
      "address": "0x0C2632AC29D844e82Eace9E18D05F87f9537Ddab",
      "txHash": "0x86f77f126a12f1c4743d7037141cedd0499e35f3809a8e48d694239256126206",
      "kind": "transparent"
    },
    {
      "address": "0x62698adf9C9d3522d43CE1a740EE35FB289DD708",
      "txHash": "0xaeb95a03ef76f28cbe779a2b73e773872e14c841ade2ddf3a21734f8c7e61706",
      "kind": "transparent"
    },
    {
      "address": "0xA64c3E9809f0d66Ba4379C498Bb57D101538d634",
      "txHash": "0xebaac06ef22928f68371103474d146273e3ed370de8b2d62181110e21ae9203e",
      "kind": "transparent"
    },
    {
      "address": "0x4d080460a5fef5DaaD8CA83ea2F028034180db09",
      "txHash": "0x75f914ae89166c2900eb4749028607f7c9d455f42d3aa54b09ad0ca9276aa82b",
      "kind": "transparent"
    },
    {
      "address": "0x0A246e3bA2C3b8B217a462F91A2c652c0FA9c33d",
      "txHash": "0xdddccafa9572895add7ac87756c2812a23e887ea7790b3a4fd05ee8b8c6a6798",
      "kind": "transparent"
    },
    {
      "address": "0x5E0565C5F5d044A523B999ED0D5478A8D035aB32",
      "txHash": "0x6a4228e254e8fde0d57e763f73c302fcbfb58ad091c956b7f5bfa6eb309ec877",
      "kind": "transparent"
    },
    {
      "address": "0x55B4796bf41b7A2a9F99f07b17e84EAFef24c62a",
      "txHash": "0xf231ad6b348525d672afa0379486f74d7f19b208bcdab62a817c2e9217021b18",
      "kind": "transparent"
    },
    {
      "address": "0xa52b2B23DF2C5c43b8BdFEb878755c25eB413E40",
      "txHash": "0xc815710540f5dd3117dcf7faf9871aba0bfa206e2e3d84de3f215898537dfec6",
      "kind": "transparent"
    },
    {
      "address": "0x080034F936E4D15d1b087Cf9E0BE943Fd96c2330",
      "txHash": "0xcbef974b7960306dc78a9fe0fff8459f9f2f7b777f6550b7242580b9d3b3cfcf",
      "kind": "transparent"
    },
    {
      "address": "0x55D7fE2f29BDC867fe69eF90e6B8960EaEF638d7",
      "txHash": "0xc3cf76b391af557014a691b1b92e85b8764a9879878de775ea70905c5ce8af2b",
      "kind": "transparent"
    },
    {
      "address": "0xa66603fAa4291C28063056185ec142183836453A",
      "txHash": "0x8b82c46893c65677bc0d34e762734ca5f39c3056e6eec52a749c9ec68c6c031f",
      "kind": "transparent"
    },
    {
      "address": "0xb8f7392E030D38691bF8623B8792765230E7bf78",
      "txHash": "0x17145982e167d15c6c6cc5a007f02ea3adb72c4fe1f9d26088926503f83ac447",
      "kind": "transparent"
    },
    {
      "address": "0x19Be5A6b0Db4fA9bC23961f5b7a31D0d0E35841c",
      "txHash": "0x9fee4f01e494ad2bf3b6f7775b44ef3062d1ea4d6f77e53bd107a07990c8c9e4",
      "kind": "transparent"
    },
    {
      "address": "0xF5581706AD14Cb640E6a265e2f1756DeE085ed1b",
      "txHash": "0xd2aeaad3ffe06759408ff38518eb45df9f6d465843bd864814643397dd18c4ee",
      "kind": "transparent"
    },
    {
      "address": "0x25cB66b1a44c7Fb39f6e6618C7627Dc540A64195",
      "txHash": "0x11730e7ba78d1b529b5b9bb1d9a72e7241194b71f6108fee32c5281f8bd5892e",
      "kind": "transparent"
    },
    {
      "address": "0x2b557b573f303E6FeCfb30Df8aF856560d4D9Df2",
      "txHash": "0x3c19ceb5f6bffc0f3c930713215d2abf4f57be33e4cefa91b6663f0b69e88c6f",
      "kind": "transparent"
    },
    {
      "address": "0xa0e656f94bB38c6941DF92a5F950Dc8A67bb5940",
      "txHash": "0x2e9320137f980da7dab2d85514b8ed63031139a160d357dc7f8fb452159a09e0",
      "kind": "transparent"
    },
    {
      "address": "0x80526b1007ce91C8122bF393E2152f80AD26F1cC",
      "txHash": "0xb1f1e8f0b9e0cbe6c6b301d449a3f627b6b5b8b6eb158f7050db1a4de4d0d293",
      "kind": "transparent"
    },
    {
      "address": "0xF257b1211e0Bc6aFd5cbec4Bb23560203df738A1",
      "txHash": "0xbcefac414486786df223c3b606ea9471f7cbc3f7974d32dd4e03a94b6950bd77",
      "kind": "transparent"
    },
    {
      "address": "0xf82cF99A263dD0FD4008d9022D45595Cc1E19Eb5",
      "txHash": "0x02f2de1f1df1f74b5a5bd206bf42173a733bc9c801924389950f6bc57a38e815",
      "kind": "transparent"
    },
    {
      "address": "0x142A5A3890a8755e8EfAf24427B4a2868F868F32",
      "txHash": "0x5ce746bb1507b8e03c9993f363a66de1d6670b9c486d2f9654964cd3615d8e8e",
      "kind": "transparent"
    },
    {
      "address": "0xb4e45f8a1Ab3dC88401E34399eAB65c3A3D73Ea6",
      "txHash": "0x7ef782d0b653fea3d2c95ab8fbe7b34ff71d8e647b834b5477035982cab89d9a",
      "kind": "transparent"
    }
  ],
  "impls": {
    "632431182acd15be85649f8ef025988d1e0b12d0687c07b5d6e109680808188b": {
      "address": "0x5551a877d9CbC6ff84280B3b489C6b331EcaF32f",
      "txHash": "0xc4a2805238b14967199121a2b4f8e96c7ea0b4e41b3c8f080dbf98b566a232a0",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "primarySaleFeePercent",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:17"
          },
          {
            "label": "secondarySaleFeePercent",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:18"
          },
          {
            "label": "collectorFee",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:19"
          },
          {
            "label": "maxRoyalty",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:20"
          },
          {
            "label": "auctionDuration",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:21"
          },
          {
            "label": "auctionFinalMinutes",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:22"
          },
          {
            "label": "publicKey",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:23"
          },
          {
            "label": "isArtistApproved",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:25"
          },
          {
            "label": "isAddressValidator",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1a474877b8d6ea0237b4b2639f7f924bf5cf2e44bdc21524d23b7c4420e7544c": {
      "address": "0x03E8A2E83af02BA12e8c58e2e07eFfED3a7b1189",
      "txHash": "0x8d5c84041950d001426ca7a9ecf37e5315aa71b10dcec70d707b00cbeb3ae89e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "userCounterMemoirs",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bytes_storage))",
            "contract": "MintGoldDustMemoir",
            "src": "contracts/marketplace/MintGoldDustMemoir.sol:13"
          },
          {
            "label": "userCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MintGoldDustMemoir",
            "src": "contracts/marketplace/MintGoldDustMemoir.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bytes_storage))": {
            "label": "mapping(address => mapping(uint256 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "34e461a954e4cebdedd65d633dbac904c3a3eb304058d70430e5e2caef7c6ab0": {
      "address": "0x46D7d0A1FF452d7b93e71fcb11B7f3B252D8f24d",
      "txHash": "0xf72beedda5b8e060ff04b8589c926568ba41a800bcb4b4dc8acfe290afbb80ec",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:36"
          },
          {
            "label": "mintGoldDustSetPriceAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:37"
          },
          {
            "label": "tokenIdArtist",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:39"
          },
          {
            "label": "tokenIdRoyaltyPercent",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:40"
          },
          {
            "label": "tokenIdMemoir",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:42"
          },
          {
            "label": "tokenCollaborators",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_array(t_address)4_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:44"
          },
          {
            "label": "tokenIdCollaboratorsPercentage",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_array(t_uint256)5_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:45"
          },
          {
            "label": "hasTokenCollaborators",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:47"
          },
          {
            "label": "tokenIdCollaboratorsQuantity",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:48"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:50"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "358",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustERC721",
            "src": "contracts/marketplace/MintGoldDustERC721.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)4_storage": {
            "label": "address[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]",
            "numberOfBytes": "160"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)4_storage)": {
            "label": "mapping(uint256 => address[4])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)5_storage)": {
            "label": "mapping(uint256 => uint256[5])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0863e6f857519a2111ea85b62dab53d82693c69ea306c2e8f5ff0d97b0273398": {
      "address": "0x396020B1E79e9E34B5fB28334bb31aC30e3b2A75",
      "txHash": "0x5da9d1c0b1c0e222c6269fcb3bbc6d33c1ea295f23e26e2d77b31b11e38c8777",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:36"
          },
          {
            "label": "mintGoldDustSetPriceAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:37"
          },
          {
            "label": "tokenIdArtist",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:39"
          },
          {
            "label": "tokenIdRoyaltyPercent",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:40"
          },
          {
            "label": "tokenIdMemoir",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:42"
          },
          {
            "label": "tokenCollaborators",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_array(t_address)4_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:44"
          },
          {
            "label": "tokenIdCollaboratorsPercentage",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_array(t_uint256)5_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:45"
          },
          {
            "label": "hasTokenCollaborators",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:47"
          },
          {
            "label": "tokenIdCollaboratorsQuantity",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:48"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "310",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:50"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "358",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustERC1155",
            "src": "contracts/marketplace/MintGoldDustERC1155.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)4_storage": {
            "label": "address[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]",
            "numberOfBytes": "160"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)4_storage)": {
            "label": "mapping(uint256 => address[4])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)5_storage)": {
            "label": "mapping(uint256 => uint256[5])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "504d2bd4359ec116bfff7baa20a567dac6cf157500076271b1f021c19e26261e": {
      "address": "0xAEF0F976D1BaD50A7E7f1C5440EbD6457cfc856F",
      "txHash": "0xc9d445e2cf0ee36142a9f9128c4cae47d9a4d4ac50f9e3503a6ee177368e86f6",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "itemsSold",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:136"
          },
          {
            "label": "mintGoldDustMarketplace",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(MintGoldDustMarketplace)9599",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:137"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:138"
          },
          {
            "label": "mintGoldDustERC721Address",
            "offset": 0,
            "slot": "154",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:139"
          },
          {
            "label": "mintGoldDustERC1155Address",
            "offset": 0,
            "slot": "155",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:141"
          },
          {
            "label": "idMarketItemsByContractByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7555_storage)))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:151"
          },
          {
            "label": "isSecondarySale",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7541_storage))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:167"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_contract(MintGoldDustMarketplace)9599": {
            "label": "contract MintGoldDustMarketplace",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7555_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7541_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(MarketItem)7555_storage)": {
            "label": "mapping(address => struct MintGoldDustMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7555_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ManageSecondarySale)7541_storage)": {
            "label": "mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionProps)7568_storage": {
            "label": "struct MintGoldDustMarketplace.AuctionProps",
            "members": [
              {
                "label": "auctionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "highestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ended",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ManageSecondarySale)7541_storage": {
            "label": "struct MintGoldDustMarketplace.ManageSecondarySale",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketItem)7555_storage": {
            "label": "struct MintGoldDustMarketplace.MarketItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isERC721",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "auctionProps",
                "type": "t_struct(AuctionProps)7568_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "306ac29b976334261a34fe0f354046718da0af7695166430878bc1489f7b055f": {
      "address": "0x98b49E858A92ffC5EE0396A1Bf7b6E575936aF7C",
      "txHash": "0x9c31f541cc92d8e05b1340066633c76e8228d158b542a296fd268a5c14a4845f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "itemsSold",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:136"
          },
          {
            "label": "mintGoldDustMarketplace",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(MintGoldDustMarketplace)9599",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:137"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:138"
          },
          {
            "label": "mintGoldDustERC721Address",
            "offset": 0,
            "slot": "154",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:139"
          },
          {
            "label": "mintGoldDustERC1155Address",
            "offset": 0,
            "slot": "155",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:141"
          },
          {
            "label": "idMarketItemsByContractByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7555_storage)))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:151"
          },
          {
            "label": "isSecondarySale",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7541_storage))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:167"
          },
          {
            "label": "auctionIds",
            "offset": 0,
            "slot": "206",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplaceAuction",
            "src": "contracts/marketplace/MintGoldDustMarketplaceAuction.sol:29"
          },
          {
            "label": "checkBidder",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool))))",
            "contract": "MintGoldDustMarketplaceAuction",
            "src": "contracts/marketplace/MintGoldDustMarketplaceAuction.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_contract(MintGoldDustMarketplace)9599": {
            "label": "contract MintGoldDustMarketplace",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool))))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => mapping(address => bool))))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7555_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7541_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(MarketItem)7555_storage)": {
            "label": "mapping(address => struct MintGoldDustMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7555_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ManageSecondarySale)7541_storage)": {
            "label": "mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionProps)7568_storage": {
            "label": "struct MintGoldDustMarketplace.AuctionProps",
            "members": [
              {
                "label": "auctionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "highestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ended",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ManageSecondarySale)7541_storage": {
            "label": "struct MintGoldDustMarketplace.ManageSecondarySale",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketItem)7555_storage": {
            "label": "struct MintGoldDustMarketplace.MarketItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isERC721",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "auctionProps",
                "type": "t_struct(AuctionProps)7568_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8a4649d3c059a53a205ac15282be95ce4428173939f17eaf9916c363ad3e24a5": {
      "address": "0x860e10573365AB2246345DB3f2c43Cc36FAd1345",
      "txHash": "0x2013c30e91b88c4f8a269f64a02cf88a631a7db969d6b67a0d455ae662fd53c1",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:36"
          },
          {
            "label": "mintGoldDustSetPriceAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:37"
          },
          {
            "label": "mintGoldDustMarketplaceAuctionAddress",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:38"
          },
          {
            "label": "tokenIdArtist",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:40"
          },
          {
            "label": "tokenIdRoyaltyPercent",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:41"
          },
          {
            "label": "tokenIdMemoir",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:43"
          },
          {
            "label": "tokenCollaborators",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_array(t_address)4_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:45"
          },
          {
            "label": "tokenIdCollaboratorsPercentage",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_array(t_uint256)5_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:46"
          },
          {
            "label": "hasTokenCollaborators",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:48"
          },
          {
            "label": "tokenIdCollaboratorsQuantity",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:49"
          },
          {
            "label": "tokenWasSold",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:51"
          },
          {
            "label": "primarySaleQuantityToSold",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "313",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:76"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "361",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustERC721",
            "src": "contracts/marketplace/MintGoldDustERC721.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)4_storage": {
            "label": "address[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]",
            "numberOfBytes": "160"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)4_storage)": {
            "label": "mapping(uint256 => address[4])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)5_storage)": {
            "label": "mapping(uint256 => uint256[5])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "288d21bdac3286d7b995912ee0f0b262275284921c14c9b28c501d8f0b24a0f5": {
      "address": "0x3C7eaEB2cEeD07Af95789c71a9B27e6C94Be57f3",
      "txHash": "0x3f00dee042ec58cf52c1f4544f0d369648afc122d0f076488a682c6dd9469ab5",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:36"
          },
          {
            "label": "mintGoldDustSetPriceAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:37"
          },
          {
            "label": "mintGoldDustMarketplaceAuctionAddress",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:38"
          },
          {
            "label": "tokenIdArtist",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:40"
          },
          {
            "label": "tokenIdRoyaltyPercent",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:41"
          },
          {
            "label": "tokenIdMemoir",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:43"
          },
          {
            "label": "tokenCollaborators",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_array(t_address)4_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:45"
          },
          {
            "label": "tokenIdCollaboratorsPercentage",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_array(t_uint256)5_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:46"
          },
          {
            "label": "hasTokenCollaborators",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:48"
          },
          {
            "label": "tokenIdCollaboratorsQuantity",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:49"
          },
          {
            "label": "tokenWasSold",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:51"
          },
          {
            "label": "primarySaleQuantityToSold",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "313",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:76"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "361",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustERC1155",
            "src": "contracts/marketplace/MintGoldDustERC1155.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)4_storage": {
            "label": "address[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]",
            "numberOfBytes": "160"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)4_storage)": {
            "label": "mapping(uint256 => address[4])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)5_storage)": {
            "label": "mapping(uint256 => uint256[5])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d3a79b73ec9f3113f2076ff698884811d4d4780429bdce92a122cc7159d6392e": {
      "address": "0x7F43630FcB8760F5669e8A81b0265711101e8B15",
      "txHash": "0xdf9146e60446ae786630c24d49a41881e557d016f8ae14728ec128ebd0af71ba",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "itemsSold",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:136"
          },
          {
            "label": "mintGoldDustMarketplace",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(MintGoldDustMarketplace)9808",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:137"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:138"
          },
          {
            "label": "mintGoldDustERC721Address",
            "offset": 0,
            "slot": "154",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:139"
          },
          {
            "label": "mintGoldDustERC1155Address",
            "offset": 0,
            "slot": "155",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:141"
          },
          {
            "label": "idMarketItemsByContractByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7744_storage)))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:151"
          },
          {
            "label": "isSecondarySale",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7730_storage))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:167"
          },
          {
            "label": "collectorMintIdUsed",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustSetPrice",
            "src": "contracts/marketplace/MintGoldDustSetPrice.sol:89"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_contract(MintGoldDustMarketplace)9808": {
            "label": "contract MintGoldDustMarketplace",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7744_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7730_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(MarketItem)7744_storage)": {
            "label": "mapping(address => struct MintGoldDustMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7744_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ManageSecondarySale)7730_storage)": {
            "label": "mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionProps)7757_storage": {
            "label": "struct MintGoldDustMarketplace.AuctionProps",
            "members": [
              {
                "label": "auctionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "highestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ended",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ManageSecondarySale)7730_storage": {
            "label": "struct MintGoldDustMarketplace.ManageSecondarySale",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketItem)7744_storage": {
            "label": "struct MintGoldDustMarketplace.MarketItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isERC721",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "auctionProps",
                "type": "t_struct(AuctionProps)7757_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "354e7334b41969a5e78bcf88347c86f9d3402d9784d8e14537f2512870776519": {
      "address": "0xa8A2be2dd42Bf12Ca1701A554540278ae054F7d1",
      "txHash": "0x9426a11b31bebc36f1fa4aad7d12978c85a8b01a10b89a03d9c93bb8a7549b59",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "itemsSold",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:136"
          },
          {
            "label": "mintGoldDustMarketplace",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(MintGoldDustMarketplace)9808",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:137"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:138"
          },
          {
            "label": "mintGoldDustERC721Address",
            "offset": 0,
            "slot": "154",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:139"
          },
          {
            "label": "mintGoldDustERC1155Address",
            "offset": 0,
            "slot": "155",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:141"
          },
          {
            "label": "idMarketItemsByContractByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7744_storage)))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:151"
          },
          {
            "label": "isSecondarySale",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7730_storage))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:167"
          },
          {
            "label": "auctionIds",
            "offset": 0,
            "slot": "206",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplaceAuction",
            "src": "contracts/marketplace/MintGoldDustMarketplaceAuction.sol:29"
          },
          {
            "label": "checkBidder",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool))))",
            "contract": "MintGoldDustMarketplaceAuction",
            "src": "contracts/marketplace/MintGoldDustMarketplaceAuction.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_contract(MintGoldDustMarketplace)9808": {
            "label": "contract MintGoldDustMarketplace",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool))))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => mapping(address => bool))))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7744_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7730_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(MarketItem)7744_storage)": {
            "label": "mapping(address => struct MintGoldDustMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7744_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ManageSecondarySale)7730_storage)": {
            "label": "mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionProps)7757_storage": {
            "label": "struct MintGoldDustMarketplace.AuctionProps",
            "members": [
              {
                "label": "auctionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "highestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ended",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ManageSecondarySale)7730_storage": {
            "label": "struct MintGoldDustMarketplace.ManageSecondarySale",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketItem)7744_storage": {
            "label": "struct MintGoldDustMarketplace.MarketItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isERC721",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "auctionProps",
                "type": "t_struct(AuctionProps)7757_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ad9a7ab8138c819389a4395d12269729f60b1b144b125daa007adf1577cfa737": {
      "address": "0xc3d23ffad698aEBC31b71ed92AAF6394CE65E21D",
      "txHash": "0x7f7439290ef382734d83bb601a5dedbaef02148ee685ecbd5e57a46116c1ed4e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "userCounterMemoirs",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bytes_storage))",
            "contract": "MintGoldDustMemoir",
            "src": "contracts/marketplace/MintGoldDustMemoir.sol:13"
          },
          {
            "label": "userCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MintGoldDustMemoir",
            "src": "contracts/marketplace/MintGoldDustMemoir.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bytes_storage))": {
            "label": "mapping(address => mapping(uint256 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e078ea5d4b438958aff9d067001129f87775ba03f3766761f37c18af7d799f6a": {
      "address": "0x01cD89043F0cBd298c4aBEb97425031341a1E44F",
      "txHash": "0x44a9a8a736a916ac69d638580c4bad6e20213f6baf4f8bfc3f8749c3fa9cb1f9",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "itemsSold",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:136"
          },
          {
            "label": "mintGoldDustMarketplace",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(MintGoldDustMarketplace)9924",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:137"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:138"
          },
          {
            "label": "mintGoldDustERC721Address",
            "offset": 0,
            "slot": "154",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:139"
          },
          {
            "label": "mintGoldDustERC1155Address",
            "offset": 0,
            "slot": "155",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:141"
          },
          {
            "label": "idMarketItemsByContractByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage)))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:151"
          },
          {
            "label": "isSecondarySale",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:167"
          },
          {
            "label": "collectorMintIdUsed",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustSetPrice",
            "src": "contracts/marketplace/MintGoldDustSetPrice.sol:89"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_contract(MintGoldDustMarketplace)9924": {
            "label": "contract MintGoldDustMarketplace",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(MarketItem)7745_storage)": {
            "label": "mapping(address => struct MintGoldDustMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage)": {
            "label": "mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionProps)7758_storage": {
            "label": "struct MintGoldDustMarketplace.AuctionProps",
            "members": [
              {
                "label": "auctionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "highestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ended",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ManageSecondarySale)7731_storage": {
            "label": "struct MintGoldDustMarketplace.ManageSecondarySale",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketItem)7745_storage": {
            "label": "struct MintGoldDustMarketplace.MarketItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isERC721",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "auctionProps",
                "type": "t_struct(AuctionProps)7758_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "869d1be367f94fc6ceea935d35901117105a839ed3e2e6adad2e3273bc92fa2b": {
      "address": "0x04eE4D22bB98a693b8f819990d2CAB6C133C7319",
      "txHash": "0x07533e6719d3c041103a9de5e51119a68ecfe1a09f5eadb13097981fd0382b76",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "itemsSold",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:136"
          },
          {
            "label": "mintGoldDustMarketplace",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(MintGoldDustMarketplace)9924",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:137"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:138"
          },
          {
            "label": "mintGoldDustERC721Address",
            "offset": 0,
            "slot": "154",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:139"
          },
          {
            "label": "mintGoldDustERC1155Address",
            "offset": 0,
            "slot": "155",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:141"
          },
          {
            "label": "idMarketItemsByContractByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage)))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:151"
          },
          {
            "label": "isSecondarySale",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:167"
          },
          {
            "label": "auctionIds",
            "offset": 0,
            "slot": "206",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplaceAuction",
            "src": "contracts/marketplace/MintGoldDustMarketplaceAuction.sol:29"
          },
          {
            "label": "checkBidder",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool))))",
            "contract": "MintGoldDustMarketplaceAuction",
            "src": "contracts/marketplace/MintGoldDustMarketplaceAuction.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_contract(MintGoldDustMarketplace)9924": {
            "label": "contract MintGoldDustMarketplace",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool))))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => mapping(address => bool))))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(MarketItem)7745_storage)": {
            "label": "mapping(address => struct MintGoldDustMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage)": {
            "label": "mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionProps)7758_storage": {
            "label": "struct MintGoldDustMarketplace.AuctionProps",
            "members": [
              {
                "label": "auctionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "highestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ended",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ManageSecondarySale)7731_storage": {
            "label": "struct MintGoldDustMarketplace.ManageSecondarySale",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketItem)7745_storage": {
            "label": "struct MintGoldDustMarketplace.MarketItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isERC721",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "auctionProps",
                "type": "t_struct(AuctionProps)7758_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1a874e9cbbc45186030d4e955de0c0db043fc812976342070d15cd09e6b17ec8": {
      "address": "0xF2087AB1bB791a8dD13F08d3D2a47b37d3314dc4",
      "txHash": "0xc331adcdb59e8510e83cc758adff4735eea7bce9abcc3b4c16bab87feef43019",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "itemsSold",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:136"
          },
          {
            "label": "mintGoldDustMarketplace",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(MintGoldDustMarketplace)9987",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:137"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:138"
          },
          {
            "label": "mintGoldDustERC721Address",
            "offset": 0,
            "slot": "154",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:139"
          },
          {
            "label": "mintGoldDustERC1155Address",
            "offset": 0,
            "slot": "155",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:141"
          },
          {
            "label": "idMarketItemsByContractByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage)))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:151"
          },
          {
            "label": "isSecondarySale",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:167"
          },
          {
            "label": "collectorMintIdUsed",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustSetPrice",
            "src": "contracts/marketplace/MintGoldDustSetPrice.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_contract(MintGoldDustMarketplace)9987": {
            "label": "contract MintGoldDustMarketplace",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(MarketItem)7745_storage)": {
            "label": "mapping(address => struct MintGoldDustMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage)": {
            "label": "mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionProps)7758_storage": {
            "label": "struct MintGoldDustMarketplace.AuctionProps",
            "members": [
              {
                "label": "auctionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "highestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ended",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ManageSecondarySale)7731_storage": {
            "label": "struct MintGoldDustMarketplace.ManageSecondarySale",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketItem)7745_storage": {
            "label": "struct MintGoldDustMarketplace.MarketItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isERC721",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "auctionProps",
                "type": "t_struct(AuctionProps)7758_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "c50c1dd7f2fef2c3dbf1a7fcdda68ac70dcb152a992a29256df8cdbf5f1095f8": {
      "address": "0x356Ea48512420CC84363Ad3571F77D7d62db18D2",
      "txHash": "0xf7dd9559236322d09f14a06a1803bb5f688f450da6ab03086f502153fe5f5deb",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "itemsSold",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:136"
          },
          {
            "label": "mintGoldDustMarketplace",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(MintGoldDustMarketplace)9987",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:137"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:138"
          },
          {
            "label": "mintGoldDustERC721Address",
            "offset": 0,
            "slot": "154",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:139"
          },
          {
            "label": "mintGoldDustERC1155Address",
            "offset": 0,
            "slot": "155",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:141"
          },
          {
            "label": "idMarketItemsByContractByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage)))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:151"
          },
          {
            "label": "isSecondarySale",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:167"
          },
          {
            "label": "auctionIds",
            "offset": 0,
            "slot": "206",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplaceAuction",
            "src": "contracts/marketplace/MintGoldDustMarketplaceAuction.sol:29"
          },
          {
            "label": "checkBidder",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool))))",
            "contract": "MintGoldDustMarketplaceAuction",
            "src": "contracts/marketplace/MintGoldDustMarketplaceAuction.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_contract(MintGoldDustMarketplace)9987": {
            "label": "contract MintGoldDustMarketplace",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool))))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => mapping(address => bool))))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(MarketItem)7745_storage)": {
            "label": "mapping(address => struct MintGoldDustMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage)": {
            "label": "mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionProps)7758_storage": {
            "label": "struct MintGoldDustMarketplace.AuctionProps",
            "members": [
              {
                "label": "auctionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "highestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ended",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ManageSecondarySale)7731_storage": {
            "label": "struct MintGoldDustMarketplace.ManageSecondarySale",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketItem)7745_storage": {
            "label": "struct MintGoldDustMarketplace.MarketItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isERC721",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "auctionProps",
                "type": "t_struct(AuctionProps)7758_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
