{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x5D69C4aC749C9e76f15f566c227FcC1f9DF1592a",
    "txHash": "0xb4f80ae4db9561299b3914945573802e20ab0ca3388163ad13698585a76e1569"
  },
  "proxies": [
    {
      "address": "0x54B89630089E9fE3f5138b38a2f84Bb9Ce4F2978",
      "txHash": "0x3ca429ce932f1bb4d47cc8ab8d7f6f417bb02853fda26d29d9083ed6cac92f78",
      "kind": "transparent"
    },
    {
      "address": "0xBb78E27Ec1236D46E6D51b130665b701Cc5D89d0",
      "txHash": "0x857da91041a787246629bef8b363d1c7d2af06d414d119a1a4ce325aab32e48a",
      "kind": "transparent"
    },
    {
      "address": "0xCb9501C919859Fb8830bD27C33E26DAF10fE29ad",
      "txHash": "0x28db7e70b9fdfa68f7c0714d0490cdbc007d74cf4b40123114cc4f54e4c0bc5b",
      "kind": "transparent"
    },
    {
      "address": "0xB33ce29eeDc7c7c30461C284ecCB13621cb77278",
      "txHash": "0xcac8c75053b6212f8b2d8d4ce25aa194567cb448d4a3bbb2a0a7d230f29b73d8",
      "kind": "transparent"
    },
    {
      "address": "0x5A9894019b04E5b02FB8Aa6175F468c7bcDdBB95",
      "txHash": "0xc97d3393278a9ceb1202e74e223fc74083ddf4d44c168b76e9c045d5ea66edbb",
      "kind": "transparent"
    },
    {
      "address": "0x6D9bE0c6137be4f1fA8F690C218b69C00bb3a8bD",
      "txHash": "0xd84a203ce93d93c4865cd6972d2dfcff40c9a88802212634be6ecb244104daba",
      "kind": "transparent"
    }
  ],
  "impls": {
    "632431182acd15be85649f8ef025988d1e0b12d0687c07b5d6e109680808188b": {
      "address": "0xD5E2fd38888ba0E2BdD20BB14B45EA3cBD3cA0e5",
      "txHash": "0xc79e1ddf0545ebf11097a80b62ffa28d2ec7577a031e3ddd8e0f336653b85c31",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "primarySaleFeePercent",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:17"
          },
          {
            "label": "secondarySaleFeePercent",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:18"
          },
          {
            "label": "collectorFee",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:19"
          },
          {
            "label": "maxRoyalty",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:20"
          },
          {
            "label": "auctionDuration",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:21"
          },
          {
            "label": "auctionFinalMinutes",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:22"
          },
          {
            "label": "publicKey",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:23"
          },
          {
            "label": "isArtistApproved",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:25"
          },
          {
            "label": "isAddressValidator",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ad9a7ab8138c819389a4395d12269729f60b1b144b125daa007adf1577cfa737": {
      "address": "0x43F8dAC8342581b945b6633ba4dE4235Bb00EC2D",
      "txHash": "0xd5b3a908ccb3f12eb713ffc7b30f32a34d0679c479c159ff04a375a2170c902c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "userCounterMemoirs",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bytes_storage))",
            "contract": "MintGoldDustMemoir",
            "src": "contracts/marketplace/MintGoldDustMemoir.sol:13"
          },
          {
            "label": "userCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MintGoldDustMemoir",
            "src": "contracts/marketplace/MintGoldDustMemoir.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bytes_storage))": {
            "label": "mapping(address => mapping(uint256 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8a4649d3c059a53a205ac15282be95ce4428173939f17eaf9916c363ad3e24a5": {
      "address": "0x0bb2de776b7D4c2B0fc98DBca0c9A74D7d26ff98",
      "txHash": "0x644d942438829173fdb8a63f20d49968460943221806fbfa088d8c1d5d68bc9a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:36"
          },
          {
            "label": "mintGoldDustSetPriceAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:37"
          },
          {
            "label": "mintGoldDustMarketplaceAuctionAddress",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:38"
          },
          {
            "label": "tokenIdArtist",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:40"
          },
          {
            "label": "tokenIdRoyaltyPercent",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:41"
          },
          {
            "label": "tokenIdMemoir",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:43"
          },
          {
            "label": "tokenCollaborators",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_array(t_address)4_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:45"
          },
          {
            "label": "tokenIdCollaboratorsPercentage",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_array(t_uint256)5_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:46"
          },
          {
            "label": "hasTokenCollaborators",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:48"
          },
          {
            "label": "tokenIdCollaboratorsQuantity",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:49"
          },
          {
            "label": "tokenWasSold",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:51"
          },
          {
            "label": "primarySaleQuantityToSold",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "313",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:76"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "361",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustERC721",
            "src": "contracts/marketplace/MintGoldDustERC721.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)4_storage": {
            "label": "address[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]",
            "numberOfBytes": "160"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)4_storage)": {
            "label": "mapping(uint256 => address[4])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)5_storage)": {
            "label": "mapping(uint256 => uint256[5])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "288d21bdac3286d7b995912ee0f0b262275284921c14c9b28c501d8f0b24a0f5": {
      "address": "0x9897604A7BA7D097f6304EF38aA3763555a09329",
      "txHash": "0x1dd61d3b340849ce70170ba26ff7c14f4e8e91e3d30c43d4ca7bcada8ac11f47",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:36"
          },
          {
            "label": "mintGoldDustSetPriceAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:37"
          },
          {
            "label": "mintGoldDustMarketplaceAuctionAddress",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:38"
          },
          {
            "label": "tokenIdArtist",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:40"
          },
          {
            "label": "tokenIdRoyaltyPercent",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:41"
          },
          {
            "label": "tokenIdMemoir",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:43"
          },
          {
            "label": "tokenCollaborators",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_array(t_address)4_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:45"
          },
          {
            "label": "tokenIdCollaboratorsPercentage",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_array(t_uint256)5_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:46"
          },
          {
            "label": "hasTokenCollaborators",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:48"
          },
          {
            "label": "tokenIdCollaboratorsQuantity",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:49"
          },
          {
            "label": "tokenWasSold",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:51"
          },
          {
            "label": "primarySaleQuantityToSold",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "313",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:76"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "361",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustERC1155",
            "src": "contracts/marketplace/MintGoldDustERC1155.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)4_storage": {
            "label": "address[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]",
            "numberOfBytes": "160"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)4_storage)": {
            "label": "mapping(uint256 => address[4])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)5_storage)": {
            "label": "mapping(uint256 => uint256[5])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1a874e9cbbc45186030d4e955de0c0db043fc812976342070d15cd09e6b17ec8": {
      "address": "0x1F21ce268B7D745A94DC6A815E99D34e7aaB5082",
      "txHash": "0xc4b96ba2f2e0cb689fafafb37df4feaa2a152b95e2bbb3e304b24c9823f1f6db",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "itemsSold",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:136"
          },
          {
            "label": "mintGoldDustMarketplace",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(MintGoldDustMarketplace)9987",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:137"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:138"
          },
          {
            "label": "mintGoldDustERC721Address",
            "offset": 0,
            "slot": "154",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:139"
          },
          {
            "label": "mintGoldDustERC1155Address",
            "offset": 0,
            "slot": "155",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:141"
          },
          {
            "label": "idMarketItemsByContractByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage)))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:151"
          },
          {
            "label": "isSecondarySale",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:167"
          },
          {
            "label": "collectorMintIdUsed",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustSetPrice",
            "src": "contracts/marketplace/MintGoldDustSetPrice.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_contract(MintGoldDustMarketplace)9987": {
            "label": "contract MintGoldDustMarketplace",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(MarketItem)7745_storage)": {
            "label": "mapping(address => struct MintGoldDustMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage)": {
            "label": "mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionProps)7758_storage": {
            "label": "struct MintGoldDustMarketplace.AuctionProps",
            "members": [
              {
                "label": "auctionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "highestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ended",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ManageSecondarySale)7731_storage": {
            "label": "struct MintGoldDustMarketplace.ManageSecondarySale",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketItem)7745_storage": {
            "label": "struct MintGoldDustMarketplace.MarketItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isERC721",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "auctionProps",
                "type": "t_struct(AuctionProps)7758_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c50c1dd7f2fef2c3dbf1a7fcdda68ac70dcb152a992a29256df8cdbf5f1095f8": {
      "address": "0x4D14FA2c01CC025A00f692CbDb12f5DD5FF37658",
      "txHash": "0x447cc75d51a461eda1bf9cfefcc56d58b4804db2ffc2713d843db3005be41a3c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "itemsSold",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:136"
          },
          {
            "label": "mintGoldDustMarketplace",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(MintGoldDustMarketplace)9987",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:137"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:138"
          },
          {
            "label": "mintGoldDustERC721Address",
            "offset": 0,
            "slot": "154",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:139"
          },
          {
            "label": "mintGoldDustERC1155Address",
            "offset": 0,
            "slot": "155",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:141"
          },
          {
            "label": "idMarketItemsByContractByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage)))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:151"
          },
          {
            "label": "isSecondarySale",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:167"
          },
          {
            "label": "auctionIds",
            "offset": 0,
            "slot": "206",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplaceAuction",
            "src": "contracts/marketplace/MintGoldDustMarketplaceAuction.sol:29"
          },
          {
            "label": "checkBidder",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool))))",
            "contract": "MintGoldDustMarketplaceAuction",
            "src": "contracts/marketplace/MintGoldDustMarketplaceAuction.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_contract(MintGoldDustMarketplace)9987": {
            "label": "contract MintGoldDustMarketplace",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool))))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => mapping(address => bool))))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(MarketItem)7745_storage)": {
            "label": "mapping(address => struct MintGoldDustMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage)": {
            "label": "mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionProps)7758_storage": {
            "label": "struct MintGoldDustMarketplace.AuctionProps",
            "members": [
              {
                "label": "auctionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "highestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ended",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ManageSecondarySale)7731_storage": {
            "label": "struct MintGoldDustMarketplace.ManageSecondarySale",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketItem)7745_storage": {
            "label": "struct MintGoldDustMarketplace.MarketItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isERC721",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "auctionProps",
                "type": "t_struct(AuctionProps)7758_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
