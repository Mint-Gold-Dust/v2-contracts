{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xb2768233be3c57b81C42a348DBCe2A7F8adEE02C",
    "txHash": "0x35969d1598b428e9e47c9e94b30dd1036fe9d9202c0c2b0fd0de28b4ef93de20"
  },
  "proxies": [
    {
      "address": "0x2f648fc2445bB5F60E8A41Ea573a750455EcCab8",
      "txHash": "0x81723d75de9675b9b11ffdebc8169df8f0c0315d9ae8a6233bc101a8b076656c",
      "kind": "transparent"
    },
    {
      "address": "0x7F86cC2641C399a7A89b9eb92db5D31Ea685A543",
      "txHash": "0x718aff87ce9ace2927d1e4711670580a25ad4ec9a330d06dfe920dd95bb72562",
      "kind": "transparent"
    },
    {
      "address": "0xE4069D2a23aDA8d4Dff67D93d7d573Af0FFec11B",
      "txHash": "0xabab68150011b812349fdaac0ce548bd7e4705e9e0a03cce8e25432f89fd2a32",
      "kind": "transparent"
    },
    {
      "address": "0x9A6374F6e67C817039749D6e569270b16C6c4dff",
      "txHash": "0xfbcc4f0161c20d9aab1c1a5269b4f67f09d40af2b4b00aafdf1b41888f7ce21e",
      "kind": "transparent"
    },
    {
      "address": "0x096073BD9995fbA2Da01bEE8baf4022A51D517FC",
      "txHash": "0x2005e1e3682006247fcb8bccb3e3f8b8ad1853d13d22bd9136c3c99d398ed2d7",
      "kind": "transparent"
    },
    {
      "address": "0x1e593bF250f1b2Cfc819f19B49d8784C0BBd37DB",
      "txHash": "0x57042ed28c164a26379245d531f2e66e69a38cb3006e8e458c3c2955391370e2",
      "kind": "transparent"
    },
    {
      "address": "0x235B2f97EFbb3b89F1685fA8c64e68cba1A227B2",
      "txHash": "0xe163ef51e3c82d6ebe5d375f215e537fe40f4896f0c8b5d12f950c82358e713e",
      "kind": "transparent"
    },
    {
      "address": "0x3205fBA460FA91b2E41F42c21205F0bdecED74B2",
      "txHash": "0xd854b41e9bb0af08512ff9669487a0699ebb8d24a1a97921d08991ba68451c91",
      "kind": "transparent"
    },
    {
      "address": "0xBf45c436ea62b8c5be2c581F4Dd34c758a0fA740",
      "txHash": "0xf65b42e2c59357ae8ecaa59bfe489922faaf94581ddb65888a542efc31fe6cbb",
      "kind": "transparent"
    },
    {
      "address": "0xD5AE4F319c39b5Fb3e442C600b606ECeAd70f026",
      "txHash": "0xe1e6dbad6308299cf29d2ff322e113c2934faadaddb9e234e473a592a64d8c4d",
      "kind": "transparent"
    },
    {
      "address": "0x21520b9aC92E7Dcb129FCAcA2Bd02Dfa302545EF",
      "txHash": "0xeef2ccd13d713b1164368c7d87837ca0de60e4478de8f433f9dd4d7f7d8413d8",
      "kind": "transparent"
    },
    {
      "address": "0x37527030499a08770326d85465361697666E1D55",
      "txHash": "0x504bc16c7350f4bc0ae41560d09d5f93be90efec84e8697b4b910b5ba989c052",
      "kind": "transparent"
    },
    {
      "address": "0xbC13fa6d21b47725ce7982aa3Cd62146C8cD2e93",
      "txHash": "0x879b9333299bc1540697223fb75d6f9733a7e339c4fb56f4ce8a44b309f14a92",
      "kind": "transparent"
    },
    {
      "address": "0x96AC1A9F6861C63fe6AfDd6C796384fFe5591557",
      "txHash": "0x18be4d9ce0566585880fb971e096efe70e60cb31ace992d22eea078226645f47",
      "kind": "transparent"
    },
    {
      "address": "0x73A0a90cAB44e8fbC10112A5F6647220c7794776",
      "txHash": "0x03d632c4b84e97714114871ad4d8770e74ddeee3d7df1a5254cf7f0c02d56b1f",
      "kind": "transparent"
    },
    {
      "address": "0x82E05C777AfC2955e47328eEC1B5d81421889570",
      "txHash": "0xf451764aa8a7125a4f55922beb88b7f71f8d4b02bfca4e0cc01caffe053dfdeb",
      "kind": "transparent"
    },
    {
      "address": "0xe0bc1951cE90F5976ae2320FBD3DF153af4293a2",
      "txHash": "0xd21e2bfded4ee1f82dfd37de6fba57b530cdd46f17870ea4e44be7fc360629cd",
      "kind": "transparent"
    },
    {
      "address": "0x492b73124A43226928E522893577b30bABBf146A",
      "txHash": "0xcdab9a9c4e92033f3dd88b2b26a3954ce406b3e1f6899a84a2cf0b2937e8ea13",
      "kind": "transparent"
    },
    {
      "address": "0x4aC3302E15e589b08624e98cc0dD53B4C25bfC88",
      "txHash": "0xb0fa5801f71d5a8878a5624a39d680a3d0bbc72d4db51176839b5ac2fbf6ba67",
      "kind": "transparent"
    },
    {
      "address": "0xF0874372A52332b47cB440b0FBB270F3e856Bffd",
      "txHash": "0xdb79f60233606c69015d8924101d25293b153669d62783143fdfb5ebd271030c",
      "kind": "transparent"
    },
    {
      "address": "0xB55d39AD43FDf385EaA3a04Cd44bd5117743a9D4",
      "txHash": "0x31b3bccb21715c0acf2e809a49765586fb2f169d8428d7634ddec93fba9e6abb",
      "kind": "transparent"
    },
    {
      "address": "0x1466bD4cB95B66D630c8AdA0f0BC54254b27B954",
      "txHash": "0x06d01e43edd035cac47bb21732f0b9f8ffe4fddd575ecd920666645c02278af8",
      "kind": "transparent"
    },
    {
      "address": "0xd58fF67635709cF42c9Ab4775d9Ea0CdD7f367d3",
      "txHash": "0x5cd2a8f2246baee4cb1bdcbcd1ca9f8f387b1509fe17d0f7fd6efadee68a671b",
      "kind": "transparent"
    },
    {
      "address": "0x75DE83Cc4eae10b0DBb74320677b0716E97F5c47",
      "txHash": "0x80309420fe26d3896b2be50724b02101e071e78078b4f5e84221f802d4c7deb2",
      "kind": "transparent"
    },
    {
      "address": "0x700A07E6f1A6441e015cbDb6DcB61c3E22C5D93a",
      "txHash": "0x82e07401d0b8e4fb2754bc1d3ce15cf129cfb3b4b363c5435073665c03527ec5",
      "kind": "transparent"
    },
    {
      "address": "0x35973c75C0be975a2258EAD3C7731406aA198123",
      "txHash": "0x7a0593f5f9146727e1d934905543f4cd6b4cd3a01c1e0ebc059f8414387f00c4",
      "kind": "transparent"
    },
    {
      "address": "0xA41835a540df81624565D710189e0Cf880e350cB",
      "txHash": "0x670df84448b56a500bc79447b85d8323f551e8fa528bb156b878a6752d82454e",
      "kind": "transparent"
    },
    {
      "address": "0x1ac9449241475a6d4284b7da48c6a732a3C062dF",
      "txHash": "0x5188e8f03a2f9b8f9e5397f0c154feb2fa18a233f71565d4c4cdc3dbd1968289",
      "kind": "transparent"
    },
    {
      "address": "0xBc70F666DA3AfBFA14657dB057c1f7375A481bF4",
      "txHash": "0x46a9d37127c698961a5780eb412c208923749b1ecd0ecc75aef93e635c41a5a7",
      "kind": "transparent"
    },
    {
      "address": "0xE0f4Ef5Ff295B911BC1E823cD2b110b67E1DD3CF",
      "txHash": "0xd70d1681d711f6b51bc886ffaa06ff1d5d3b627f1ac3ff7123fa82de46aac7f3",
      "kind": "transparent"
    },
    {
      "address": "0xe7c27a90eAFFB6098C5F4363C7e768B87aF4Bc50",
      "txHash": "0xe22c9545e612598c0452353972ccea6d4b14f769d95d3715f8b3543b45598517",
      "kind": "transparent"
    },
    {
      "address": "0x0caF74FBCb990CCb728751ef5FD7BDb79Ac15E7D",
      "txHash": "0x9a3d6c31e959416dc4adb25b21080eb743925c98926b9a80db4882316d514d1a",
      "kind": "transparent"
    },
    {
      "address": "0xE8670Fac680132220cD7d7C51543B037514196a7",
      "txHash": "0x6125138968fd239fbd26b16a33c62e753d02816c3dc687bc554ffe5a45e496c7",
      "kind": "transparent"
    },
    {
      "address": "0x74A5ff688497826f5909Eb309f767070546A7661",
      "txHash": "0x6a508c2e4dd2608daede644aeba25e1364814754648cf5a86c0c66567b7c20a3",
      "kind": "transparent"
    },
    {
      "address": "0x1A0E07C2F5EC4D69CD7295634cE8d3651AdBf914",
      "txHash": "0x96c3563f90a22fd084ab9915034ed889058a5ec3aa66e9e1fa5a805436d8a480",
      "kind": "transparent"
    },
    {
      "address": "0xcf5F46Bb114565F514d7D0FffaEE72Aa4D0B8380",
      "txHash": "0x8dd0e394236b871f8d9cc28d81967ba1e9e47f06cc0b8d969dfb579fe246a83f",
      "kind": "transparent"
    }
  ],
  "impls": {
    "632431182acd15be85649f8ef025988d1e0b12d0687c07b5d6e109680808188b": {
      "address": "0x2833C04e0e0b302263e37DC06183EA60Ce63D406",
      "txHash": "0x99603dba7a610241e1972ae992b4b78b0bdeba8782967cfac4c27548ac43b015",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "primarySaleFeePercent",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:17"
          },
          {
            "label": "secondarySaleFeePercent",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:18"
          },
          {
            "label": "collectorFee",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:19"
          },
          {
            "label": "maxRoyalty",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:20"
          },
          {
            "label": "auctionDuration",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:21"
          },
          {
            "label": "auctionFinalMinutes",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:22"
          },
          {
            "label": "publicKey",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:23"
          },
          {
            "label": "isArtistApproved",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:25"
          },
          {
            "label": "isAddressValidator",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fb0a6b605e81e93d9d367b9ea8b95bdbf9fac1af3c19e2ed0c668b1b5e04cc76": {
      "address": "0x162d868Eb740129B12FB5De90F9023fb2453d60d",
      "txHash": "0x91e2cf92e0e620206f57129d3242573473652de0bdea8dc0f47c80662b4236ad",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "primarySaleFeePercent",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:17"
          },
          {
            "label": "secondarySaleFeePercent",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:18"
          },
          {
            "label": "collectorFee",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:19"
          },
          {
            "label": "maxRoyalty",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:20"
          },
          {
            "label": "auctionDuration",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:21"
          },
          {
            "label": "auctionFinalMinutes",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:22"
          },
          {
            "label": "publicKey",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:23"
          },
          {
            "label": "isArtistApproved",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:25"
          },
          {
            "label": "isAddressValidator",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:26"
          },
          {
            "label": "testName",
            "offset": 0,
            "slot": "110",
            "type": "t_string_storage",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bce1b86103d85ab892791e46a9d19b8a2437ae658842580c0d91ef5bd74529f7": {
      "address": "0x756630B9Ea06AcF8a9870b96Af01FB99a85d46BF",
      "txHash": "0x1991d1c14137b0db6fd9a5ae9a1d587b93b219eb3c3fa9e56b20de25a9838f82",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "primarySaleFeePercent",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:17"
          },
          {
            "label": "secondarySaleFeePercent",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:18"
          },
          {
            "label": "collectorFee",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:19"
          },
          {
            "label": "maxRoyalty",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:20"
          },
          {
            "label": "auctionDuration",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:21"
          },
          {
            "label": "auctionFinalMinutes",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:22"
          },
          {
            "label": "publicKey",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:23"
          },
          {
            "label": "isArtistApproved",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:25"
          },
          {
            "label": "isAddressValidator",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:26"
          },
          {
            "label": "testName",
            "offset": 0,
            "slot": "110",
            "type": "t_string_storage",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:110"
          },
          {
            "label": "testName2",
            "offset": 0,
            "slot": "111",
            "type": "t_string_storage",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:116"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ad9a7ab8138c819389a4395d12269729f60b1b144b125daa007adf1577cfa737": {
      "address": "0x0A710E64521aEdb7Fd81Db93Ef03De8fc08C9dF7",
      "txHash": "0x62155890439aa6a0b3830cd186de983b78a8069251c2372d9aee9ad81146e1b7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "userCounterMemoirs",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bytes_storage))",
            "contract": "MintGoldDustMemoir",
            "src": "contracts/marketplace/MintGoldDustMemoir.sol:13"
          },
          {
            "label": "userCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MintGoldDustMemoir",
            "src": "contracts/marketplace/MintGoldDustMemoir.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bytes_storage))": {
            "label": "mapping(address => mapping(uint256 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8a4649d3c059a53a205ac15282be95ce4428173939f17eaf9916c363ad3e24a5": {
      "address": "0x890C97a03312DC0a61D881D2a62893b546e2df2f",
      "txHash": "0x2ad230c26c46d02c996fa3def5d855feb6918ea39bdbfe32f0336314b0bcac77",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:36"
          },
          {
            "label": "mintGoldDustSetPriceAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:37"
          },
          {
            "label": "mintGoldDustMarketplaceAuctionAddress",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:38"
          },
          {
            "label": "tokenIdArtist",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:40"
          },
          {
            "label": "tokenIdRoyaltyPercent",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:41"
          },
          {
            "label": "tokenIdMemoir",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:43"
          },
          {
            "label": "tokenCollaborators",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_array(t_address)4_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:45"
          },
          {
            "label": "tokenIdCollaboratorsPercentage",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_array(t_uint256)5_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:46"
          },
          {
            "label": "hasTokenCollaborators",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:48"
          },
          {
            "label": "tokenIdCollaboratorsQuantity",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:49"
          },
          {
            "label": "tokenWasSold",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:51"
          },
          {
            "label": "primarySaleQuantityToSold",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "313",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:76"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "361",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustERC721",
            "src": "contracts/marketplace/MintGoldDustERC721.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)4_storage": {
            "label": "address[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]",
            "numberOfBytes": "160"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)4_storage)": {
            "label": "mapping(uint256 => address[4])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)5_storage)": {
            "label": "mapping(uint256 => uint256[5])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "288d21bdac3286d7b995912ee0f0b262275284921c14c9b28c501d8f0b24a0f5": {
      "address": "0xcAb9F8ce25e9a8E5E7395Ae2108441B93a85A34a",
      "txHash": "0x14ecf3c4404d24746681e7041dedc323f0a681d4ab2b3833d453f0c6eab10a3d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:36"
          },
          {
            "label": "mintGoldDustSetPriceAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:37"
          },
          {
            "label": "mintGoldDustMarketplaceAuctionAddress",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:38"
          },
          {
            "label": "tokenIdArtist",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:40"
          },
          {
            "label": "tokenIdRoyaltyPercent",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:41"
          },
          {
            "label": "tokenIdMemoir",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:43"
          },
          {
            "label": "tokenCollaborators",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_array(t_address)4_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:45"
          },
          {
            "label": "tokenIdCollaboratorsPercentage",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_array(t_uint256)5_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:46"
          },
          {
            "label": "hasTokenCollaborators",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:48"
          },
          {
            "label": "tokenIdCollaboratorsQuantity",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:49"
          },
          {
            "label": "tokenWasSold",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:51"
          },
          {
            "label": "primarySaleQuantityToSold",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:53"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "313",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:76"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "361",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustERC1155",
            "src": "contracts/marketplace/MintGoldDustERC1155.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)4_storage": {
            "label": "address[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]",
            "numberOfBytes": "160"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)4_storage)": {
            "label": "mapping(uint256 => address[4])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)5_storage)": {
            "label": "mapping(uint256 => uint256[5])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e078ea5d4b438958aff9d067001129f87775ba03f3766761f37c18af7d799f6a": {
      "address": "0xCc155bC0Dc191F1d4590872a26BE3b295902EED0",
      "txHash": "0x44532085695f6c544e8dd8710c30b544900d9500fa017a84c2a5c2fb19c624a1",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "itemsSold",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:136"
          },
          {
            "label": "mintGoldDustMarketplace",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(MintGoldDustMarketplace)9924",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:137"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:138"
          },
          {
            "label": "mintGoldDustERC721Address",
            "offset": 0,
            "slot": "154",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:139"
          },
          {
            "label": "mintGoldDustERC1155Address",
            "offset": 0,
            "slot": "155",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:141"
          },
          {
            "label": "idMarketItemsByContractByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage)))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:151"
          },
          {
            "label": "isSecondarySale",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:167"
          },
          {
            "label": "collectorMintIdUsed",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustSetPrice",
            "src": "contracts/marketplace/MintGoldDustSetPrice.sol:89"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_contract(MintGoldDustMarketplace)9924": {
            "label": "contract MintGoldDustMarketplace",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(MarketItem)7745_storage)": {
            "label": "mapping(address => struct MintGoldDustMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage)": {
            "label": "mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionProps)7758_storage": {
            "label": "struct MintGoldDustMarketplace.AuctionProps",
            "members": [
              {
                "label": "auctionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "highestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ended",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ManageSecondarySale)7731_storage": {
            "label": "struct MintGoldDustMarketplace.ManageSecondarySale",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketItem)7745_storage": {
            "label": "struct MintGoldDustMarketplace.MarketItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isERC721",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "auctionProps",
                "type": "t_struct(AuctionProps)7758_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "869d1be367f94fc6ceea935d35901117105a839ed3e2e6adad2e3273bc92fa2b": {
      "address": "0x8487e1787AE96867080436A2c273B360817C3260",
      "txHash": "0xda48bbc7450b507ae3ef816a01fe7badd29fd1e314f7e99e8d679f04adedbe7a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "itemsSold",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:136"
          },
          {
            "label": "mintGoldDustMarketplace",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(MintGoldDustMarketplace)9924",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:137"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:138"
          },
          {
            "label": "mintGoldDustERC721Address",
            "offset": 0,
            "slot": "154",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:139"
          },
          {
            "label": "mintGoldDustERC1155Address",
            "offset": 0,
            "slot": "155",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:141"
          },
          {
            "label": "idMarketItemsByContractByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage)))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:151"
          },
          {
            "label": "isSecondarySale",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:167"
          },
          {
            "label": "auctionIds",
            "offset": 0,
            "slot": "206",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplaceAuction",
            "src": "contracts/marketplace/MintGoldDustMarketplaceAuction.sol:29"
          },
          {
            "label": "checkBidder",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool))))",
            "contract": "MintGoldDustMarketplaceAuction",
            "src": "contracts/marketplace/MintGoldDustMarketplaceAuction.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_contract(MintGoldDustMarketplace)9924": {
            "label": "contract MintGoldDustMarketplace",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool))))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => mapping(address => bool))))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(MarketItem)7745_storage)": {
            "label": "mapping(address => struct MintGoldDustMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7745_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ManageSecondarySale)7731_storage)": {
            "label": "mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionProps)7758_storage": {
            "label": "struct MintGoldDustMarketplace.AuctionProps",
            "members": [
              {
                "label": "auctionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "highestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ended",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ManageSecondarySale)7731_storage": {
            "label": "struct MintGoldDustMarketplace.ManageSecondarySale",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketItem)7745_storage": {
            "label": "struct MintGoldDustMarketplace.MarketItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isERC721",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "auctionProps",
                "type": "t_struct(AuctionProps)7758_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "30371c15e17efbda461e446552f277b13a91b11bcba93892b938c7eb5afb3387": {
      "address": "0xcd7BD7988D8eBb27e4A9F45E8ea519968BF549cA",
      "txHash": "0x0bc1d943fa47a9b44902fc931d545c7602eb949197dd29e90365cbcabd876245",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "primarySaleFeePercent",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:17"
          },
          {
            "label": "secondarySaleFeePercent",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:18"
          },
          {
            "label": "collectorFee",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:19"
          },
          {
            "label": "maxRoyalty",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:20"
          },
          {
            "label": "auctionDuration",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:21"
          },
          {
            "label": "auctionFinalMinutes",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:22"
          },
          {
            "label": "publicKey",
            "offset": 0,
            "slot": "107",
            "type": "t_address",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:23"
          },
          {
            "label": "isArtistApproved",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:25"
          },
          {
            "label": "isAddressValidator",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8a9ac129f0212837d9c71cd1d1d1dfcb7cfa3b45cec5e09c802cac09c203f806": {
      "address": "0x4806cEfaab787F426ABDdbBb567104A75EBE825a",
      "txHash": "0xd786a4e7ce45edeaff473a6eba754c84f46c89e59114b136b008280d18be63dc",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "userCounterMemoirs",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bytes_storage))",
            "contract": "MintGoldDustMemoir",
            "src": "contracts/marketplace/MintGoldDustMemoir.sol:13"
          },
          {
            "label": "userCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MintGoldDustMemoir",
            "src": "contracts/marketplace/MintGoldDustMemoir.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bytes_storage))": {
            "label": "mapping(address => mapping(uint256 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "95ec66fcd3e5c42222fd1b49370829446ad169a793a8aff11014fd8de456585f": {
      "address": "0xB5C7A37899AcBC036d5B5eE79f07b7443EEf6C5e",
      "txHash": "0xaf048b379240e715519b07406321e19badccbb427a4afb2696832825685748b9",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:35"
          },
          {
            "label": "mintGoldDustSetPriceAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:36"
          },
          {
            "label": "mintGoldDustMarketplaceAuctionAddress",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:37"
          },
          {
            "label": "tokenIdArtist",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:39"
          },
          {
            "label": "tokenIdRoyaltyPercent",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:40"
          },
          {
            "label": "tokenIdMemoir",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:42"
          },
          {
            "label": "tokenCollaborators",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:44"
          },
          {
            "label": "tokenIdCollaboratorsPercentage",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:45"
          },
          {
            "label": "hasTokenCollaborators",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:47"
          },
          {
            "label": "tokenIdCollaboratorsQuantity",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:48"
          },
          {
            "label": "tokenWasSold",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:50"
          },
          {
            "label": "primarySaleQuantityToSold",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:52"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "313",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:75"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "361",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustERC721",
            "src": "contracts/marketplace/MintGoldDustERC721.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "98c0ff2a376f32c511738322070f0f686577ae72a45d9f871810eda4b6f1337b": {
      "address": "0xC17A0B0AA0cE9853c37F4D207D498c4dd3691591",
      "txHash": "0x4a3eab3f93c871e0a7b44c6cf4270fedc080d2217aad74fbed3789f0de0f6f25",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:35"
          },
          {
            "label": "mintGoldDustSetPriceAddress",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:36"
          },
          {
            "label": "mintGoldDustMarketplaceAuctionAddress",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:37"
          },
          {
            "label": "tokenIdArtist",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:39"
          },
          {
            "label": "tokenIdRoyaltyPercent",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:40"
          },
          {
            "label": "tokenIdMemoir",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:42"
          },
          {
            "label": "tokenCollaborators",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:44"
          },
          {
            "label": "tokenIdCollaboratorsPercentage",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:45"
          },
          {
            "label": "hasTokenCollaborators",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:47"
          },
          {
            "label": "tokenIdCollaboratorsQuantity",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:48"
          },
          {
            "label": "tokenWasSold",
            "offset": 0,
            "slot": "311",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:50"
          },
          {
            "label": "primarySaleQuantityToSold",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:52"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "313",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:75"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "361",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustERC1155",
            "src": "contracts/marketplace/MintGoldDustERC1155.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ebc3adacb817e5b621c1e12cf0292a7d6f27c4fed775f621d0f6edc1a814587d": {
      "address": "0x974456dc7753946c61C05A9E52875CEAb2724395",
      "txHash": "0xb43f3ea01dc1cdee0e88dba57554f733bca635027c12c5000cf417f5b162fbca",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "itemsSold",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:136"
          },
          {
            "label": "mintGoldDustMarketplace",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(MintGoldDustMarketplace)9891",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:137"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:138"
          },
          {
            "label": "mintGoldDustERC721Address",
            "offset": 0,
            "slot": "154",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:139"
          },
          {
            "label": "mintGoldDustERC1155Address",
            "offset": 0,
            "slot": "155",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:141"
          },
          {
            "label": "idMarketItemsByContractByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7751_storage)))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:151"
          },
          {
            "label": "isSecondarySale",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7737_storage))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:167"
          },
          {
            "label": "collectorMintIdUsed",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustSetPrice",
            "src": "contracts/marketplace/MintGoldDustSetPrice.sol:70"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_contract(MintGoldDustMarketplace)9891": {
            "label": "contract MintGoldDustMarketplace",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7751_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7737_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(MarketItem)7751_storage)": {
            "label": "mapping(address => struct MintGoldDustMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7751_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ManageSecondarySale)7737_storage)": {
            "label": "mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionProps)7764_storage": {
            "label": "struct MintGoldDustMarketplace.AuctionProps",
            "members": [
              {
                "label": "auctionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "highestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ended",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ManageSecondarySale)7737_storage": {
            "label": "struct MintGoldDustMarketplace.ManageSecondarySale",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketItem)7751_storage": {
            "label": "struct MintGoldDustMarketplace.MarketItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isERC721",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "auctionProps",
                "type": "t_struct(AuctionProps)7764_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "12f4d0a61f1db1545a18c2c77e8a2c9d74f3699b68069b7994aa4cb5bb29322f": {
      "address": "0x8f12b2773F342f8287CAEbcF9fd32E941A8Bd584",
      "txHash": "0xcf357d4068e736bb020652b73722ffcdc06329ebe32e10511c49e8c60c6612f1",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "itemsSold",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:136"
          },
          {
            "label": "mintGoldDustMarketplace",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(MintGoldDustMarketplace)9891",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:137"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(MintGoldDustCompany)7171",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:138"
          },
          {
            "label": "mintGoldDustERC721Address",
            "offset": 0,
            "slot": "154",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:139"
          },
          {
            "label": "mintGoldDustERC1155Address",
            "offset": 0,
            "slot": "155",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:140"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)48_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:141"
          },
          {
            "label": "idMarketItemsByContractByOwner",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7751_storage)))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:151"
          },
          {
            "label": "isSecondarySale",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7737_storage))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:167"
          },
          {
            "label": "auctionIds",
            "offset": 0,
            "slot": "206",
            "type": "t_struct(Counter)5296_storage",
            "contract": "MintGoldDustMarketplaceAuction",
            "src": "contracts/marketplace/MintGoldDustMarketplaceAuction.sol:29"
          },
          {
            "label": "checkBidder",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool))))",
            "contract": "MintGoldDustMarketplaceAuction",
            "src": "contracts/marketplace/MintGoldDustMarketplaceAuction.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MintGoldDustCompany)7171": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_contract(MintGoldDustMarketplace)9891": {
            "label": "contract MintGoldDustMarketplace",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool))))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => mapping(address => bool))))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_bool)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7751_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(ManageSecondarySale)7737_storage))": {
            "label": "mapping(address => mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(MarketItem)7751_storage)": {
            "label": "mapping(address => struct MintGoldDustMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)7751_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ManageSecondarySale)7737_storage)": {
            "label": "mapping(uint256 => struct MintGoldDustMarketplace.ManageSecondarySale)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionProps)7764_storage": {
            "label": "struct MintGoldDustMarketplace.AuctionProps",
            "members": [
              {
                "label": "auctionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "highestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ended",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Counter)5296_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ManageSecondarySale)7737_storage": {
            "label": "struct MintGoldDustMarketplace.ManageSecondarySale",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketItem)7751_storage": {
            "label": "struct MintGoldDustMarketplace.MarketItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isERC721",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "auctionProps",
                "type": "t_struct(AuctionProps)7764_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
