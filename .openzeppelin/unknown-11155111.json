{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x8D18db390867AdFCa1Cd901044cF71e128e97852",
    "txHash": "0x3d52378b752cc2e5a38c5f0b5c852363f2feb4b0660e00e5c7eacdbc12aebe37"
  },
  "proxies": [
    {
      "address": "0x0f8575C401546e27746cDAAb482F22479eC95b32",
      "txHash": "0x284e164b24d5c9c1d40053f8fb0890c1880e9bba4f1550cea484617786fc8ea5",
      "kind": "transparent"
    },
    {
      "address": "0x630DB5056472c4a3324e5a8a58004170A5a542D2",
      "txHash": "0xcfbb947688b3ccef7ef9f97bbe9305f98ad8ccff89fdc783e889a9d6858681cb",
      "kind": "transparent"
    },
    {
      "address": "0xBf45c436ea62b8c5be2c581F4Dd34c758a0fA740",
      "txHash": "0x5270a3becb1b64e813689e3dd99035fdb315e20305a59a11a4d259144d6ddbe5",
      "kind": "transparent"
    },
    {
      "address": "0x21520b9aC92E7Dcb129FCAcA2Bd02Dfa302545EF",
      "txHash": "0xfea1a8f902b01e7080febb3e922638bd6d75ced066f4676ce3c77caea40f9367",
      "kind": "transparent"
    },
    {
      "address": "0xbC13fa6d21b47725ce7982aa3Cd62146C8cD2e93",
      "txHash": "0xf95af3d3dc7b2a023581bff5d637b64d04fe8d082d02a18a0586ab97f5a9ae6c",
      "kind": "transparent"
    },
    {
      "address": "0x73A0a90cAB44e8fbC10112A5F6647220c7794776",
      "txHash": "0x2a52b4278cb7d599858ae719da85db2c5899618d05b478545513362d82db61eb",
      "kind": "transparent"
    },
    {
      "address": "0x82E05C777AfC2955e47328eEC1B5d81421889570",
      "txHash": "0x1016ebe73cdc0789db7310e9b6e41231015350763f70f002b0fd7e904fcc7797",
      "kind": "transparent"
    },
    {
      "address": "0x492b73124A43226928E522893577b30bABBf146A",
      "txHash": "0x59be4481240c798da4005f57e940b0a35ad1b0c6d9de27c1d3533a34a324c6de",
      "kind": "transparent"
    }
  ],
  "impls": {
    "fd077def5fd4bea9ea35b51c818a97a215d89f13c06a12e9d1350c9780fa4f57": {
      "address": "0xF82e4671436707cD2b609a640c6Fc96DA8F5b27b",
      "txHash": "0xf7e3ea719a20ae209b447b1b08df0c9f4bc1a95c0ee660fda46aaaf4a7efb5b7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)4437_storage",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:25"
          },
          {
            "label": "_itemsSold",
            "offset": 0,
            "slot": "202",
            "type": "t_struct(Counter)4437_storage",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:26"
          },
          {
            "label": "primary_sale_fee_percent",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:28"
          },
          {
            "label": "secondary_sale_fee_percent",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:29"
          },
          {
            "label": "collector_fee",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:30"
          },
          {
            "label": "max_royalty",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:31"
          },
          {
            "label": "OWNER",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:32"
          },
          {
            "label": "id_MarketItem",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_struct(MarketItem)5659_storage)",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:33"
          },
          {
            "label": "artist_IsApproved",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:34"
          },
          {
            "label": "address_isValidator",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:35"
          },
          {
            "label": "tokenID_Artist",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:36"
          },
          {
            "label": "tokenID_RoyaltyPercent",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:37"
          },
          {
            "label": "tokenID_SecondarySale",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MarketItem)5659_storage)": {
            "label": "mapping(uint256 => struct GDNFTMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4437_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MarketItem)5659_storage": {
            "label": "struct GDNFTMarketplace.MarketItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bfa3e096a1dcebe38bab9461816674fa7e48540f3285a4901bb6d3f890003fe8": {
      "address": "0xd50645A7EC17Dc560794EaAF328b9CDDCf8d66d1",
      "txHash": "0x0101629c125cfaee6ca6dca1172ab155ed314d18ebb75f1f9d9cb79ce8920f15",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)4437_storage",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:25"
          },
          {
            "label": "_itemsSold",
            "offset": 0,
            "slot": "202",
            "type": "t_struct(Counter)4437_storage",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:26"
          },
          {
            "label": "primary_sale_fee_percent",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:28"
          },
          {
            "label": "secondary_sale_fee_percent",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:29"
          },
          {
            "label": "collector_fee",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:30"
          },
          {
            "label": "max_royalty",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:31"
          },
          {
            "label": "OWNER",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:32"
          },
          {
            "label": "id_MarketItem",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_struct(MarketItem)5663_storage)",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:33"
          },
          {
            "label": "artist_IsApproved",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:34"
          },
          {
            "label": "address_isValidator",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:35"
          },
          {
            "label": "tokenID_Artist",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:36"
          },
          {
            "label": "tokenID_Memoir",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:37"
          },
          {
            "label": "tokenID_RoyaltyPercent",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:38"
          },
          {
            "label": "tokenID_SecondarySale",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "GDNFTMarketplace",
            "src": "contracts/marketplace/GDMarketplace.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MarketItem)5663_storage)": {
            "label": "mapping(uint256 => struct GDNFTMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4437_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MarketItem)5663_storage": {
            "label": "struct GDNFTMarketplace.MarketItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c4fa4ff4da8a19491b080a647a695be8616f67d89ba749b3b65dcdcdda1f604c": {
      "address": "0x8487e1787AE96867080436A2c273B360817C3260",
      "txHash": "0x09a7111dad4440fc5334c161f7194d7e19efc1187159f6e2ebb2b910c473496e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "primarySaleFeePercent",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:20"
          },
          {
            "label": "secondarySaleFeePercent",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:21"
          },
          {
            "label": "collectorFee",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:22"
          },
          {
            "label": "maxRoyalty",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:23"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:24"
          },
          {
            "label": "auctionDuration",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:25"
          },
          {
            "label": "auctionFinalMinutes",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:26"
          },
          {
            "label": "isArtistApproved",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:27"
          },
          {
            "label": "isAddressValidator",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "MintGoldDustCompany",
            "src": "contracts/marketplace/MintGoldDustCompany.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1d90ccb741107e4505ce4543f9ebdbc0f9eb9e0477214c0fdba7ea5621330e67": {
      "address": "0xD5AE4F319c39b5Fb3e442C600b606ECeAd70f026",
      "txHash": "0x0fc428fa03ebd42428bc302b417fb48e79c6f4958f0775d28cf2b991d98f0dc1",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "contractTokenIdMemoirs",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bytes_storage))",
            "contract": "MintGoldDustMemoir",
            "src": "contracts/marketplace/MintGoldDustMemoir.sol:17"
          },
          {
            "label": "userCounterMemoirs",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bytes_storage))",
            "contract": "MintGoldDustMemoir",
            "src": "contracts/marketplace/MintGoldDustMemoir.sol:18"
          },
          {
            "label": "userCounter",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MintGoldDustMemoir",
            "src": "contracts/marketplace/MintGoldDustMemoir.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bytes_storage))": {
            "label": "mapping(address => mapping(uint256 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5e3f8c77677d2f787e0ef3d97f17c3935bf79d1fa2f2543c024650ccfe93beaf": {
      "address": "0x37527030499a08770326d85465361697666E1D55",
      "txHash": "0xdea5144cd6a883e9fc6c15a819f78375be37ddf020326670cbed70792518be92",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:74"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(MintGoldDustCompany)9513",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:30"
          },
          {
            "label": "mintGoldDustMemoir",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(MintGoldDustMemoir)13245",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:31"
          },
          {
            "label": "tokenIdArtist",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:33"
          },
          {
            "label": "tokenIdRoyaltyPercent",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:34"
          },
          {
            "label": "tokenCollaborators",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_array(t_address)4_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:36"
          },
          {
            "label": "tokenIdCollaboratorsPercentage",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_array(t_uint256)5_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:37"
          },
          {
            "label": "hasTokenCollaborators",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:38"
          },
          {
            "label": "tokenIdCollaboratorsQuantity",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:39"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "259",
            "type": "t_struct(Counter)7719_storage",
            "contract": "MintGoldDustERC721",
            "src": "contracts/marketplace/MintGoldDustERC721.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)4_storage": {
            "label": "address[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]",
            "numberOfBytes": "160"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MintGoldDustCompany)9513": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_contract(MintGoldDustMemoir)13245": {
            "label": "contract MintGoldDustMemoir",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)4_storage)": {
            "label": "mapping(uint256 => address[4])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)5_storage)": {
            "label": "mapping(uint256 => uint256[5])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)7719_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "83f97fa704840cb6f03c1049de0f6cbf14ade12e8c353ace9e925bd3c513c732": {
      "address": "0x96AC1A9F6861C63fe6AfDd6C796384fFe5591557",
      "txHash": "0x6c4563dc243275433361867e048437ff670623ca10c32bb7aea2bce48902e602",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "_baseURI",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:27"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC1155URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol:77"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "mintGoldDustCompany",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(MintGoldDustCompany)9513",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:30"
          },
          {
            "label": "mintGoldDustMemoir",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(MintGoldDustMemoir)13245",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:31"
          },
          {
            "label": "tokenIdArtist",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:33"
          },
          {
            "label": "tokenIdRoyaltyPercent",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:34"
          },
          {
            "label": "tokenCollaborators",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_uint256,t_array(t_address)4_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:36"
          },
          {
            "label": "tokenIdCollaboratorsPercentage",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_array(t_uint256)5_storage)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:37"
          },
          {
            "label": "hasTokenCollaborators",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:38"
          },
          {
            "label": "tokenIdCollaboratorsQuantity",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintGoldDustNFT",
            "src": "contracts/marketplace/MintGoldDustNFT.sol:39"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "259",
            "type": "t_struct(Counter)7719_storage",
            "contract": "MintGoldDustERC1155",
            "src": "contracts/marketplace/MintGoldDustERC1155.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)4_storage": {
            "label": "address[4]",
            "numberOfBytes": "128"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)5_storage": {
            "label": "uint256[5]",
            "numberOfBytes": "160"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MintGoldDustCompany)9513": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_contract(MintGoldDustMemoir)13245": {
            "label": "contract MintGoldDustMemoir",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)4_storage)": {
            "label": "mapping(uint256 => address[4])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)5_storage)": {
            "label": "mapping(uint256 => uint256[5])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)7719_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d87da5cd97fdcbfcfe74ccf47cb23cd742bcaafe5cac89ae99d9b11b77969e17": {
      "address": "0xad734EE28e4F47B51dC9383B771980F55169811F",
      "txHash": "0x7eb74d4e2f4484c1dd5d6870ee133c2fd0931fb29ea0b1130e23813621457ed4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "itemsSold",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(Counter)7719_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:55"
          },
          {
            "label": "mgdCompany",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(MintGoldDustCompany)9513",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:57"
          },
          {
            "label": "mintGoldDustERC721Address",
            "offset": 0,
            "slot": "103",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:58"
          },
          {
            "label": "mintGoldDustERC1155Address",
            "offset": 0,
            "slot": "104",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:59"
          },
          {
            "label": "idMarketItemsByContractByOwner",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)10049_storage)))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:69"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "tokenIdOffChainAmountByContractByOwner",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "contract": "MintGoldDustSetPrice",
            "src": "contracts/marketplace/MintGoldDustSetPrice.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MintGoldDustCompany)9513": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)10049_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(MarketItem)10049_storage)": {
            "label": "mapping(address => struct MintGoldDustMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)10049_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionProps)10062_storage": {
            "label": "struct MintGoldDustMarketplace.AuctionProps",
            "members": [
              {
                "label": "auctionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "highestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ended",
                "type": "t_bool",
                "offset": 1,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Counter)7719_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MarketItem)10049_storage": {
            "label": "struct MintGoldDustMarketplace.MarketItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isAuction",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "isSecondarySale",
                "type": "t_bool",
                "offset": 2,
                "slot": "3"
              },
              {
                "label": "isERC721",
                "type": "t_bool",
                "offset": 3,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "auctionProps",
                "type": "t_struct(AuctionProps)10062_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6f564c47829325cda9adb0b13e36dd27e4f0c093c583fdfd914b7264569389b8": {
      "address": "0xe0bc1951cE90F5976ae2320FBD3DF153af4293a2",
      "txHash": "0x82c4e89e51a41b97d2d2f9d7c98cec92b5c24187e7e2affa5ccaaeaca400ebc2",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "itemsSold",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(Counter)7719_storage",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:55"
          },
          {
            "label": "mgdCompany",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(MintGoldDustCompany)9513",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:57"
          },
          {
            "label": "mintGoldDustERC721Address",
            "offset": 0,
            "slot": "103",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:58"
          },
          {
            "label": "mintGoldDustERC1155Address",
            "offset": 0,
            "slot": "104",
            "type": "t_address_payable",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:59"
          },
          {
            "label": "idMarketItemsByContractByOwner",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)10049_storage)))",
            "contract": "MintGoldDustMarketplace",
            "src": "contracts/marketplace/MintGoldDustMarketplace.sol:69"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "auctionIds",
            "offset": 0,
            "slot": "156",
            "type": "t_struct(Counter)7719_storage",
            "contract": "MintGoldDustMarketplaceAuction",
            "src": "contracts/marketplace/MintGoldDustMarketplaceAuction.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(MintGoldDustCompany)9513": {
            "label": "contract MintGoldDustCompany",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)10049_storage)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(MarketItem)10049_storage)": {
            "label": "mapping(address => struct MintGoldDustMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_struct(MarketItem)10049_storage))": {
            "label": "mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem))",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionProps)10062_storage": {
            "label": "struct MintGoldDustMarketplace.AuctionProps",
            "members": [
              {
                "label": "auctionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "highestBidder",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "highestBid",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cancelled",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ended",
                "type": "t_bool",
                "offset": 1,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Counter)7719_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MarketItem)10049_storage": {
            "label": "struct MintGoldDustMarketplace.MarketItem",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "seller",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "sold",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "isAuction",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "isSecondarySale",
                "type": "t_bool",
                "offset": 2,
                "slot": "3"
              },
              {
                "label": "isERC721",
                "type": "t_bool",
                "offset": 3,
                "slot": "3"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "auctionProps",
                "type": "t_struct(AuctionProps)10062_storage",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
