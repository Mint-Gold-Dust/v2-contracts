{
  "contractName": "MintGoldDustSetPrice",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_reason",
          "type": "string"
        }
      ],
      "name": "AddressUnauthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAmountForThisPurchase",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "ItemIsAlreadyListed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "ItemIsNotListed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "market",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "msgSender",
          "type": "address"
        }
      ],
      "name": "ItemIsNotListedBySeller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LessItemsListedThanTheRequiredAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ListPriceMustBeGreaterThanZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MustBeERC721OrERC1155",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PurchaseOfERC1155InAuctionThatCoverAllListedItems",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "MintGoldDustNftListedItemUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "MintGoldDustNftListedToSetPrice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "saleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "buyPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sellerAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmountSold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isERC721",
          "type": "bool"
        }
      ],
      "name": "MintGoldDustNftPurchasedPrimaryMarket",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "saleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "buyPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sellerAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmountSold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isERC721",
          "type": "bool"
        }
      ],
      "name": "MintGoldDustNftPurchasedSecondaryMarket",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "saleId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collaborator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "NftPurchasedCollaboratorAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "NftQuantityDelisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "collectorMintIdUsed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "tokenURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "royalty",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "memoir",
              "type": "bytes"
            },
            {
              "internalType": "address[]",
              "name": "collaborators",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ownersPercentage",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "artistSigner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collectorMintId",
              "type": "uint256"
            }
          ],
          "internalType": "struct MintGoldDustMarketplace.CollectorMintDTO",
          "name": "_collectorMintDTO",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "_eip712HashOffChain",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_mintGoldDustSignature",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_amountToBuy",
          "type": "uint256"
        }
      ],
      "name": "collectorMintPurchase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "internalType": "struct MintGoldDustSetPrice.DelistDTO",
          "name": "_delistDTO",
          "type": "tuple"
        }
      ],
      "name": "delistNft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "idMarketItemsByContractByOwner",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isERC721",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "auctionId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "highestBidder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "highestBid",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "ended",
              "type": "bool"
            }
          ],
          "internalType": "struct MintGoldDustMarketplace.AuctionProps",
          "name": "auctionProps",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_mintGoldDustCompany",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_mintGoldDustERC721Address",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_mintGoldDustERC1155Address",
          "type": "address"
        }
      ],
      "name": "initializeChild",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isSecondarySale",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "sold",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "itemsSold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "list",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            }
          ],
          "internalType": "struct MintGoldDustMarketplace.SaleDTO",
          "name": "_saleDTO",
          "type": "tuple"
        }
      ],
      "name": "purchaseNft",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_mintGoldDustMarketplace",
          "type": "address"
        }
      ],
      "name": "setMintGoldDustMarketplace",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_sold",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setSecondarySale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpauseContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_seller",
          "type": "address"
        }
      ],
      "name": "updateListedNft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "updateSecondarySaleAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_sold",
          "type": "bool"
        }
      ],
      "name": "updateSecondarySaleSold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"AddressUnauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmountForThisPurchase\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"ItemIsAlreadyListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"ItemIsNotListed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"ItemIsNotListedBySeller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LessItemsListedThanTheRequiredAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ListPriceMustBeGreaterThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustBeERC721OrERC1155\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PurchaseOfERC1155InAuctionThatCoverAllListedItems\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"MintGoldDustNftListedItemUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"MintGoldDustNftListedToSetPrice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sellerAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmountSold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isERC721\",\"type\":\"bool\"}],\"name\":\"MintGoldDustNftPurchasedPrimaryMarket\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sellerAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmountSold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isERC721\",\"type\":\"bool\"}],\"name\":\"MintGoldDustNftPurchasedSecondaryMarket\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collaborator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NftPurchasedCollaboratorAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"NftQuantityDelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"collectorMintIdUsed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"royalty\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"memoir\",\"type\":\"bytes\"},{\"internalType\":\"address[]\",\"name\":\"collaborators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ownersPercentage\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"artistSigner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collectorMintId\",\"type\":\"uint256\"}],\"internalType\":\"struct MintGoldDustMarketplace.CollectorMintDTO\",\"name\":\"_collectorMintDTO\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_eip712HashOffChain\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_mintGoldDustSignature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_amountToBuy\",\"type\":\"uint256\"}],\"name\":\"collectorMintPurchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"internalType\":\"struct MintGoldDustSetPrice.DelistDTO\",\"name\":\"_delistDTO\",\"type\":\"tuple\"}],\"name\":\"delistNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"idMarketItemsByContractByOwner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isERC721\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"auctionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"ended\",\"type\":\"bool\"}],\"internalType\":\"struct MintGoldDustMarketplace.AuctionProps\",\"name\":\"auctionProps\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mintGoldDustCompany\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_mintGoldDustERC721Address\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_mintGoldDustERC1155Address\",\"type\":\"address\"}],\"name\":\"initializeChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isSecondarySale\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"itemsSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"list\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct MintGoldDustMarketplace.SaleDTO\",\"name\":\"_saleDTO\",\"type\":\"tuple\"}],\"name\":\"purchaseNft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mintGoldDustMarketplace\",\"type\":\"address\"}],\"name\":\"setMintGoldDustMarketplace\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_sold\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setSecondarySale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpauseContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"}],\"name\":\"updateListedNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"updateSecondarySaleAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_sold\",\"type\":\"bool\"}],\"name\":\"updateSecondarySaleSold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MintGoldDustNftListedItemUpdated(uint256,address,uint256,address)\":{\"details\":\"this event will be triggered when a market item has its price updated.it cannot be zero.\",\"params\":{\"contractAddress\":\"the MintGoldDustERC1155 or the MintGoldDustERC721 address.\",\"price\":\"the new price for this item sale.\",\"seller\":\"the seller of this tokenId.\",\"tokenId\":\"the sequence number for the item.\"}},\"MintGoldDustNftListedToSetPrice(uint256,address,uint256,uint256,address)\":{\"details\":\"this event will be triggered when a MintGoldDustNFT is listed for the set price marketplace.it cannot be zero.For MintGoldDustERC721 the amout must be always one.\",\"params\":{\"amount\":\"the quantity of tokens to be listed for an MintGoldDustERC1155.\",\"contractAddress\":\"the MintGoldDustERC1155 or the MintGoldDustERC721 address.\",\"price\":\"the price for this item sale.\",\"seller\":\"the seller of this tokenId.\",\"tokenId\":\"the sequence number for the item.\"}},\"MintGoldDustNftPurchasedPrimaryMarket(uint256,uint256,address,address,uint256,uint256,uint256,bool)\":{\"details\":\"this event will be triggered if a primary sale is correctly completed.\",\"params\":{\"buyPrice\":\"the price that the buyer is paying for the item.\",\"isERC721\":\"a parameter that indicate if the item is an ERC721 or not.\",\"newOwner\":\"the address that is buying the item.\",\"saleId\":\"a uint value that indicates the sale number.\",\"seller\":\"the address of the seller.\",\"sellerAmount\":\"the final value that the seller should receive.\",\"tokenAmountSold\":\"the quantity of tokens bought.\",\"tokenId\":\"the sequence number for the item.\"}},\"MintGoldDustNftPurchasedSecondaryMarket(uint256,uint256,address,address,uint256,uint256,uint256,bool)\":{\"details\":\"this event will be triggered if a secondary sale is correctly completed.\",\"params\":{\"isERC721\":\"a parameter that indicate if the item is an ERC721 or not.\",\"newOwner\":\"the address that is buying the item.\",\"saleId\":\"a uint value that indicates the sale number.\",\"seller\":\"the address of the seller.\",\"sellerAmount\":\"the final value that the seller should receive.\",\"tokenAmountSold\":\"the quantity of tokens bought.\",\"tokenId\":\"the sequence number for the item.\"}},\"NftPurchasedCollaboratorAmount(uint256,address,uint256)\":{\"details\":\"this event shouldbe used if splitted market items. At the purchase moment it will      be triggered for each one of the collaborators including the artist.use this to vinculate this event with the MintGoldDustNftPurchasedSecondaryMarket that contains more      general info about the sale.\",\"params\":{\"amount\":\"the final value that the seller should receive.\",\"collaborator\":\"the sequence number for the item.\",\"saleId\":\"a uint value that indicates the sale number.\"}},\"NftQuantityDelisted(uint256,address,address)\":{\"details\":\"this event will be triggered when a market item is delisted from the marketplace.\",\"params\":{\"contractAddress\":\"the MintGoldDustERC1155 or the MintGoldDustERC721 address.\",\"seller\":\"the seller of this tokenId.\",\"tokenId\":\"the sequence number for the item.\"}},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"collectorMintPurchase((address,string,uint256,bytes,address[],uint256[],uint256,address,uint256,uint256),bytes32,bytes,bytes,uint256)\":{\"details\":\"See that we have some steps here:      1. Verify if the artist signer address is not a zero address.      2. Verify if contract address is a MintGoldDustERC721 or a MintGoldDustERC1155.      3. Verify if the eip712 hash generated on chain match with the eip712 hash generated off chain.      4. Verify if the collector mint dto hash generated on chain match with the collector mint dto hash generated off chain.      5. Verify if signatures comes from our platform using the public keys.      6. Verify if artist signatures are valid.\",\"params\":{\"_amountToBuy\":\"is the amount of tokens to buy.\",\"_collectorMintDTO\":\"is the CollectorMintDTO struct                It consists of the following fields:                    - contractAddress: The MintGoldDustERC1155 or the MintGoldDustERC721 address.                    - tokenURI: The tokenURI of the marketItem.                    - royalty: The royalty of the marketItem.                    - memoir: The memoir of the marketItem.                    - collaborators: The collaborators of the marketItem.                    - ownersPercentage: The ownersPercentage of the marketItem.                    - amount: The quantity of tokens to be listed for an MintGoldDustERC1155. For                              MintGoldDustERC721 the amout must be always one.                    - artistSigner: The artistSigner of the marketItem.                    - price: The price or reserve price for the item.                    - collectorMintId: Is the collector mint id generated off chain.\",\"_eip712HashOffChain\":\"is the hash of the eip712 object generated off chain.\",\"_mintGoldDustSignature\":\"is the _signature using mintGoldDustCompany private key.\",\"_signature\":\"is the _signature of the eip712 object generated off chain.\"}},\"delistNft((uint256,uint256,address))\":{\"details\":\"Here we transfer back the token id to the seller that is really the owner of the item. And set the sold attribute to true. This in conjunction with the fact that this contract address is not more the owner of the item, means that the item is not listed.\",\"params\":{\"_delistDTO\":\"The DelistDTO parameter to use.                 It consists of the following fields:                    - tokenid: The tokenId of the marketItem.                    - amount: The quantity of tokens to be delisted for an MintGoldDustERC1155.                    - contractAddress: The MintGoldDustERC1155 or the MintGoldDustERC721 address.\"}},\"initializeChild(address,address,address)\":{\"params\":{\"_mintGoldDustCompany\":\"The contract responsible to MGD management features.\",\"_mintGoldDustERC1155Address\":\"The MGD ERC721.\",\"_mintGoldDustERC721Address\":\"The MGD ERC721.\"}},\"list(uint256,uint256,address,uint256)\":{\"details\":\"This is an implementation of a virtual function declared in the father      contract. Here we're listing an NFT to the MintGoldDustSetPrice market that the item has      a fixed price. After that the user can update the price of this item or if necessary      delist it. After delist is possible to list again here of for auction or another set price.For MintGoldDustERC721 the amout must be always one.\",\"params\":{\"_amount\":\": The quantity of tokens to be listed for an MintGoldDustERC1155.\",\"_contractAddress\":\": The MintGoldDustERC1155 or the MintGoldDustERC721 address.\",\"_price\":\": The price or reserve price for the item.\",\"_tokenId\":\": The tokenId of the marketItem.\"}},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"purchaseNft((uint256,uint256,address,address))\":{\"details\":\"This function is specific for the set price market. For the auction market we have a second purchaseAuctionNft function. See below.\",\"params\":{\"_saleDTO\":\"The SaleDTO struct parameter to use.                 It consists of the following fields:                    - tokenid: The tokenId of the marketItem.                    - amount: The quantity of tokens to be listed for an MintGoldDustERC1155. For                              MintGoldDustERC721 the amout must be always one.                    - contractAddress: The MintGoldDustERC1155 or the MintGoldDustERC721 address.                    - seller: The seller of the marketItem.\"}},\"setMintGoldDustMarketplace(address)\":{\"details\":\"we create this lazy dependence because of the circular dependence between the MintGoldDustMarketplace. So this way we can share the state of the isSecondarySale mapping.\",\"params\":{\"_mintGoldDustMarketplace\":\"the address of the MintGoldDustMarketplace.\"}},\"setSecondarySale(address,uint256,address,bool,uint256)\":{\"params\":{\"_amount\":\"the amount of tokens minted for this token.\",\"_contractAddress\":\"the address of the MintGoldDustERC1155 or MintGoldDustERC721.\",\"_owner\":\"the owner of the token.\",\"_sold\":\"a boolean that indicates if the token was sold or not.\",\"_tokenId\":\"the id of the token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"updateListedNft(uint256,uint256,address,address)\":{\"details\":\"The intention here is allow a user update the price of a Market Item struct.\",\"params\":{\"_contractAddress\":\": The MintGoldDustERC1155 or the MintGoldDustERC721 address.\",\"_price\":\"The price of the NFT.\",\"_seller\":\"The seller of the marketItem.\",\"_tokenId\":\"The token ID of the the token to update.\"}},\"updateSecondarySaleAmount(address,uint256,uint256)\":{\"params\":{\"_amount\":\"the amount of tokens minted for this token.\",\"_contractAddress\":\"the address of the MintGoldDustERC1155 or MintGoldDustERC721.\",\"_tokenId\":\"the id of the token.\"}},\"updateSecondarySaleSold(address,uint256,bool)\":{\"params\":{\"_contractAddress\":\"the address of the MintGoldDustERC1155 or MintGoldDustERC721.\",\"_sold\":\"a boolean that indicates if the token was sold or not.\",\"_tokenId\":\"the id of the token.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"MintGoldDustNftListedItemUpdated(uint256,address,uint256,address)\":{\"notice\":\"that this event show the info when a market item has its price updated.\"},\"MintGoldDustNftListedToSetPrice(uint256,address,uint256,uint256,address)\":{\"notice\":\"that this event show the info about a new listing to the set price market.\"},\"MintGoldDustNftPurchasedPrimaryMarket(uint256,uint256,address,address,uint256,uint256,uint256,bool)\":{\"notice\":\"that this event show the info about primary sales.\"},\"MintGoldDustNftPurchasedSecondaryMarket(uint256,uint256,address,address,uint256,uint256,uint256,bool)\":{\"notice\":\"that this event show the info about secondary sales.\"},\"NftPurchasedCollaboratorAmount(uint256,address,uint256)\":{\"notice\":\"that this event is used when a item has collaborators.\"},\"NftQuantityDelisted(uint256,address,address)\":{\"notice\":\"that this event show the info about a delisting.\"}},\"kind\":\"user\",\"methods\":{\"collectorMintPurchase((address,string,uint256,bytes,address[],uint256[],uint256,address,uint256,uint256),bytes32,bytes,bytes,uint256)\":{\"notice\":\"that is a function responsilble by start the collector (lazy) mint process on chain.\"},\"delistNft((uint256,uint256,address))\":{\"notice\":\"Delist NFT from marketplaceOnly seller can call this function\"},\"idMarketItemsByContractByOwner(address,uint256,address)\":{\"notice\":\"that this mapping do the relationship between a contract address,         the tokenId created in this contract (MintGoldDustERC721 or MintGoldDustERC1155)         the owner address and the Market Item owned.\"},\"initializeChild(address,address,address)\":{\"notice\":\"MGDAuction is a children of MintGoldDustMarketplace and this one is composed by other two contracts.\"},\"isSecondarySale(address,uint256)\":{\"notice\":\"that this mapping will manage the state to track the secondary sales.\"},\"list(uint256,uint256,address,uint256)\":{\"notice\":\"that is function to list a MintGoldDustNFT for the marketplace set price market.that here we call the more generic list function passing the correct params for the set price market.\"},\"pauseContract()\":{\"notice\":\"Pause the contract\"},\"purchaseNft((uint256,uint256,address,address))\":{\"notice\":\"Acquire a listed NFT to Set Price marketfunction will fail if the market item does has the auction property to true.function will fail if the token was not listed to the set price market.function will fail if the contract address is not a MintGoldDustERC721 neither a MintGoldDustERC1155.function will fail if the amount paid by the buyer does not cover the purshace amount required.\"},\"setMintGoldDustMarketplace(address)\":{\"notice\":\"that this function set an instance of the MintGoldDustMarketplace to the sibling contract.\"},\"setSecondarySale(address,uint256,address,bool,uint256)\":{\"notice\":\"that this function is used to populate the isSecondarySale mapping for the sibling contract. This way the mapping state will be shared.\"},\"unpauseContract()\":{\"notice\":\"Unpause the contract\"},\"updateListedNft(uint256,uint256,address,address)\":{\"notice\":\"Updates an already listed NFTOnly seller can call this function and this item must be listed.\"},\"updateSecondarySaleAmount(address,uint256,uint256)\":{\"notice\":\"that this function should be used to update the amount attribute for the isSecondarySale mapping in the sibling contract.\"},\"updateSecondarySaleSold(address,uint256,bool)\":{\"notice\":\"that this function should be used to update the sold attribute for the isSecondarySale mapping in the sibling contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/contracts/marketplace/MintGoldDustSetPrice.sol\":\"MintGoldDustSetPrice\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/contracts/marketplace/MintGoldDustCompany.sol\":{\"keccak256\":\"0xd66195dfac8a9ad8294b52ee7d3e0462779a9406a9389ac3d5aac7574b50fa8c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1b69a7584a3723ced8ca454ee3b6f620df65297e353b6fc498c9a611e95ca5dc\",\"dweb:/ipfs/QmdrYcsBkTFVmnZy8dUZDHSdqntZBZE85n8hjDdn8ks3rZ\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/contracts/marketplace/MintGoldDustERC1155.sol\":{\"keccak256\":\"0xa2e9e602a46b0d4f998499c9d13078f3347a1046bbc44c4dc84b72b4c9bb0b24\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1fdcdc4158a055c1427363efee620ffbd655cb804263b8102409a6e25c094921\",\"dweb:/ipfs/QmTHfkeErKCfLxRAugX2NXbdK6EGHaAa8UQJ7otuTr8pw6\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/contracts/marketplace/MintGoldDustERC721.sol\":{\"keccak256\":\"0xb115aa0ceca750617cdaaacbd47281d8643d98e1118ba66f50cb9435d6821638\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e1162f1991f40aa95d4ba99b70ba2f42ec917cb82e6e08a1e0bfe93eb8e56802\",\"dweb:/ipfs/QmWsEcuuNkYm7ttPMvJ1uZ4PC2rp6NGPi62ZacjSkgbjS8\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/contracts/marketplace/MintGoldDustMarketplace.sol\":{\"keccak256\":\"0x38ed5db5edd297550d9549d90774415f850387e27a497512e325df9f61156953\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://eb79f1d3016711de46377819343b16f72430d74683f6ea75f68a7da8cd404914\",\"dweb:/ipfs/QmSqNQeYmERZsRrZeXo5RgYhv8SiUTK2HB358w67RosRi1\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/contracts/marketplace/MintGoldDustNFT.sol\":{\"keccak256\":\"0xa75d1f59be0acdbddf8df346946c0391ab1a21e2e1359ed5ddd494e3a9cf739c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3d5c3f07e75ecab818647935cb3c721e9cb45aad503ac304a48ce2aac2908fe2\",\"dweb:/ipfs/Qmeq3NqGaFwdsoT6fHSHVZrkGCQGn5DdZdbetR5XJ7fbrN\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/contracts/marketplace/MintGoldDustSetPrice.sol\":{\"keccak256\":\"0x28b214def7ac4828472d021c975f88ba91cf3baa263e5092508de8ae4ba13bed\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c8cd5747f009b4b2f7eacf677ddd8fc7b0a85ff52509332bd99e05583be66320\",\"dweb:/ipfs/QmSsZmJqs4s1fdYg3a2hezE2QcQwstBU6yyz8SN5SuDUHQ\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC165Upgradeable.sol\":{\"keccak256\":\"0x121966b3220d263a6669dcf59c1254bd48ed237adf4d8a595add70a7927eada1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://440dc242517ca29e9802f32dd237a185b4f7aaab67ceb2c1d6307c57636e0904\",\"dweb:/ipfs/QmeQZeMCMmxca8hA4oUFXEwLAzspiwMTQ9CaqFQutYk9ag\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC4906Upgradeable.sol\":{\"keccak256\":\"0x869de080935f0a9f8ae29134bc7bd33176d2912ab13f080ff678a5a26ea542b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b7d3ce04dcd6843ceac55fdff3628f0b0f51c4e7dc25f4be91d4cb2098707b3\",\"dweb:/ipfs/QmPzQ5R4JLaUhFc4bgCzX8WRet6eCnKXjFMzeq7tFbUdrz\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC721Upgradeable.sol\":{\"keccak256\":\"0x9256117dac3a66dbce2e7245c6ceb7361f8ae7425e3d896ac26ecece3e3d12e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0cd6ddcc1752ba1f1cd878b75e7371ec4879a618afe16c615fcf0e28b02d88\",\"dweb:/ipfs/QmaLMWkUnySXW4xVWGTEcrtX7V7CHgMagbkKaYyurEhj4o\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0xc3e465e1fdd0e491688ad75ef1b946e1680e7f9f78bf5beeefd6daed8693c856\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aeeca7e860afd73ce8f694de1696a5150ef5b94c9877661fc2db7283446fccb7\",\"dweb:/ipfs/QmdbxAah67ohhR8ZEdFfDcVRAeFJ6JaGb49r6aiAQ54nTe\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce\",\"dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xf51f292659a77777c0ed7375a39683d8bee53b86a6e7bd0c76f34ce7aa37a3a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32c68498e1b6013477d299e4881dcea818d7e4c3e3aba7a18bde3989b12dff83\",\"dweb:/ipfs/QmZzw1eHLQmDLfKbxVivEWUdae2BfTmjSg1aLowuLwScuZ\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155URIStorageUpgradeable.sol\":{\"keccak256\":\"0x9a1218747a17239e2fcab2efc14099379387f114c7ad22c69a23b7d67ec0eaa2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eec66b0f255e61101cc9921a6499e23799ffc21ff861f5fce44a5adf9dd5ed27\",\"dweb:/ipfs/Qmckcr6QfTeoSh4t1uLNYHQYPKJhQV6NysSQLGBMGw3E3R\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1870980d15f9003916faf2a9a0eac6dcd4f0e28e2af6f5a3cee0cd685d460ee9\",\"dweb:/ipfs/QmY8K1YZQmuL2WDTPC8QwCm3ztrUD7JKmnvoZkMyGZceiM\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x09fa60c34ff9b067e5ad3af7719d490a12e0ca39132df6f870746eb0d32308ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acebbc807a56154030015434db278d821bca9a5316fbc3626b3f51f14403819a\",\"dweb:/ipfs/QmPacbrj1Hqzrw6b657EXuyMAazLFh1VAo9c66ZJNmfhR3\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":{\"keccak256\":\"0x486985bf5203d0ee4568f8f89ae35b8accf6a95ecee280435102eedb807c2764\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2f241f8f4c5d95674a1cea8bc6da3adff90d9ef8116a97ac6bbc0ef0d07fcb2\",\"dweb:/ipfs/QmV2ZDPiQQWse2gy2rYKpQzQ7xwhzyBaM3murJwEEUZ2rL\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "794:19632:5:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "794:19632:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3544:134;;;;;;;;;;-1:-1:-1;3544:134:5;;;;;:::i;:::-;-1:-1:-1;;;;;;3633:40:5;-1:-1:-1;;;3633:40:5;;3544:134;;;;470:14:40;;463:22;445:41;;433:2;418:18;3544:134:5;;;;;;;;12493:245:3;;;;;;;;;;-1:-1:-1;12493:245:3;;;;;:::i;:::-;;:::i;:::-;;4642:676:5;;;;;;;;;;-1:-1:-1;4642:676:5;;;;;:::i;:::-;;:::i;15687:204:3:-;;;;;;;;;;-1:-1:-1;15687:204:3;;;;;:::i;:::-;-1:-1:-1;;;15687:204:3;;;;;;;;;;;-1:-1:-1;;;;;;2754:33:40;;;2736:52;;2724:2;2709:18;15687:204:3;2592:202:40;13911:388:3;;;;;;;;;;-1:-1:-1;13911:388:3;;;;;:::i;:::-;;:::i;15036:61::-;;;;;;;;;;;;;:::i;13216:349::-;;;;;;;;;;-1:-1:-1;13216:349:3;;;;;:::i;:::-;;:::i;2822:51:5:-;;;;;;;;;;-1:-1:-1;2822:51:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;1858:84:11;;;;;;;;;;-1:-1:-1;1928:7:11;;;;1858:84;;7923:86:3;;;;;;;;;;-1:-1:-1;7923:86:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7923:86:3;;;-1:-1:-1;;;7923:86:3;;;;;;;;;;;-1:-1:-1;;;;;4695:32:40;;;4677:51;;4771:14;;4764:22;4759:2;4744:18;;4737:50;4803:18;;;4796:34;4665:2;4650:18;7923:86:3;4481:355:40;14652:347:3;;;;;;;;;;-1:-1:-1;14652:347:3;;;;;:::i;:::-;;:::i;7137:1307:5:-;;;;;;;;;;-1:-1:-1;7137:1307:5;;;;;:::i;:::-;;:::i;6293:33:3:-;;;;;;;;;;-1:-1:-1;6293:33:3;;;;;;;;;7016:25:40;;;7004:2;6989:18;6293:33:3;6870:177:40;13526:129:5;;;;;;:::i;:::-;;:::i;15136:65:3:-;;;;;;;;;;;;;:::i;15429:254::-;;;;;;;;;;-1:-1:-1;15429:254:3;;;;;:::i;:::-;-1:-1:-1;;;15429:254:3;;;;;;;;;;;5786:594:5;;;;;;;;;;-1:-1:-1;5786:594:5;;;;;:::i;:::-;;:::i;7137:112:3:-;;;;;;;;;;-1:-1:-1;7137:112:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7137:112:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10879:25:40;;;-1:-1:-1;;;;;10978:15:40;;;10973:2;10958:18;;;10951:43;;;;11010:18;;;11003:34;;;;11080:14;;11073:22;11068:2;11053:18;;;11046:50;;;;11127:3;11112:19;;;11105:35;;;;11177:13;;10931:3;11156:19;;;11149:42;;;;11234:15;;;11228:22;11222:3;11207:19;;11200:51;11294:15;;;11288:22;11282:3;11267:19;;11260:51;11358:15;;;11352:22;11348:31;;;11342:3;11327:19;;11320:60;11423:16;;;11417:23;11411:3;11396:19;;11389:52;11498:16;11492:23;11485:31;11478:39;11472:3;11457:19;;11450:68;10866:3;10851:19;7137:112:3;10540:984:40;3211:329:5;;;;;;;;;;-1:-1:-1;3211:329:5;;;;;:::i;:::-;;:::i;15205:220:3:-;;;;;;;;;;-1:-1:-1;15205:220:3;;;;;:::i;:::-;-1:-1:-1;;;15205:220:3;;;;;;;;;10455:1930:5;;;;;;:::i;:::-;;:::i;12493:245:3:-;12594:19;;:27;;;-1:-1:-1;;;12594:27:3;;;;12625:10;;-1:-1:-1;;;;;12594:19:3;;:25;;:27;;;;;;;;;;;;;;:19;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12594:41:3;;12586:66;;;;-1:-1:-1;;;12586:66:3;;;;;;;:::i;:::-;;;;;;;;;12658:23;:75;;-1:-1:-1;;;;;;12658:75:3;-1:-1:-1;;;;;12658:75:3;;;;;;;;;;12493:245::o;4642:676:5:-;1482:19:11;:17;:19::i;:::-;4791:48:5::1;4822:16;4791:30;:48::i;:::-;4846:51;4858:8;4868:16;4886:10;4846:11;:51::i;:::-;4908:6;4918:1;4908:11:::0;4904:71:::1;;4936:32;;-1:-1:-1::0;;;4936:32:5::1;;;;;;;;;;;4904:71;4981:23;5007:82;;;;;;;;5022:8;5007:82;;;;5038:7;5007:82;;;;5053:16;-1:-1:-1::0;;;;;5007:82:5::1;;;;;5077:6;5007:82;;::::0;4981:108:::1;;5096:29;5101:8;5111:1;5114:10;5096:4;:29::i;:::-;5244:25;::::0;5176:8;;5137:176:::1;::::0;5192:10:::1;::::0;5210:6;;-1:-1:-1;;;;;5224:45:5;;::::1;5244:25:::0;::::1;5224:45;:59;;5276:7;5224:59;;;5272:1;5224:59;5137:176;::::0;;-1:-1:-1;;;;;18037:15:40;;;18019:34;;18084:2;18069:18;;18062:34;;;;18112:18;;18105:34;18175:15;;;18170:2;18155:18;;18148:43;17968:3;17953:19;5137:176:5::1;;;;;;;4785:533;4642:676:::0;;;;:::o;13911:388:3:-;14068:23;;-1:-1:-1;;;;;14068:23:3;14046:10;:46;14038:71;;;;-1:-1:-1;;;14038:71:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;14166:45:3;;14115:48;14166:45;;;:15;:45;;;;;;;;:55;;;;;;;;14257:27;;;;:37;;14287:7;;14257:37;:::i;:::-;14227:27;;;;:67;-1:-1:-1;;;13911:388:3:o;15036:61::-;11028:19;;;;;;;;;-1:-1:-1;;;;;11028:19:3;-1:-1:-1;;;;;11028:25:3;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11014:41:3;:10;-1:-1:-1;;;;;11014:41:3;;11010:116;;11072:47;;-1:-1:-1;;;11072:47:3;;18669:2:40;11072:47:3;;;18651:21:40;18708:2;18688:18;;;18681:30;-1:-1:-1;;;18727:18:40;;;18720:54;18791:18;;11072:47:3;18467:348:40;11010:116:3;15084:8:::1;:6;:8::i;:::-;15036:61::o:0;13216:349::-;13400:23;;-1:-1:-1;;;;;13400:23:3;13378:10;:46;13370:71;;;;-1:-1:-1;;;13370:71:3;;;;;;;:::i;:::-;13493:67;;;;;;;;-1:-1:-1;;;;;13493:67:3;;;;;;;;;;;;;;;;;;;;;13447:33;;;-1:-1:-1;13447:33:3;;;:15;:33;;;;;:43;;;;;;;;;;:113;;;;;;;;-1:-1:-1;;;13447:113:3;-1:-1:-1;;;;;;13447:113:3;;;;;;;;;;;;;;;;;;;;;13216:349::o;14652:347::-;14802:23;;-1:-1:-1;;;;;14802:23:3;14780:10;:46;14772:71;;;;-1:-1:-1;;;14772:71:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;14900:45:3;;;14849:48;14900:45;;;:15;:45;;;;;;;;:55;;;;;;;14961:33;;;;;-1:-1:-1;;;14961:33:3;-1:-1:-1;;;;14961:33:3;;;;;;;;;14652:347::o;7137:1307:5:-;2505:21:12;:19;:21::i;:::-;7213:58:5::1;7244:10;:26;;;7213:30;:58::i;:::-;7277:75;7293:10;:18;;;7313:10;:26;;;7341:10;7277:15;:75::i;:::-;7358:68;7367:10;:18;;;7387:10;:26;;;7415:10;7358:8;:68::i;:::-;7493:26;::::0;7463::::1;::::0;::::1;::::0;7451:1:::1;::::0;-1:-1:-1;;;;;7493:26:5;;::::1;7463:56:::0;::::1;::::0;7459:278:::1;;-1:-1:-1::0;7542:17:5::1;::::0;::::1;::::0;7598:18;;7626:26:::1;::::0;::::1;::::0;7567:163:::1;::::0;7598:18;7670:4:::1;7542:17:::0;7712:10:::1;7567:21;:163::i;:::-;7813:26;::::0;;::::1;::::0;-1:-1:-1;;;;;7775:70:5;;::::1;7743:29;7775:70:::0;;;:30:::1;:70;::::0;;;;;;7846:18;;7775:90;;;;;;;7866:10:::1;7775:102:::0;;;;;;;;7743:134;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;;;::::0;;;;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;::::1;;;::::0;;;;;;;;;;;7910:23;;:36:::1;::::0;7936:10;;7910:36:::1;:::i;:::-;7884:23;::::0;::::1;:62:::0;8007:20:::1;::::0;::::1;::::0;7953:32:::1;::::0;7988:40:::1;::::0;:18:::1;:40::i;:::-;8107:18:::0;;8133:17:::1;::::0;::::1;::::0;8035:121:::1;::::0;-1:-1:-1;;;8035:121:5;;7953:75;;-1:-1:-1;;;;;;8035:25:5;::::1;::::0;::::1;::::0;:121:::1;::::0;8076:4:::1;::::0;8089:10:::1;::::0;8107:18;8133:17;8035:121:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8167:11;:23;;;8194:1;8167:28:::0;8163:162:::1;;8243:26;::::0;;::::1;::::0;-1:-1:-1;;;;;8212:58:5::1;;::::0;;;:30:::1;:58;::::0;;;;;;8280:18;;8212:94;;;;;;;8307:10:::1;8212:106:::0;;;;;;;8205:113;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;8205:113:5;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;8205:113:5;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;::::1;::::0;;;;;;;;;;;;;;;;::::1;::::0;;8163:162:::1;8363:18:::0;;8407:26:::1;::::0;;::::1;::::0;8336:103;;8389:10:::1;19484:34:40::0;;-1:-1:-1;;;;;19554:15:40;;;19549:2;19534:18;;19527:43;8336:103:5::1;::::0;19419:18:40;8336:103:5::1;;;;;;;7207:1237;;;2547:20:12::0;1787:1;3053:7;:22;2873:209;2547:20;7137:1307:5;:::o;13526:129::-;13595:55;13618:8;13628:10;13640:9;13595:22;:55::i;15136:65:3:-;11028:19;;;;;;;;;-1:-1:-1;;;;;11028:19:3;-1:-1:-1;;;;;11028:25:3;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11014:41:3;:10;-1:-1:-1;;;;;11014:41:3;;11010:116;;11072:47;;-1:-1:-1;;;11072:47:3;;18669:2:40;11072:47:3;;;18651:21:40;18708:2;18688:18;;;18681:30;-1:-1:-1;;;18727:18:40;;;18720:54;18791:18;;11072:47:3;18467:348:40;11010:116:3;15186:10:::1;:8;:10::i;5786:594:5:-:0;5923:48;5954:16;5923:30;:48::i;:::-;5977:52;5993:8;6003:16;6021:7;5977:15;:52::i;:::-;6035:45;6044:8;6054:16;6072:7;6035:8;:45::i;:::-;6101:1;6091:6;:11;6087:71;;6119:32;;-1:-1:-1;;;6119:32:5;;;;;;;;;;;6087:71;-1:-1:-1;;;;;6164:48:5;;;;;;;:30;:48;;;;;;;;:58;;;;;;;;:67;;;;;;;;;;;;:80;;:89;;;6265:110;;6321:10;19821:34:40;;19871:18;;;19864:34;;;19914:18;;;19907:43;6164:58:5;;6265:110;;19771:2:40;19756:18;6265:110:5;;;;;;;5786:594;;;;:::o;3211:329::-;3279:19:10;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:10;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:10;1713:19:23;:23;;;3387:66:10;;-1:-1:-1;3436:12:10;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:10;;20163:2:40;3325:201:10;;;20145:21:40;20202:2;20182:18;;;20175:30;20241:34;20221:18;;;20214:62;-1:-1:-1;;;20292:18:40;;;20285:44;20346:19;;3325:201:10;19961:410:40;3325:201:10;3536:12;:16;;-1:-1:-1;;3536:16:10;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:10;;;;;3562:65;3398:137:5::1;3440:20;3468:26;3502:27;3398:34;:137::i;:::-;3651:14:10::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:10;;;3721:14;;-1:-1:-1;20528:36:40;;3721:14:10;;20516:2:40;20501:18;3721:14:10;;;;;;;3647:99;3269:483;3211:329:5;;;:::o;10455:1930::-;2505:21:12;:19;:21::i;:::-;1482:19:11::1;:17;:19::i;:::-;10747:33:5::0;;10716:65:::2;::::0;:30:::2;:65::i;:::-;10823:1;10796:17;:24;;;:28;10788:63;;;::::0;-1:-1:-1;;;10788:63:5;;20777:2:40;10788:63:5::2;::::0;::::2;20759:21:40::0;20816:2;20796:18;;;20789:30;-1:-1:-1;;;20835:18:40;;;20828:52;20897:18;;10788:63:5::2;20575:346:40::0;10788:63:5::2;10880:1;10865:12;:16;10857:50;;;::::0;-1:-1:-1;;;10857:50:5;;21128:2:40;10857:50:5::2;::::0;::::2;21110:21:40::0;21167:2;21147:18;;;21140:30;-1:-1:-1;;;21186:18:40;;;21179:51;21247:18;;10857:50:5::2;20926:345:40::0;10857:50:5::2;10949:33;::::0;::::2;::::0;10929:54:::2;::::0;;;:19:::2;:54;::::0;;;;;::::2;;:63;10914:124;;;::::0;-1:-1:-1;;;10914:124:5;;21478:2:40;10914:124:5::2;::::0;::::2;21460:21:40::0;21517:2;21497:18;;;21490:30;21556:32;21536:18;;;21529:60;21606:18;;10914:124:5::2;21276:354:40::0;10914:124:5::2;11104:24;::::0;::::2;::::0;11176:25:::2;::::0;11139:33;;11045:32:::2;::::0;11104:24;-1:-1:-1;;;;;11176:25:5;;::::2;11139:62:::0;::::2;::::0;11135:249:::2;;-1:-1:-1::0;;11246:25:5::2;::::0;-1:-1:-1;;;;;11246:25:5::2;::::0;11135:249:::2;;;11350:26;::::0;-1:-1:-1;;;;;11350:26:5::2;::::0;-1:-1:-1;11135:249:5::2;11414:10;11398:12;:26;;11390:60;;;::::0;-1:-1:-1;;;11390:60:5;;21128:2:40;11390:60:5::2;::::0;::::2;21110:21:40::0;21167:2;21147:18;;;21140:30;-1:-1:-1;;;21186:18:40;;;21179:51;21247:18;;11390:60:5::2;20926:345:40::0;11390:60:5::2;11457:58;11476:17;11495:19;11457:18;:58::i;:::-;11562:19;::::0;:31:::2;::::0;;-1:-1:-1;;;11562:31:5;;;;11537:125:::2;::::0;-1:-1:-1;;;;;11562:19:5::2;::::0;:29:::2;::::0;:31:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;:19;:31:::2;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11603:19;11632:22;11537:15;:125::i;:::-;11522:173;;;::::0;-1:-1:-1;;;11522:173:5;;21837:2:40;11522:173:5::2;::::0;::::2;21819:21:40::0;21876:2;21856:18;;;21849:30;-1:-1:-1;;;21895:18:40;;;21888:47;21952:18;;11522:173:5::2;21635:341:40::0;11522:173:5::2;11717:112;11742:17;:30;;;11782:19;11811:10;11717:15;:112::i;:::-;11702:160;;;::::0;-1:-1:-1;;;11702:160:5;;21837:2:40;11702:160:5::2;::::0;::::2;21819:21:40::0;21876:2;21856:18;;;21849:30;-1:-1:-1;;;21895:18:40;;;21888:47;21952:18;;11702:160:5::2;21635:341:40::0;11702:160:5::2;11869:16;11896:17;:31;;;:38;11938:1;11896:43:::0;11892:211:::2;;11960:54;11978:16;11996:17;11960;:54::i;:::-;11949:65;;11892:211;;;12046:50;12060:16;12078:17;12046:13;:50::i;:::-;12035:61;;11892:211;12109:46;12127:8;12137:17;12109;:46::i;:::-;12162:150;12182:8;12198:12;12218:17;:33;;;12259:17;:30;;;12297:9;12162:12;:150::i;:::-;-1:-1:-1::0;;;12339:33:5::2;::::0;::::2;::::0;12319:54:::2;::::0;;;:19:::2;:54;::::0;;;;:61;;-1:-1:-1;;12319:61:5::2;12376:4;12319:61;::::0;;2547:20:12;1787:1;3053:7;:22;2873:209;2547:20;10455:1930:5;;;;;:::o;2010:106:11:-;1928:7;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:11;;22183:2:40;2071:38:11;;;22165:21:40;22222:2;22202:18;;;22195:30;-1:-1:-1;;;22241:18:40;;;22234:46;22297:18;;2071:38:11;21981:340:40;28505:435:3;28694:25;;28764:26;;-1:-1:-1;;;;;28674:45:3;;;28694:25;;;28674:45;;;28764:26;;28744:46;28864:11;;28744:46;28864:25;;;28880:9;28879:10;28864:25;28860:76;;;28906:23;;-1:-1:-1;;;28906:23:3;;;;;;;;;;;28860:76;28593:347;;28505:435;:::o;32710:291::-;-1:-1:-1;;;;;32839:48:3;;;32930:1;32839:48;;;:30;:48;;;;;;;;:58;;;;;;;;:67;;;;;;;;;:88;;;:92;32828:169;;32953:37;;-1:-1:-1;;;32953:37:3;;-1:-1:-1;;;;;22490:32:40;;32953:37:3;;;22472:51:40;22445:18;;32953:37:3;22326:203:40;18493:2618:3;18728:25;;18700:24;;;;18600:32;;;;18688:1;;-1:-1:-1;;;;;18728:25:3;;;18700:53;;;18696:398;;18774:16;;18763:37;;18792:7;18763:10;:37::i;:::-;18843:25;;-1:-1:-1;;;;;18843:25:3;;-1:-1:-1;18843:25:3;;-1:-1:-1;18696:398:3;;;18914:66;18937:8;:16;;;18955:8;:15;;;18972:7;18914:22;:66::i;:::-;-1:-1:-1;19023:26:3;;19072:15;;;;-1:-1:-1;;;;;19023:26:3;;;;-1:-1:-1;18696:398:3;-1:-1:-1;;;;;19111:42:3;;;19195:1;19111:42;;;:15;:42;;;;;;;;19154:16;;19111:60;;;;;;;:66;;19100:654;;19279:26;;19236:1;;-1:-1:-1;;;;;19279:26:3;;;19250:55;;;;19246:193;;19354:26;;19413:16;;19333:97;;-1:-1:-1;;;19333:97:3;;-1:-1:-1;;;;;22726:32:40;;;19333:97:3;;;22708:51:40;22775:18;;;22768:34;;;;19354:26:3;;;19333:70;;22681:18:40;;19333:97:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19317:113;;19246:193;19526:50;;;;;;;;-1:-1:-1;;;;;19526:50:3;;;;;;-1:-1:-1;19526:50:3;;;;;;;;;;;;;19447:42;;;;;:15;:42;;;;;19499:16;;19447:76;;;;;;;;:129;;;;;;;;-1:-1:-1;;;19447:129:3;-1:-1:-1;;;;;;19447:129:3;;;;;;;;;;;-1:-1:-1;19447:129:3;;;;;;;19584:23;;19634:24;;;;19668:16;;19584:163;;-1:-1:-1;;;19584:163:3;;23311:15:40;;;19584:163:3;;;23293:34:40;23343:18;;;23336:34;;;;23386:18;;;23379:43;;;;23438:18;;;23431:50;;;;23497:19;;;23490:35;;;19584:23:3;;:40;;23227:19:40;;19584:163:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19204:550;19100:654;-1:-1:-1;;;;;19809:54:3;;;19760:46;19809:54;;;:15;:54;;;;;;;;19864:16;;19809:72;;;;;;;19760:121;;;;;;;;;;;;;;-1:-1:-1;;;19760:121:3;;;;;;;;;;;;;;;;;;;;20232:23;;20338:16;;20232:147;;-1:-1:-1;;;20232:147:3;;;;;19821:34:40;;;;19871:18;;;19864:34;;;;19934:15;;;19914:18;;;19907:43;19760:121:3;;:46;;20232:23;;;:61;;19756:18:40;;20232:147:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20190:189;;;;;;;20391:19;:24;;;20390:25;:65;;;;-1:-1:-1;20430:25:3;;-1:-1:-1;;;;;20419:36:3;;;;;;20390:65;20386:221;;;20523:19;:26;;;20500:19;20482:8;:15;;;:37;;;;:::i;:::-;:67;;20465:135;;;;-1:-1:-1;;;20465:135:3;;25136:2:40;20465:135:3;;;25118:21:40;25175:2;25155:18;;;25148:30;25214:33;25194:18;;;25187:61;25265:18;;20465:135:3;24934:355:40;20465:135:3;20613:32;20648:103;;;;;;;;20668:10;20648:103;;;;20686:1;20648:103;;;;20695:1;20648:103;;;;20720:1;-1:-1:-1;;;;;20648:103:3;;;;;20731:1;20648:103;;;;20740:5;20648:103;;;;;20613:138;;20856:133;;;;;;;;20874:8;:16;;;20856:133;;;;20898:7;-1:-1:-1;;;;;20856:133:3;;;;;20913:8;:14;;;20856:133;;;;20935:9;20856:133;;;;;;20952:11;20856:133;;;;20971:12;20856:133;;;20758:30;:56;20789:8;:24;;;-1:-1:-1;;;;;20758:56:3;-1:-1:-1;;;;;20758:56:3;;;;;;;;;;;;:74;20815:8;:16;;;20758:74;;;;;;;;;;;:95;20840:7;-1:-1:-1;;;;;20758:95:3;-1:-1:-1;;;;;20758:95:3;;;;;;;;;;;;:231;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20758:231:3;;;;;-1:-1:-1;;;;;20758:231:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20758:231:3;;;;;-1:-1:-1;;;;;20758:231:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20996:16;-1:-1:-1;;;;;20996:25:3;;21029:7;21052:4;21065:8;:16;;;21089:11;20996:110;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18594:2517;;;;;;18493:2618;;;:::o;2429:115:11:-;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;-1:-1:-1;;2488:14:11::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;929:10:24::0;;850:96;2524:12:11::1;2517:20;::::0;-1:-1:-1;;;;;22490:32:40;;;22472:51;;22460:2;22445:18;2517:20:11::1;;;;;;;2429:115::o:0;2580:287:12:-;1830:1;2712:7;;:19;2704:63;;;;-1:-1:-1;;;2704:63:12;;25496:2:40;2704:63:12;;;25478:21:40;25535:2;25515:18;;;25508:30;25574:33;25554:18;;;25547:61;25625:18;;2704:63:12;25294:355:40;2704:63:12;1830:1;2842:7;:18;2580:287::o;29878:869:3:-;-1:-1:-1;;;;;30011:48:3;;;;;;;:30;:48;;;;;;;;:58;;;;;;;;:67;;;;;;;;;;;:88;;;:93;;30000:268;;30126:135;;-1:-1:-1;;;30126:135:3;;;;;25913:25:40;;;30185:4:3;25992:18:40;;;25985:43;-1:-1:-1;;;;;26064:15:40;;;26044:18;;;26037:43;26116:15;;26096:18;;;26089:43;30243:10:3;26148:19:40;;;26141:44;25885:19;;30126:135:3;25654:537:40;30000:268:3;30304:25;;-1:-1:-1;;;;;30284:45:3;;;30304:25;;30284:45;:143;;;;-1:-1:-1;30359:25:3;;30339:65;;-1:-1:-1;;;30339:65:3;;;;;7016:25:40;;;30422:4:3;;-1:-1:-1;;;;;30359:25:3;;30339:55;;6989:18:40;;30339:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;30339:88:3;;;30284:143;30273:216;;;30449:33;;-1:-1:-1;;;30449:33:3;;-1:-1:-1;;;;;22490:32:40;;30449:33:3;;;22472:51:40;22445:18;;30449:33:3;22326:203:40;30273:216:3;30526:26;;-1:-1:-1;;;;;30506:46:3;;;30526:26;;30506:46;:175;;;;-1:-1:-1;30583:26:3;;30562:108;;-1:-1:-1;;;30562:108:3;;30639:4;30562:108;;;22708:51:40;22775:18;;;22768:34;;;-1:-1:-1;;;;;30583:26:3;;;;30562:59;;22681:18:40;;30562:108:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:119;30506:175;30495:248;;;30703:33;;-1:-1:-1;;;30703:33:3;;-1:-1:-1;;;;;22490:32:40;;30703:33:3;;;22472:51:40;22445:18;;30703:33:3;22326:203:40;32419:287:3;-1:-1:-1;;;;;32565:48:3;;;;;;;:30;:48;;;;;;;;:58;;;;;;;;:67;;;;;;;;;;:74;;;;32545:10;:94;32534:168;;32661:34;;-1:-1:-1;;;32661:34:3;;26398:2:40;32661:34:3;;;26380:21:40;26437:2;26417:18;;;26410:30;-1:-1:-1;;;26456:18:40;;;26449:41;26507:18;;32661:34:3;26196:335:40;31384:652:3;31604:26;;-1:-1:-1;;;;;31584:46:3;;;31604:26;;31584:46;:193;;;;-1:-1:-1;31661:26:3;;31640:114;;-1:-1:-1;;;31640:114:3;;-1:-1:-1;;;;;22726:32:40;;;31640:114:3;;;22708:51:40;22775:18;;;22768:34;;;31763:14:3;;31661:26;;31640:59;;22681:18:40;;31640:114:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:137;31584:193;31573:271;;;31799:38;;-1:-1:-1;;;31799:38:3;;;;;;;;;;;31573:271;-1:-1:-1;;;;;31860:48:3;;;;;;;:30;:48;;;;;;;;:58;;;;;;;;:67;;;;;;;;;:88;;;:105;-1:-1:-1;31849:183:3;;;31987:38;;-1:-1:-1;;;31987:38:3;;;;;;;;;;;21588:252;21663:15;21690:9;21686:150;;;-1:-1:-1;;21732:25:3;;-1:-1:-1;;;;;21732:25:3;;21588:252::o;21686:150::-;-1:-1:-1;;21802:26:3;;-1:-1:-1;;;;;21802:26:3;;21588:252::o;21686:150::-;21588:252;;;:::o;2873:209:12:-;1787:1;3053:7;:22;2873:209::o;24758:824:3:-;24879:100;24902:8;:16;;;24926:8;:24;;;24958:8;:15;;;24879;:100::i;:::-;24986:56;25017:8;:24;;;24986:30;:56::i;:::-;25049:150;25078:8;:16;;;25102:8;:24;;;25142:4;25155:8;:15;;;25178:8;:15;;;25049:21;:150::i;:::-;25206:29;25238:23;25252:8;25238:13;:23::i;:::-;25378:20;;;;25206:55;;-1:-1:-1;25365:1:3;;25373:71;;-1:-1:-1;25422:15:3;;;;25373:71;25450:127;25496:11;25515:8;25531:6;25545:7;25560:11;25450:38;:127::i;2676:117:11:-;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;-1:-1:-1;;2734:15:11::1;::::0;;2764:22:::1;929:10:24::0;2773:12:11::1;850:96:24::0;11478:637:3;5374:13:10;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;11680:34:3;::::1;::::0;;::::1;::::0;:86:::1;;-1:-1:-1::0;;;;;;11726:40:3;::::1;::::0;::::1;11680:86;:139;;;;-1:-1:-1::0;;;;;;11778:41:3;::::1;::::0;::::1;11680:139;11665:201;;;::::0;-1:-1:-1;;;11665:201:3;;27150:2:40;11665:201:3::1;::::0;::::1;27132:21:40::0;27189:2;27169:18;;;27162:30;27228:33;27208:18;;;27201:61;27279:18;;11665:201:3::1;26948:355:40::0;11665:201:3::1;11872:24;:22;:24::i;:::-;11902:17;:15;:17::i;:::-;11925:19;:63:::0;;-1:-1:-1;;;;;11925:63:3;;::::1;-1:-1:-1::0;;;;;;11925:63:3;;::::1;;::::0;;;11994:25:::1;:54:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;12054:26:::1;:56:::0;;;;;::::1;::::0;::::1;;::::0;;11478:637::o;17651:490:5:-;17782:24;17809:29;17820:17;17809:10;:29::i;:::-;17782:56;;17844:23;17870;:21;:23::i;:::-;17943:68;;17844:49;;-1:-1:-1;17900:23:5;;17943:68;;-1:-1:-1;;;17954:12:5;-1:-1:-1;;;17968:12:5;17844:49;;17999:11;;17943:68;;;:::i;:::-;;;;-1:-1:-1;;17943:68:5;;;;;;;;;17926:91;;17943:68;17926:91;;;;;-1:-1:-1;17926:91:5;18085:34;;;18077:59;;;;-1:-1:-1;;;18077:59:5;;28420:2:40;18077:59:5;;;28402:21:40;28459:2;28439:18;;;28432:30;-1:-1:-1;;;28478:18:40;;;28471:42;28530:18;;18077:59:5;28218:336:40;18077:59:5;17776:365;;;;17651:490;;:::o;15771:652::-;15957:65;;28801:66:40;15957:65:5;;;28789:79:40;28884:12;;;28877:28;;;15905:4:5;;;;28921:12:40;;15957:65:5;;;;;;;;;;;;15940:88;;;;;;15917:111;;16035:9;16050;16065:7;16087:10;:17;16108:2;16087:23;16079:60;;;;-1:-1:-1;;;16079:60:5;;29146:2:40;16079:60:5;;;29128:21:40;29185:2;29165:18;;;29158:30;29224:26;29204:18;;;29197:54;29268:18;;16079:60:5;28944:348:40;16079:60:5;-1:-1:-1;;;16190:2:5;16174:19;;16168:26;16228:2;16212:19;;16206:26;16274:2;16258:19;;16252:26;16249:1;16244:35;16299:2;16295:6;;16291:34;;;16311:7;16316:2;16311:7;;:::i;:::-;;;16291:34;16348:32;;;16331:14;16348:32;;;;;;;;;29677:25:40;;;29750:4;29738:17;;29718:18;;;29711:45;;;;29772:18;;;29765:34;;;29815:18;;;29808:34;;;16348:32:5;;29649:19:40;;16348:32:5;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16348:32:5;;-1:-1:-1;;16348:32:5;;-1:-1:-1;;;;;16393:25:5;;;;;;;;-1:-1:-1;;;;;;;15771:652:5;;;;;:::o;13659:439::-;13792:7;13807:16;13826;-1:-1:-1;;;;;13826:30:5;;13864:17;:26;;;13898:17;:25;;;13931:17;:24;;;13963:17;:30;;;14001:17;:24;;;14033:17;:33;;;13826:246;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13807:265;-1:-1:-1;;13659:439:5;;;;;:::o;14102:522::-;14231:7;14246:16;14265;-1:-1:-1;;;;;14265:35:5;;14308:17;:26;;;14342:17;:25;;;14375:17;:31;;;14414:17;:34;;;14456:17;:24;;;14488:17;:30;;;14526:17;:24;;;14558:17;:33;;;14265:332;;;;;;;;;;;;;;;;;;;;;;:::i;14628:334::-;14742:23;14768:133;;;;;;;;14783:8;14768:133;;;;14799:17;:24;;;14768:133;;;;14831:17;:33;;;-1:-1:-1;;;;;14768:133:5;;;;;14872:17;:23;;;14768:133;;;14742:159;;14908:49;14913:8;14923:1;14926:17;:30;;;14908:4;:49::i;15058:338::-;15218:23;15244:89;;;;;;;;15259:8;15244:89;;;;15275:7;15244:89;;;;15290:16;-1:-1:-1;;;;;15244:89:5;;;;;15314:13;-1:-1:-1;;;;;15244:89:5;;;;15218:115;;15339:52;15362:8;15372:10;15384:6;15339:22;:52::i;29288:234:3:-;29394:25;;29374:65;;-1:-1:-1;;;29374:65:3;;;;;7016:25:40;;;-1:-1:-1;;;;;29374:82:3;;;;29394:25;;29374:55;;6989:18:40;;29374:65:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;29374:82:3;;29363:155;;29478:33;;-1:-1:-1;;;29478:33:3;;32787:2:40;29478:33:3;;;32769:21:40;32826:2;32806:18;;;32799:30;-1:-1:-1;;;32845:18:40;;;32838:40;32895:18;;29478:33:3;32585:334:40;29363:155:3;29288:234;;:::o;33612:351::-;33768:26;;33747:102;;-1:-1:-1;;;33747:102:3;;-1:-1:-1;;;;;22726:32:40;;;33747:102:3;;;22708:51:40;22775:18;;;22768:34;;;33852:12:3;;33768:26;;33747:59;;22681:18:40;;33747:102:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:117;33736:223;;;33886:66;;-1:-1:-1;;;33886:66:3;;33126:2:40;33886:66:3;;;33108:21:40;33165:2;33145:18;;;33138:30;33204:34;33184:18;;;33177:62;-1:-1:-1;;;33255:18:40;;;33248:41;33306:19;;33886:66:3;32924:407:40;23557:229:3;23636:17;;:::i;:::-;-1:-1:-1;23705:24:3;;;;;-1:-1:-1;;;;;23674:56:3;;;;;;;:30;:56;;;;;;;23740:16;;23674:90;;;;;;;23765:15;;;;;23674:107;;;;;;;;;;23661:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23557:229::o;26314:931::-;26583:24;;;;;-1:-1:-1;;;;;26560:53:3;;;26511:46;26560:53;;;:15;:53;;;;;;;26614:19;;26560:74;;;;;;;;26511:123;;;;;;;;;;;;;;;;-1:-1:-1;;;26511:123:3;;;;;;;;;;;;;;;;;;;;;;;;;;26682:15;;;26653:44;;;;:80;;;;;26709:19;:24;;;26653:80;26652:138;;;;26774:8;:15;;;-1:-1:-1;;;;;26745:44:3;:19;:25;;;-1:-1:-1;;;;;26745:44:3;;;26652:138;26641:600;;;26805:132;26831:11;:17;;;26858:11;26879:6;26895:11;:24;;;:34;;;26805:16;:132::i;:::-;26945:53;26959:11;26972:8;26982:6;26990:7;26945:13;:53::i;:::-;26641:600;;;27019:143;27056:11;:17;;;27083:11;27104:6;27120:11;:24;;;:34;;;27019:27;:143::i;:::-;27170:64;27182:11;27195:8;27205:6;27213:7;27222:11;27170;:64::i;2188:106:11:-;1928:7;;;;2246:41;;;;-1:-1:-1;;;2246:41:11;;33538:2:40;2246:41:11;;;33520:21:40;33577:2;33557:18;;;33550:30;-1:-1:-1;;;33596:18:40;;;33589:50;33656:18;;2246:41:11;33336:344:40;1868:111:12;5374:13:10;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:10;;;;;;;:::i;:::-;1938:34:12::1;:32;:34::i;1063:97:11:-:0;5374:13:10;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:10;;;;;;;:::i;:::-;1126:27:11::1;:25;:27::i;19875:549:5:-:0;20033:33;;20074:26;;;;;20108:25;;;;;19968:12;20141:24;;;;20173:31;;;;20212:34;;;;20254:24;;;;20286:30;;;;20324:23;;;;20355:33;;;;20015:379;;19968:12;;19988:24;;20015:379;;20033:33;;20074:26;;20108:25;20015:379;;:::i;:::-;;;;-1:-1:-1;;20015:379:5;;;;;;;;;;19875:549;-1:-1:-1;;;19875:549:5:o;18269:572::-;18324:7;18339:22;18381:118;;;;;;35201:34:40;35189:47;;35266:34;35261:2;35252:12;;35245:56;-1:-1:-1;;;35326:2:40;35317:12;;35310:42;35377:2;35368:12;;34987:399;18381:118:5;;;;-1:-1:-1;;18381:118:5;;;;;;;;;18364:141;;18381:118;18364:141;;;;18541:29;;;;;;;;-1:-1:-1;;;18541:29:5;;;;;;;18609:14;;;;;;;;;;-1:-1:-1;;;18609:14:5;;;;18674:127;;;;;35650:25:40;;;;18531:40:5;35691:18:40;;;35684:34;18599:25:5;35734:18:40;;;35727:34;18757:13:5;35777:18:40;;;35770:34;18788:4:5;35820:19:40;;;;35813:61;;;;18674:127:5;;;;;;;;;;35622:19:40;;;;18674:127:5;;;18657:150;;;;;;;-1:-1:-1;;18269:572:5:o;55626:315:3:-;55781:7;55798:15;;55794:50;;-1:-1:-1;55836:1:3;55794:50;55864:19;55873:10;55864:6;:19;:::i;:::-;55854:6;:29;55850:87;;55900:30;;-1:-1:-1;;;55900:30:3;;;;;;;;;;;54378:821;54524:32;54559:40;54578:11;:20;;;54559:18;:40::i;:::-;54524:75;;54606:21;:9;1032:19:34;;1050:1;1032:19;;;945:123;54606:21:3;54634:11;54651:15;54672;54760:6;54710:19;;;;;;;;;-1:-1:-1;;;;;54710:19:3;-1:-1:-1;;;;;54710:43:3;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;54701:54;;:6;:54;:::i;:::-;54700:67;;;;:::i;:::-;54838:16;;54799:56;;-1:-1:-1;;;54799:56:3;;;;;7016:25:40;;;;54694:73:3;;-1:-1:-1;54866:6:3;;-1:-1:-1;;;;;54799:38:3;;;;;6989:18:40;;54799:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;54790:65;;:6;:65;:::i;:::-;54789:84;;;;:::i;:::-;54773:100;-1:-1:-1;54900:13:3;54773:100;54900:3;:13;:::i;:::-;54890:24;;:6;:24;:::i;:::-;54880:34;;54921:165;54957:16;54981:11;55000:8;55016:7;55031;55046:5;55059:6;55073:7;54921:28;:165::i;:::-;55101:19;;;;;;;;;-1:-1:-1;;;;;55101:19:3;-1:-1:-1;;;;;55101:25:3;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;55093:45:3;:50;55139:3;55093:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55157:11;:18;;;-1:-1:-1;;;;;55149:36:3;:45;55186:7;55149:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54518:681;;;;54378:821;;;;:::o;56412:734::-;56578:7;56595:15;;56591:50;;-1:-1:-1;56633:1:3;56591:50;56692:18;56713:19;56722:10;56713:6;:19;:::i;:::-;56692:40;-1:-1:-1;56792:16:3;56830:3;56812:14;56692:40;56825:1;56812:14;:::i;:::-;56811:22;;;;:::i;:::-;56792:41;-1:-1:-1;56840:17:3;56860:21;56792:41;56860:10;:21;:::i;:::-;56840:41;;56960:9;56950:6;:19;;:38;;;;-1:-1:-1;56973:15:3;;56950:38;56946:96;;;57005:30;;-1:-1:-1;;;57005:30:3;;;;;;;;;;;56946:96;57061:9;57052:6;:18;:36;;;;;57087:1;57074:10;:14;57052:36;57048:94;;;57105:30;;-1:-1:-1;;;57105:30:3;;;;;;;;;;;57048:94;56551:595;;;;56412:734;;;;:::o;36347:1573::-;36516:32;36551:40;36570:11;:20;;;36551:18;:40::i;:::-;36671:24;;;;;-1:-1:-1;;;;;36648:53:3;36597:48;36648:53;;;:15;:53;;;;;;;36702:16;;36648:71;;;;;36756:27;;;;36516:75;;-1:-1:-1;36648:71:3;36756:41;;36786:11;;36756:41;:::i;:::-;36726:27;;;:71;36803:23;;36860:24;;;;;36892:16;;36803:130;;-1:-1:-1;;;36803:130:3;;-1:-1:-1;;;;;36500:32:40;;;36803:130:3;;;36482:51:40;36549:18;;;36542:34;;;;36592:18;;;36585:34;;;36803:23:3;;;;:49;;36455:18:40;;36803:130:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;36996:16:3;;36940:97;;-1:-1:-1;;;36940:97:3;;;;;36804:25:40;;;;36845:18;;;36838:34;;;-1:-1:-1;;;;;36940:48:3;;;-1:-1:-1;36940:48:3;;-1:-1:-1;36777:18:40;;36940:97:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37048:20;:27;;;37079:1;37048:32;37044:280;;37090:32;;-1:-1:-1;;;;37090:32:3;-1:-1:-1;;;37090:32:3;;;37130:23;;37187:24;;;;;37221:16;;37130:129;;-1:-1:-1;;;37130:129:3;;-1:-1:-1;;;;;37097:32:40;;;37130:129:3;;;37079:51:40;37146:18;;;37139:34;;;;-1:-1:-1;37189:18:40;;;37182:50;37130:23:3;;;;:47;;37052:18:40;;37130:129:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;37300:16:3;;37267:50;;-1:-1:-1;;;37267:50:3;;;;;7016:25:40;;;;-1:-1:-1;;;;;37267:32:3;;;-1:-1:-1;37267:32:3;;-1:-1:-1;6989:18:40;;37267:50:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37044:280;37330:21;:9;1032:19:34;;1050:1;1032:19;;;945:123;37330:21:3;37358:11;;;37507:6;37485:17;:6;37495;37485:17;:::i;:::-;37484:30;;;;:::i;:::-;37465:49;;37587:6;37539:19;;;;;;;;;-1:-1:-1;;;;;37539:19:3;-1:-1:-1;;;;;37539:41:3;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;37528:54;;:8;:54;:::i;:::-;37527:67;;;;:::i;:::-;37521:73;;37661:6;37622:19;;;;;;;;;-1:-1:-1;;;;;37622:19:3;-1:-1:-1;;;;;37622:32:3;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;37611:45;;:8;:45;:::i;:::-;37610:58;;;;:::i;:::-;37600:68;-1:-1:-1;37675:173:3;37711:16;37735:11;37754:8;37770:14;37781:3;37770:8;:14;:::i;:::-;37792:7;37807:4;37819:8;37835:7;37675:28;:173::i;:::-;37863:19;;;;;;;;;-1:-1:-1;;;;;37863:19:3;-1:-1:-1;;;;;37863:25:3;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;37855:45:3;:60;37901:13;37911:3;37901:7;:13;:::i;:::-;37855:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36510:1410;;;;;36347:1573;;;;;:::o;1985:109:12:-;5374:13:10;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:10;;;;;;;:::i;1166:95:11:-;5374:13:10;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:10;;;;;;;:::i;:::-;1239:7:11::1;:15:::0;;-1:-1:-1;;1239:15:11::1;::::0;;1166:95::o;39227:1095:3:-;39560:16;;39529:48;;-1:-1:-1;;;39529:48:3;;39503:23;;-1:-1:-1;;;;;39529:30:3;;;;;:48;;;;7016:25:40;;;7004:2;6989:18;;6870:177;39529:48:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;39503:74;;39588:13;39584:67;;;-1:-1:-1;39629:15:3;;;;39584:67;39700:16;;39661:56;;-1:-1:-1;;;39661:56:3;;;;;7016:25:40;;;;-1:-1:-1;;;;;39661:38:3;;;;;6989:18:40;;39661:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;39657:291;;;39727:200;39759:16;39785:8;39803;39821:17;39848:15;39873:13;39896:6;39912:7;39727:22;:200::i;:::-;39935:7;;;39657:291;39958:13;39954:194;;;39981:146;40013:16;40039:11;40060:8;40078;40096:6;40112:7;39981:22;:146::i;39954:194::-;40154:163;40186:16;40210:8;40226:15;40249:17;40274:8;40290:6;40304:7;40154:24;:163::i;51377:563::-;51711:16;;51735:15;;;;51642:114;;-1:-1:-1;;;51642:114:3;;-1:-1:-1;;;;;51642:25:3;;;;;:114;;51683:4;;51696:7;;51711:16;;51642:114;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51762:173;51782:8;51798:17;51823:15;51846:16;51870:8;51886:14;51908:6;51922:7;51762:12;:173::i;41336:449::-;41620:16;;41644:15;;;;41551:114;;-1:-1:-1;;;41551:114:3;;-1:-1:-1;;;;;41551:25:3;;;;;:114;;41592:4;;41605:7;;41620:16;;41551:114;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41680:11;:18;;;-1:-1:-1;;;;;41672:36:3;:46;41709:8;41672:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41724:56;41744:8;41754;41764:6;41772:7;41724:19;:56::i;43767:450::-;44061:16;;44085:15;;;;43992:114;;-1:-1:-1;;;43992:114:3;;-1:-1:-1;;;;;43992:25:3;;;;;:114;;44033:4;;44046:7;;44061:16;;43992:114;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;44113:35:3;;-1:-1:-1;;;;;44113:25:3;;;-1:-1:-1;44113:35:3;;;;;-1:-1:-1;44139:8:3;;44113:35;;;;44139:8;44113:25;:35;;;;;;;;;;;;;;;;;;;;;44154:58;44176:8;44186;44196:6;44204:7;44154:21;:58::i;:::-;43767:450;;;;;;;:::o;46435:1611::-;46682:29;46714:23;46728:8;46714:13;:23::i;:::-;46682:55;-1:-1:-1;46771:17:3;46795:62;;;;-1:-1:-1;46842:8:3;46795:62;46956:16;;46903:70;;-1:-1:-1;;;46903:70:3;;46863:37;;-1:-1:-1;;;;;46903:52:3;;;;;:70;;;;7016:25:40;;;7004:2;6989:18;;6870:177;46903:70:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;47081:16;;47033:68;;-1:-1:-1;;;47033:68:3;;;;;36804:25:40;;;;46980:24:3;36845:18:40;;;36838:34;;;46863:110:3;;-1:-1:-1;47112:6:3;;-1:-1:-1;;;;;47033:47:3;;;;;36777:18:40;;47033:68:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;47008:93;;:16;:93;:::i;:::-;47007:112;;;;:::i;:::-;47126:43;;46980:139;;-1:-1:-1;;;;;;47126:25:3;;;:43;;;;;46980:139;;47126:43;;;;46980:139;47126:25;:43;;;;;;;;;;;;;;;;;;;;-1:-1:-1;47218:9:3;918:14:34;47180:102:3;;;-1:-1:-1;;;;;22726:32:40;;22708:51;;22790:2;22775:18;;22768:34;;;47180:102:3;;22681:18:40;47180:102:3;;;;;;;47306:1;47289:555;47313:29;47309:1;:33;47289:555;;;47475:16;;47414:104;;-1:-1:-1;;;47414:104:3;;47531:6;;-1:-1:-1;;;;;47414:47:3;;;;;:104;;47505:1;;47414:104;;36804:25:40;;;36860:2;36845:18;;36838:34;36792:2;36777:18;;36630:248;47414:104:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;47385:133;;:16;:133;:::i;:::-;47384:154;;;;:::i;:::-;47357:181;;47546:20;47569:16;-1:-1:-1;;;;;47569:35:3;;47614:8;:16;;;47644:1;47640;:5;;;;:::i;:::-;47569:84;;-1:-1:-1;;;;;;47569:84:3;;;;;;;;;;36804:25:40;;;;36845:18;;;36838:34;36777:18;;47569:84:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;47661:48;;47546:107;;-1:-1:-1;;;;;;47661:30:3;;;:48;;;;;47692:16;;47661:48;;;;47692:16;47661:30;:48;;;;;;;;;;;;;;;;;;;;-1:-1:-1;47762:9:3;918:14:34;47722:115:3;;;-1:-1:-1;;;;;22726:32:40;;22708:51;;22790:2;22775:18;;22768:34;;;47722:115:3;;22681:18:40;47722:115:3;;;;;;;-1:-1:-1;47344:3:3;;;;:::i;:::-;;;;47289:555;;;;47850:53;47894:8;47850:43;:53::i;:::-;47909:132;47941:8;47957:11;47976:8;47992:14;48014:6;48028:7;47909:24;:132::i;:::-;46676:1370;;;;46435:1611;;;;;;;;:::o;41789:454::-;41928:53;41972:8;41928:43;:53::i;:::-;42064:16;;42037:9;918:14:34;42088:15:3;;;;42156;;;;42207:25;;42179:24;;;;;41992:246;;;;;;42088:15;;42111:7;;42126:6;;42140:8;;42156:15;-1:-1:-1;;;;;42179:53:3;;;42207:25;;42179:53;;;;;41992:246;:::i;:::-;;;;;;;;41789:454;;;;:::o;44221:458::-;44362:53;44406:8;44362:43;:53::i;:::-;44500:16;;44473:9;918:14:34;44524:15:3;;;;44592;;;;44643:25;;44615:24;;;;;44426:248;;;;;;44524:15;;44547:7;;44562:6;;44576:8;;44592:15;-1:-1:-1;;;;;44615:53:3;;;44643:25;;44615:53;;;;;44426:248;:::i;42247:456::-;42411:24;;;;;-1:-1:-1;;;;;42373:68:3;;;42347:23;42373:68;;;:30;:68;;;;;;;42442:16;;42373:86;;;;;;;42460:15;;;;42373:103;;;;;;;;;;;;42521:15;;;;42502:16;;;;:34;;42521:15;42502:34;:::i;:::-;42483:16;;;:53;;;42567:1;42547:21;42543:156;;-1:-1:-1;42616:24:3;;;;;-1:-1:-1;;;;;42585:56:3;;;;;;;:30;:56;;;;;;;42651:16;;42585:90;;;;;;;42676:15;;;;;42585:107;;;;;;;;;;42578:114;;;;;;;;-1:-1:-1;;;;;;42578:114:3;;;;;;;;;;;;;;;;;-1:-1:-1;;42578:114:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42247:456::o;48989:720::-;49197:14;49193:285;;;49302:16;;49273:9;918:14:34;49226:231:3;49328:8;:15;;;49353:7;49370:6;49386:8;49404;:15;;;49429:11;:20;;;49226:231;;;;;;;;;;;:::i;:::-;;;;;;;;49465:7;;49193:285;49563:16;;49536:9;918:14:34;49489:215:3;49587:8;:15;;;49610:7;49625:6;49639:8;49655;:15;;;49678:11;:20;;;49489:215;;;;;;;;;;;:::i;:::-;;;;;;;;48989:720;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:40:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:40;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:40:o;497:131::-;-1:-1:-1;;;;;572:31:40;;562:42;;552:70;;618:1;615;608:12;633:134;701:20;;730:31;701:20;730:31;:::i;772:247::-;831:6;884:2;872:9;863:7;859:23;855:32;852:52;;;900:1;897;890:12;852:52;939:9;926:23;958:31;983:5;958:31;:::i;1024:452::-;1110:6;1118;1126;1134;1187:3;1175:9;1166:7;1162:23;1158:33;1155:53;;;1204:1;1201;1194:12;1155:53;1240:9;1227:23;1217:33;;1297:2;1286:9;1282:18;1269:32;1259:42;;1351:2;1340:9;1336:18;1323:32;1364:31;1389:5;1364:31;:::i;:::-;1024:452;;;;-1:-1:-1;1414:5:40;;1466:2;1451:18;1438:32;;-1:-1:-1;;1024:452:40:o;1481:347::-;1532:8;1542:6;1596:3;1589:4;1581:6;1577:17;1573:27;1563:55;;1614:1;1611;1604:12;1563:55;-1:-1:-1;1637:20:40;;-1:-1:-1;;;;;1669:30:40;;1666:50;;;1712:1;1709;1702:12;1666:50;1749:4;1741:6;1737:17;1725:29;;1801:3;1794:4;1785:6;1777;1773:19;1769:30;1766:39;1763:59;;;1818:1;1815;1808:12;1763:59;1481:347;;;;;:::o;1833:754::-;1930:6;1938;1946;1954;1962;2015:3;2003:9;1994:7;1990:23;1986:33;1983:53;;;2032:1;2029;2022:12;1983:53;2071:9;2058:23;2090:31;2115:5;2090:31;:::i;:::-;2140:5;-1:-1:-1;2197:2:40;2182:18;;2169:32;2210:33;2169:32;2210:33;:::i;:::-;2262:7;-1:-1:-1;2316:2:40;2301:18;;2288:32;;-1:-1:-1;2371:2:40;2356:18;;2343:32;-1:-1:-1;;;;;2387:30:40;;2384:50;;;2430:1;2427;2420:12;2384:50;2469:58;2519:7;2510:6;2499:9;2495:22;2469:58;:::i;:::-;1833:754;;;;-1:-1:-1;1833:754:40;;-1:-1:-1;2546:8:40;;2443:84;1833:754;-1:-1:-1;;;1833:754:40:o;2799:383::-;2876:6;2884;2892;2945:2;2933:9;2924:7;2920:23;2916:32;2913:52;;;2961:1;2958;2951:12;2913:52;3000:9;2987:23;3019:31;3044:5;3019:31;:::i;:::-;3069:5;3121:2;3106:18;;3093:32;;-1:-1:-1;3172:2:40;3157:18;;;3144:32;;2799:383;-1:-1:-1;;;2799:383:40:o;3187:118::-;3273:5;3266:13;3259:21;3252:5;3249:32;3239:60;;3295:1;3292;3285:12;3310:661;3402:6;3410;3418;3426;3434;3487:3;3475:9;3466:7;3462:23;3458:33;3455:53;;;3504:1;3501;3494:12;3455:53;3543:9;3530:23;3562:31;3587:5;3562:31;:::i;:::-;3612:5;-1:-1:-1;3664:2:40;3649:18;;3636:32;;-1:-1:-1;3720:2:40;3705:18;;3692:32;3733:33;3692:32;3733:33;:::i;:::-;3785:7;-1:-1:-1;3844:2:40;3829:18;;3816:32;3857:30;3816:32;3857:30;:::i;:::-;3310:661;;;;-1:-1:-1;3310:661:40;;3960:3;3945:19;3932:33;;3310:661;-1:-1:-1;;3310:661:40:o;3976:180::-;4035:6;4088:2;4076:9;4067:7;4063:23;4059:32;4056:52;;;4104:1;4101;4094:12;4056:52;-1:-1:-1;4127:23:40;;3976:180;-1:-1:-1;3976:180:40:o;4161:315::-;4229:6;4237;4290:2;4278:9;4269:7;4265:23;4261:32;4258:52;;;4306:1;4303;4296:12;4258:52;4345:9;4332:23;4364:31;4389:5;4364:31;:::i;:::-;4414:5;4466:2;4451:18;;;;4438:32;;-1:-1:-1;;;4161:315:40:o;4841:450::-;4915:6;4923;4931;4984:2;4972:9;4963:7;4959:23;4955:32;4952:52;;;5000:1;4997;4990:12;4952:52;5039:9;5026:23;5058:31;5083:5;5058:31;:::i;:::-;5108:5;-1:-1:-1;5160:2:40;5145:18;;5132:32;;-1:-1:-1;5216:2:40;5201:18;;5188:32;5229:30;5188:32;5229:30;:::i;:::-;5278:7;5268:17;;;4841:450;;;;;:::o;5296:127::-;5357:10;5352:3;5348:20;5345:1;5338:31;5388:4;5385:1;5378:15;5412:4;5409:1;5402:15;5428:255;5500:2;5494:9;5542:6;5530:19;;-1:-1:-1;;;;;5564:34:40;;5600:22;;;5561:62;5558:88;;;5626:18;;:::i;:::-;5662:2;5655:22;5428:255;:::o;5688:253::-;5760:2;5754:9;5802:4;5790:17;;-1:-1:-1;;;;;5822:34:40;;5858:22;;;5819:62;5816:88;;;5884:18;;:::i;5946:275::-;6017:2;6011:9;6082:2;6063:13;;-1:-1:-1;;6059:27:40;6047:40;;-1:-1:-1;;;;;6102:34:40;;6138:22;;;6099:62;6096:88;;;6164:18;;:::i;:::-;6200:2;6193:22;5946:275;;-1:-1:-1;5946:275:40:o;6226:639::-;6312:6;6365:2;6353:9;6344:7;6340:23;6336:32;6333:52;;;6381:1;6378;6371:12;6333:52;6414:2;6408:9;6456:2;6448:6;6444:15;6525:6;6513:10;6510:22;-1:-1:-1;;;;;6477:10:40;6474:34;6471:62;6468:88;;;6536:18;;:::i;:::-;6576:10;6572:2;6565:22;;6624:9;6611:23;6603:6;6596:39;6696:2;6685:9;6681:18;6668:32;6663:2;6655:6;6651:15;6644:57;6751:2;6740:9;6736:18;6723:32;6764:31;6789:5;6764:31;:::i;:::-;6823:2;6811:15;;6804:30;6815:6;6226:639;-1:-1:-1;;;6226:639:40:o;7052:777::-;7135:6;7188:3;7176:9;7167:7;7163:23;7159:33;7156:53;;;7205:1;7202;7195:12;7156:53;7238:2;7232:9;7280:3;7272:6;7268:16;7350:6;7338:10;7335:22;-1:-1:-1;;;;;7302:10:40;7299:34;7296:62;7293:88;;;7361:18;;:::i;:::-;7401:10;7397:2;7390:22;;7449:9;7436:23;7428:6;7421:39;7521:2;7510:9;7506:18;7493:32;7488:2;7480:6;7476:15;7469:57;7576:2;7565:9;7561:18;7548:32;7589:31;7614:5;7589:31;:::i;:::-;7648:2;7636:15;;7629:30;7711:2;7696:18;;7683:32;7724:33;7683:32;7724:33;:::i;:::-;7785:2;7773:15;;7766:32;7777:6;7052:777;-1:-1:-1;;;7052:777:40:o;7834:367::-;7897:8;7907:6;7961:3;7954:4;7946:6;7942:17;7938:27;7928:55;;7979:1;7976;7969:12;7928:55;-1:-1:-1;8002:20:40;;-1:-1:-1;;;;;8034:30:40;;8031:50;;;8077:1;8074;8067:12;8031:50;8114:4;8106:6;8102:17;8090:29;;8174:3;8167:4;8157:6;8154:1;8150:14;8142:6;8138:27;8134:38;8131:47;8128:67;;;8191:1;8188;8181:12;8206:1338;8366:6;8374;8382;8390;8398;8406;8414;8422;8475:3;8463:9;8454:7;8450:23;8446:33;8443:53;;;8492:1;8489;8482:12;8443:53;8531:9;8518:23;8550:31;8575:5;8550:31;:::i;:::-;8600:5;-1:-1:-1;8657:2:40;8642:18;;8629:32;8670:33;8629:32;8670:33;:::i;:::-;8722:7;-1:-1:-1;8780:2:40;8765:18;;8752:32;-1:-1:-1;;;;;8833:14:40;;;8830:34;;;8860:1;8857;8850:12;8830:34;8899:70;8961:7;8952:6;8941:9;8937:22;8899:70;:::i;:::-;8988:8;;-1:-1:-1;8873:96:40;-1:-1:-1;9076:2:40;9061:18;;9048:32;;-1:-1:-1;9092:16:40;;;9089:36;;;9121:1;9118;9111:12;9089:36;9160:72;9224:7;9213:8;9202:9;9198:24;9160:72;:::i;:::-;9251:8;;-1:-1:-1;9134:98:40;-1:-1:-1;9339:3:40;9324:19;;9311:33;;-1:-1:-1;9356:16:40;;;9353:36;;;9385:1;9382;9375:12;9353:36;;9424:60;9476:7;9465:8;9454:9;9450:24;9424:60;:::i;:::-;8206:1338;;;;-1:-1:-1;8206:1338:40;;-1:-1:-1;8206:1338:40;;;;;;9503:8;-1:-1:-1;;;8206:1338:40:o;9549:525::-;9635:6;9643;9651;9659;9712:3;9700:9;9691:7;9687:23;9683:33;9680:53;;;9729:1;9726;9719:12;9680:53;9765:9;9752:23;9742:33;;9822:2;9811:9;9807:18;9794:32;9784:42;;9876:2;9865:9;9861:18;9848:32;9889:31;9914:5;9889:31;:::i;:::-;9939:5;-1:-1:-1;9996:2:40;9981:18;;9968:32;10009:33;9968:32;10009:33;:::i;:::-;9549:525;;;;-1:-1:-1;9549:525:40;;-1:-1:-1;;9549:525:40:o;10079:456::-;10156:6;10164;10172;10225:2;10213:9;10204:7;10200:23;10196:32;10193:52;;;10241:1;10238;10231:12;10193:52;10280:9;10267:23;10299:31;10324:5;10299:31;:::i;:::-;10349:5;-1:-1:-1;10401:2:40;10386:18;;10373:32;;-1:-1:-1;10457:2:40;10442:18;;10429:32;10470:33;10429:32;10470:33;:::i;11529:545::-;11622:6;11630;11638;11691:2;11679:9;11670:7;11666:23;11662:32;11659:52;;;11707:1;11704;11697:12;11659:52;11746:9;11733:23;11765:31;11790:5;11765:31;:::i;:::-;11815:5;-1:-1:-1;11872:2:40;11857:18;;11844:32;11885:33;11844:32;11885:33;:::i;:::-;11937:7;-1:-1:-1;11996:2:40;11981:18;;11968:32;12009:33;11968:32;12009:33;:::i;12079:823::-;12185:6;12193;12201;12209;12217;12225;12278:3;12266:9;12257:7;12253:23;12249:33;12246:53;;;12295:1;12292;12285:12;12246:53;12334:9;12321:23;12353:31;12378:5;12353:31;:::i;:::-;12403:5;-1:-1:-1;12460:2:40;12445:18;;12432:32;12473:33;12432:32;12473:33;:::i;:::-;12525:7;-1:-1:-1;12579:2:40;12564:18;;12551:32;;-1:-1:-1;12630:2:40;12615:18;;12602:32;;-1:-1:-1;12685:3:40;12670:19;;12657:33;-1:-1:-1;;;;;12702:30:40;;12699:50;;;12745:1;12742;12735:12;12699:50;12784:58;12834:7;12825:6;12814:9;12810:22;12784:58;:::i;:::-;12079:823;;;;-1:-1:-1;12079:823:40;;-1:-1:-1;12079:823:40;;12861:8;;12079:823;-1:-1:-1;;;12079:823:40:o;12907:531::-;12950:5;13003:3;12996:4;12988:6;12984:17;12980:27;12970:55;;13021:1;13018;13011:12;12970:55;13057:6;13044:20;-1:-1:-1;;;;;13079:2:40;13076:26;13073:52;;;13105:18;;:::i;:::-;13149:55;13192:2;13173:13;;-1:-1:-1;;13169:27:40;13198:4;13165:38;13149:55;:::i;:::-;13229:2;13220:7;13213:19;13275:3;13268:4;13263:2;13255:6;13251:15;13247:26;13244:35;13241:55;;;13292:1;13289;13282:12;13241:55;13357:2;13350:4;13342:6;13338:17;13331:4;13322:7;13318:18;13305:55;13405:1;13380:16;;;13398:4;13376:27;13369:38;;;;13384:7;12907:531;-1:-1:-1;;;12907:531:40:o;13443:183::-;13503:4;-1:-1:-1;;;;;13528:6:40;13525:30;13522:56;;;13558:18;;:::i;:::-;-1:-1:-1;13603:1:40;13599:14;13615:4;13595:25;;13443:183::o;13631:737::-;13685:5;13738:3;13731:4;13723:6;13719:17;13715:27;13705:55;;13756:1;13753;13746:12;13705:55;13792:6;13779:20;13818:4;13842:60;13858:43;13898:2;13858:43;:::i;:::-;13842:60;:::i;:::-;13936:15;;;14022:1;14018:10;;;;14006:23;;14002:32;;;13967:12;;;;14046:15;;;14043:35;;;14074:1;14071;14064:12;14043:35;14110:2;14102:6;14098:15;14122:217;14138:6;14133:3;14130:15;14122:217;;;14218:3;14205:17;14235:31;14260:5;14235:31;:::i;:::-;14279:18;;14317:12;;;;14155;;14122:217;;;-1:-1:-1;14357:5:40;13631:737;-1:-1:-1;;;;;;13631:737:40:o;14373:662::-;14427:5;14480:3;14473:4;14465:6;14461:17;14457:27;14447:55;;14498:1;14495;14488:12;14447:55;14534:6;14521:20;14560:4;14584:60;14600:43;14640:2;14600:43;:::i;14584:60::-;14678:15;;;14764:1;14760:10;;;;14748:23;;14744:32;;;14709:12;;;;14788:15;;;14785:35;;;14816:1;14813;14806:12;14785:35;14852:2;14844:6;14840:15;14864:142;14880:6;14875:3;14872:15;14864:142;;;14946:17;;14934:30;;14984:12;;;;14897;;14864:142;;15040:2108;15186:6;15194;15202;15210;15218;15271:3;15259:9;15250:7;15246:23;15242:33;15239:53;;;15288:1;15285;15278:12;15239:53;15328:9;15315:23;-1:-1:-1;;;;;15398:2:40;15390:6;15387:14;15384:34;;;15414:1;15411;15404:12;15384:34;15437:22;;;;15493:6;15475:16;;;15471:29;15468:49;;;15513:1;15510;15503:12;15468:49;15539:22;;:::i;:::-;15584;15603:2;15584:22;:::i;:::-;15577:5;15570:37;15653:2;15649;15645:11;15632:25;15682:2;15672:8;15669:16;15666:36;;;15698:1;15695;15688:12;15666:36;15734:45;15771:7;15760:8;15756:2;15752:17;15734:45;:::i;:::-;15729:2;15722:5;15718:14;15711:69;;15833:2;15829;15825:11;15812:25;15807:2;15800:5;15796:14;15789:49;15884:2;15880;15876:11;15863:25;15913:2;15903:8;15900:16;15897:36;;;15929:1;15926;15919:12;15897:36;15965:45;16002:7;15991:8;15987:2;15983:17;15965:45;:::i;:::-;15960:2;15953:5;15949:14;15942:69;;16057:3;16053:2;16049:12;16036:26;16087:2;16077:8;16074:16;16071:36;;;16103:1;16100;16093:12;16071:36;16140:56;16188:7;16177:8;16173:2;16169:17;16140:56;:::i;:::-;16134:3;16127:5;16123:15;16116:81;;16243:3;16239:2;16235:12;16222:26;16273:2;16263:8;16260:16;16257:36;;;16289:1;16286;16279:12;16257:36;16326:56;16374:7;16363:8;16359:2;16355:17;16326:56;:::i;:::-;16320:3;16313:5;16309:15;16302:81;;16437:3;16433:2;16429:12;16416:26;16410:3;16403:5;16399:15;16392:51;16476:32;16503:3;16499:2;16495:12;16476:32;:::i;:::-;16470:3;16459:15;;16452:57;16528:3;16576:11;;;16563:25;16547:14;;;16540:49;16608:3;16656:11;;;16643:25;16627:14;;;16620:49;;;;16463:5;;-1:-1:-1;16740:2:40;16725:18;;16712:32;;-1:-1:-1;16797:2:40;16782:18;;16769:32;;16813:16;;;16810:36;;;16842:1;16839;16832:12;16810:36;16865:52;16909:7;16898:8;16887:9;16883:24;16865:52;:::i;:::-;16855:62;;16970:2;16959:9;16955:18;16942:32;16926:48;;16999:2;16989:8;16986:16;16983:36;;;17015:1;17012;17005:12;16983:36;;17038:52;17082:7;17071:8;17060:9;17056:24;17038:52;:::i;:::-;15040:2108;;;;-1:-1:-1;15040:2108:40;;17137:3;17122:19;17109:33;;15040:2108;-1:-1:-1;;;15040:2108:40:o;17153:251::-;17223:6;17276:2;17264:9;17255:7;17251:23;17247:32;17244:52;;;17292:1;17289;17282:12;17244:52;17324:9;17318:16;17343:31;17368:5;17343:31;:::i;17409:336::-;17611:2;17593:21;;;17650:2;17630:18;;;17623:30;-1:-1:-1;;;17684:2:40;17669:18;;17662:42;17736:2;17721:18;;17409:336::o;18202:127::-;18263:10;18258:3;18254:20;18251:1;18244:31;18294:4;18291:1;18284:15;18318:4;18315:1;18308:15;18334:128;18401:9;;;18422:11;;;18419:37;;;18436:18;;:::i;18820:447::-;-1:-1:-1;;;;;19107:15:40;;;19089:34;;19159:15;;;;19154:2;19139:18;;19132:43;19206:2;19191:18;;19184:34;19249:2;19234:18;;19227:34;;;;19038:3;19023:19;;18820:447::o;22813:184::-;22883:6;22936:2;22924:9;22915:7;22911:23;22907:32;22904:52;;;22952:1;22949;22942:12;22904:52;-1:-1:-1;22975:16:40;;22813:184;-1:-1:-1;22813:184:40:o;23536:1263::-;23677:6;23685;23693;23701;23709;23717;23761:9;23752:7;23748:23;23791:3;23787:2;23783:12;23780:32;;;23808:1;23805;23798:12;23780:32;23837:9;23831:16;23821:26;;23890:2;23879:9;23875:18;23869:25;23903:31;23928:5;23903:31;:::i;:::-;23998:2;23983:18;;23977:25;24047:2;24032:18;;24026:25;23953:5;;-1:-1:-1;23977:25:40;-1:-1:-1;24060:30:40;24026:25;24060:30;:::i;:::-;24156:3;24141:19;;24135:26;24109:7;;-1:-1:-1;24135:26:40;-1:-1:-1;24196:4:40;-1:-1:-1;;24177:17:40;;24173:28;24170:48;;;24214:1;24211;24204:12;24170:48;;24242:22;;:::i;:::-;24310:3;24299:9;24295:19;24289:26;24280:7;24273:43;24371:4;24360:9;24356:20;24350:27;24345:2;24336:7;24332:16;24325:53;24433:3;24422:9;24418:19;24412:26;24407:2;24398:7;24394:16;24387:52;24484:3;24473:9;24469:19;24463:26;24498:33;24523:7;24498:33;:::i;:::-;24560:2;24547:16;;24540:33;24629:3;24614:19;;24608:26;24602:3;24589:17;;24582:53;24680:3;24665:19;;24659:26;24694:30;24659:26;24694:30;:::i;:::-;24759:7;24753:3;24744:7;24740:17;24733:34;;24786:7;24776:17;;;23536:1263;;;;;;;;:::o;24804:125::-;24869:9;;;24890:10;;;24887:36;;;24903:18;;:::i;26536:407::-;26738:2;26720:21;;;26777:2;26757:18;;;26750:30;26816:34;26811:2;26796:18;;26789:62;-1:-1:-1;;;26882:2:40;26867:18;;26860:41;26933:3;26918:19;;26536:407::o;27308:422::-;27349:3;27387:5;27381:12;27414:6;27409:3;27402:19;27439:1;27449:162;27463:6;27460:1;27457:13;27449:162;;;27525:4;27581:13;;;27577:22;;27571:29;27553:11;;;27549:20;;27542:59;27478:12;27449:162;;;27453:3;27656:1;27649:4;27640:6;27635:3;27631:16;27627:27;27620:38;27719:4;27712:2;27708:7;27703:2;27695:6;27691:15;27687:29;27682:3;27678:39;27674:50;27667:57;;;27308:422;;;;:::o;27735:478::-;27925:4;27963:3;27958;27954:13;28006:2;27998:6;27994:15;27983:9;27976:34;28058:2;28050:6;28046:15;28041:2;28030:9;28026:18;28019:43;;28098:6;28093:2;28082:9;28078:18;28071:34;28141:3;28136:2;28125:9;28121:18;28114:31;28162:45;28202:3;28191:9;28187:19;28179:6;28162:45;:::i;:::-;28154:53;27735:478;-1:-1:-1;;;;;;27735:478:40:o;29297:148::-;29385:4;29364:12;;;29378;;;29360:31;;29403:13;;29400:39;;;29419:18;;:::i;29853:693::-;30160:3;30149:9;30142:22;30123:4;30187:45;30227:3;30216:9;30212:19;30204:6;30187:45;:::i;:::-;30263:2;30248:18;;30241:34;;;30306:2;30291:18;;30284:34;;;-1:-1:-1;;;;;30354:32:40;;30349:2;30334:18;;30327:60;30424:22;;;30418:3;30403:19;;30396:51;30464:32;30428:6;30481;30464:32;:::i;:::-;30456:40;;;30533:6;30527:3;30516:9;30512:19;30505:35;29853:693;;;;;;;;;:::o;30551:461::-;30604:3;30642:5;30636:12;30669:6;30664:3;30657:19;30695:4;30724:2;30719:3;30715:12;30708:19;;30761:2;30754:5;30750:14;30782:1;30792:195;30806:6;30803:1;30800:13;30792:195;;;30871:13;;-1:-1:-1;;;;;30867:39:40;30855:52;;30927:12;;;;30962:15;;;;30903:1;30821:9;30792:195;;;-1:-1:-1;31003:3:40;;30551:461;-1:-1:-1;;;;;30551:461:40:o;31017:435::-;31070:3;31108:5;31102:12;31135:6;31130:3;31123:19;31161:4;31190:2;31185:3;31181:12;31174:19;;31227:2;31220:5;31216:14;31248:1;31258:169;31272:6;31269:1;31266:13;31258:169;;;31333:13;;31321:26;;31367:12;;;;31402:15;;;;31294:1;31287:9;31258:169;;31457:1123;31883:4;31912:3;31942:2;31931:9;31924:21;31968:44;32008:2;31997:9;31993:18;31985:6;31968:44;:::i;:::-;31954:58;;32048:6;32043:2;32032:9;32028:18;32021:34;32103:9;32095:6;32091:22;32086:2;32075:9;32071:18;32064:50;32137:44;32174:6;32166;32137:44;:::i;:::-;32123:58;;32229:9;32221:6;32217:22;32212:2;32201:9;32197:18;32190:50;32263:44;32300:6;32292;32263:44;:::i;:::-;32338:3;32323:19;;32316:35;;;-1:-1:-1;;;;;32388:32:40;;32408:3;32367:19;;32360:61;32458:22;;;32452:3;32437:19;;32430:51;32249:58;-1:-1:-1;32498:32:40;32249:58;32515:6;32498:32;:::i;:::-;32490:40;;;32567:6;32561:3;32550:9;32546:19;32539:35;31457:1123;;;;;;;;;;;:::o;33685:1297::-;-1:-1:-1;;;;;34264:15:40;;;34246:34;;34196:3;34311:2;34296:18;;34289:30;;;34167:4;;34342:44;34367:18;;;34359:6;34342:44;:::i;:::-;34328:58;;34422:6;34417:2;34406:9;34402:18;34395:34;34477:9;34469:6;34465:22;34460:2;34449:9;34445:18;34438:50;34511:32;34536:6;34528;34511:32;:::i;:::-;34497:46;;34592:9;34584:6;34580:22;34574:3;34563:9;34559:19;34552:51;34626:44;34663:6;34655;34626:44;:::i;:::-;34612:58;;34719:9;34711:6;34707:22;34701:3;34690:9;34686:19;34679:51;34747:44;34784:6;34776;34747:44;:::i;:::-;34822:3;34807:19;;34800:35;;;;34872:15;;;;34866:3;34851:19;;34844:44;-1:-1:-1;34919:3:40;34904:19;;34897:35;;;;34963:3;34948:19;;;34941:35;-1:-1:-1;34739:52:40;33685:1297;-1:-1:-1;;;;;;33685:1297:40:o;35885:168::-;35958:9;;;35989;;36006:15;;;36000:22;;35986:37;35976:71;;36027:18;;:::i;36058:217::-;36098:1;36124;36114:132;;36168:10;36163:3;36159:20;36156:1;36149:31;36203:4;36200:1;36193:15;36231:4;36228:1;36221:15;36114:132;-1:-1:-1;36260:9:40;;36058:217::o;37243:245::-;37310:6;37363:2;37351:9;37342:7;37338:23;37334:32;37331:52;;;37379:1;37376;37369:12;37331:52;37411:9;37405:16;37430:28;37452:5;37430:28;:::i;37754:135::-;37793:3;37814:17;;;37811:43;;37834:18;;:::i;:::-;-1:-1:-1;37881:1:40;37870:13;;37754:135::o;37894:601::-;-1:-1:-1;;;;;38231:15:40;;;38213:34;;38283:15;;;;38278:2;38263:18;;38256:43;38330:2;38315:18;;38308:34;;;;38373:2;38358:18;;38351:34;38416:3;38401:19;;38394:35;38473:14;;38466:22;38193:3;38445:19;;38438:51;38162:3;38147:19;;37894:601::o",
  "sourcePath": "/home/snowman/Documents/2023/GoldDustV2/v2-contracts/contracts/marketplace/MintGoldDustSetPrice.sol",
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96"
  },
  "ast": {
    "absolutePath": "/home/snowman/Documents/2023/GoldDustV2/v2-contracts/contracts/marketplace/MintGoldDustSetPrice.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [8264],
      "ContextUpgradeable": [8306],
      "Counters": [9933],
      "ECDSA": [10528],
      "ERC1155URIStorageUpgradeable": [6630],
      "ERC1155Upgradeable": [6353],
      "ERC165Upgradeable": [8579],
      "ERC721URIStorageUpgradeable": [7907],
      "ERC721Upgradeable": [7597],
      "IERC1155": [9684],
      "IERC1155MetadataURIUpgradeable": [6645],
      "IERC1155Receiver": [9725],
      "IERC1155ReceiverUpgradeable": [6394],
      "IERC1155Upgradeable": [6516],
      "IERC165": [10540],
      "IERC165Upgradeable": [8591],
      "IERC4906Upgradeable": [4725],
      "IERC721": [9841],
      "IERC721MetadataUpgradeable": [7934],
      "IERC721Receiver": [9859],
      "IERC721ReceiverUpgradeable": [7615],
      "IERC721Upgradeable": [7731],
      "Initializable": [4897],
      "ListPriceMustBeGreaterThanZero": [3709],
      "Math": [11406],
      "MathUpgradeable": [9457],
      "MintGoldDustCompany": [228],
      "MintGoldDustERC1155": [526],
      "MintGoldDustERC721": [759],
      "MintGoldDustMarketplace": [2948],
      "MintGoldDustNFT": [3699],
      "MintGoldDustSetPrice": [4568],
      "NumberOfCollaboratorsAndPercentagesNotMatch": [2964],
      "OwnableUpgradeable": [4700],
      "PausableUpgradeable": [5024],
      "ReentrancyGuardUpgradeable": [5108],
      "RoyaltyInvalidPercentage": [2958],
      "SignedMath": [11511],
      "SignedMathUpgradeable": [9562],
      "Strings": [10162],
      "StringsUpgradeable": [8535],
      "TheTotalPercentageCantBeGreaterOrLessThan100": [2966],
      "UnauthorizedOnNFT": [2962]
    },
    "id": 4569,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3701,
        "literals": ["solidity", "0.8", ".18"],
        "nodeType": "PragmaDirective",
        "src": "39:23:5"
      },
      {
        "absolutePath": "/home/snowman/Documents/2023/GoldDustV2/v2-contracts/contracts/marketplace/MintGoldDustMarketplace.sol",
        "file": "./MintGoldDustMarketplace.sol",
        "id": 3702,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4569,
        "sourceUnit": 2949,
        "src": "64:39:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 3703,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4569,
        "sourceUnit": 9842,
        "src": "104:124:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "file": "/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "id": 3704,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4569,
        "sourceUnit": 9685,
        "src": "229:126:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
        "file": "/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
        "id": 3705,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4569,
        "sourceUnit": 9726,
        "src": "356:134:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "file": "/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "id": 3706,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4569,
        "sourceUnit": 10529,
        "src": "491:128:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "file": "/home/snowman/Documents/2023/GoldDustV2/v2-contracts/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "id": 3707,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4569,
        "sourceUnit": 10541,
        "src": "620:131:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "errorSelector": "5b4fd3b3",
        "id": 3709,
        "name": "ListPriceMustBeGreaterThanZero",
        "nameLocation": "759:30:5",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 3708,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "789:2:5"
        },
        "src": "753:39:5"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3710,
              "name": "MintGoldDustMarketplace",
              "nameLocations": ["827:23:5"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2948,
              "src": "827:23:5"
            },
            "id": 3711,
            "nodeType": "InheritanceSpecifier",
            "src": "827:23:5"
          }
        ],
        "canonicalName": "MintGoldDustSetPrice",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4568,
        "linearizedBaseContracts": [
          4568, 2948, 5108, 9859, 9725, 10540, 5024, 8306, 4897
        ],
        "name": "MintGoldDustSetPrice",
        "nameLocation": "803:20:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 3714,
            "libraryName": {
              "id": 3712,
              "name": "ECDSA",
              "nameLocations": ["861:5:5"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10528,
              "src": "861:5:5"
            },
            "nodeType": "UsingForDirective",
            "src": "855:24:5",
            "typeName": {
              "id": 3713,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "871:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "canonicalName": "MintGoldDustSetPrice.DelistDTO",
            "id": 3721,
            "members": [
              {
                "constant": false,
                "id": 3716,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "914:7:5",
                "nodeType": "VariableDeclaration",
                "scope": 3721,
                "src": "906:15:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3715,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "906:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3718,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "935:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 3721,
                "src": "927:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3717,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "927:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3720,
                "mutability": "mutable",
                "name": "contractAddress",
                "nameLocation": "955:15:5",
                "nodeType": "VariableDeclaration",
                "scope": 3721,
                "src": "947:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3719,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "947:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DelistDTO",
            "nameLocation": "890:9:5",
            "nodeType": "StructDefinition",
            "scope": 4568,
            "src": "883:92:5",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3722,
              "nodeType": "StructuredDocumentation",
              "src": "979:617:5",
              "text": " @notice that this event show the info about a new listing to the set price market.\n @dev this event will be triggered when a MintGoldDustNFT is listed for the set price marketplace.\n @param tokenId the sequence number for the item.\n @param seller the seller of this tokenId.\n @param price the price for this item sale.\n    @dev it cannot be zero.\n @param amount the quantity of tokens to be listed for an MintGoldDustERC1155.\n    @dev For MintGoldDustERC721 the amout must be always one.\n @param contractAddress the MintGoldDustERC1155 or the MintGoldDustERC721 address."
            },
            "eventSelector": "8e525ab69736fcdb30f1e5d5e2630d9f20060b861b8be385f2f37ef0cbe9a0d5",
            "id": 3734,
            "name": "MintGoldDustNftListedToSetPrice",
            "nameLocation": "1605:31:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3724,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1658:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3734,
                  "src": "1642:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3723,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3726,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "1679:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3734,
                  "src": "1671:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3725,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1671:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3728,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1699:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3734,
                  "src": "1691:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3727,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1691:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3730,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1718:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3734,
                  "src": "1710:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3732,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "1738:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3734,
                  "src": "1730:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1730:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1636:121:5"
            },
            "src": "1599:159:5"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3735,
              "nodeType": "StructuredDocumentation",
              "src": "1762:447:5",
              "text": " @notice that this event show the info when a market item has its price updated.\n @dev this event will be triggered when a market item has its price updated.\n @param tokenId the sequence number for the item.\n @param seller the seller of this tokenId.\n @param price the new price for this item sale.\n    @dev it cannot be zero.\n @param contractAddress the MintGoldDustERC1155 or the MintGoldDustERC721 address."
            },
            "eventSelector": "fd465b0ad7019b61e2251da8fb7210e81a99644805c9f5f0a4b6577ce339d26d",
            "id": 3745,
            "name": "MintGoldDustNftListedItemUpdated",
            "nameLocation": "2218:32:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3737,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2272:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3745,
                  "src": "2256:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2256:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3739,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2293:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3745,
                  "src": "2285:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2285:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3741,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2313:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3745,
                  "src": "2305:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2305:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3743,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "2332:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3745,
                  "src": "2324:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2324:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2250:101:5"
            },
            "src": "2212:140:5"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3746,
              "nodeType": "StructuredDocumentation",
              "src": "2356:351:5",
              "text": " @notice that this event show the info about a delisting.\n @dev this event will be triggered when a market item is delisted from the marketplace.\n @param tokenId the sequence number for the item.\n @param seller the seller of this tokenId.\n @param contractAddress the MintGoldDustERC1155 or the MintGoldDustERC721 address."
            },
            "eventSelector": "ebe8b448e5424c1bb0d7e6346bca16c31cab0d8c19810c92a15cf2da28d88d51",
            "id": 3754,
            "name": "NftQuantityDelisted",
            "nameLocation": "2716:19:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3748,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2757:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3754,
                  "src": "2741:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3747,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2741:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3750,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "seller",
                  "nameLocation": "2778:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3754,
                  "src": "2770:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2770:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3752,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "2798:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3754,
                  "src": "2790:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3751,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2790:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2735:82:5"
            },
            "src": "2710:108:5"
          },
          {
            "constant": false,
            "functionSelector": "56e3319d",
            "id": 3758,
            "mutability": "mutable",
            "name": "collectorMintIdUsed",
            "nameLocation": "2854:19:5",
            "nodeType": "VariableDeclaration",
            "scope": 4568,
            "src": "2822:51:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 3757,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3755,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2830:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2822:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3756,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2841:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3778,
              "nodeType": "Block",
              "src": "3392:148:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3773,
                        "name": "_mintGoldDustCompany",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3761,
                        "src": "3440:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3774,
                        "name": "_mintGoldDustERC721Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3763,
                        "src": "3468:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3775,
                        "name": "_mintGoldDustERC1155Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3765,
                        "src": "3502:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 3770,
                        "name": "MintGoldDustMarketplace",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2948,
                        "src": "3398:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MintGoldDustMarketplace_$2948_$",
                          "typeString": "type(contract MintGoldDustMarketplace)"
                        }
                      },
                      "id": 3772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3422:10:5",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1051,
                      "src": "3398:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_payable_$_t_address_payable_$returns$__$",
                        "typeString": "function (address,address payable,address payable)"
                      }
                    },
                    "id": 3776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3398:137:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3777,
                  "nodeType": "ExpressionStatement",
                  "src": "3398:137:5"
                }
              ]
            },
            "documentation": {
              "id": 3759,
              "nodeType": "StructuredDocumentation",
              "src": "2878:330:5",
              "text": " @notice MGDAuction is a children of MintGoldDustMarketplace and this one is\n composed by other two contracts.\n @param _mintGoldDustCompany The contract responsible to MGD management features.\n @param _mintGoldDustERC721Address The MGD ERC721.\n @param _mintGoldDustERC1155Address The MGD ERC721."
            },
            "functionSelector": "ef3790db",
            "id": 3779,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3768,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3767,
                  "name": "initializer",
                  "nameLocations": ["3380:11:5"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4799,
                  "src": "3380:11:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "3380:11:5"
              }
            ],
            "name": "initializeChild",
            "nameLocation": "3220:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3761,
                  "mutability": "mutable",
                  "name": "_mintGoldDustCompany",
                  "nameLocation": "3249:20:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3779,
                  "src": "3241:28:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3241:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3763,
                  "mutability": "mutable",
                  "name": "_mintGoldDustERC721Address",
                  "nameLocation": "3291:26:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3779,
                  "src": "3275:42:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3275:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3765,
                  "mutability": "mutable",
                  "name": "_mintGoldDustERC1155Address",
                  "nameLocation": "3339:27:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3779,
                  "src": "3323:43:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3323:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3235:135:5"
            },
            "returnParameters": {
              "id": 3769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3392:0:5"
            },
            "scope": 4568,
            "src": "3211:329:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [10539],
            "body": {
              "id": 3793,
              "nodeType": "Block",
              "src": "3620:58:5",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 3791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3786,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "3633:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 3788,
                            "name": "IERC165",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10540,
                            "src": "3653:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$10540_$",
                              "typeString": "type(contract IERC165)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$10540_$",
                              "typeString": "type(contract IERC165)"
                            }
                          ],
                          "id": 3787,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "3648:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 3789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3648:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$10540",
                          "typeString": "type(contract IERC165)"
                        }
                      },
                      "id": 3790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3662:11:5",
                      "memberName": "interfaceId",
                      "nodeType": "MemberAccess",
                      "src": "3648:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "3633:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3785,
                  "id": 3792,
                  "nodeType": "Return",
                  "src": "3626:47:5"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 3794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3553:17:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3781,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3578:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3794,
                  "src": "3571:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3780,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3571:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3570:20:5"
            },
            "returnParameters": {
              "id": 3785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3784,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3794,
                  "src": "3614:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3783,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3614:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3613:6:5"
            },
            "scope": 4568,
            "src": "3544:134:5",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [1284],
            "body": {
              "id": 3859,
              "nodeType": "Block",
              "src": "4785:533:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3810,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3801,
                        "src": "4822:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3809,
                      "name": "mustBeMintGoldDustERC721Or1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1771,
                      "src": "4791:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 3811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4791:48:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3812,
                  "nodeType": "ExpressionStatement",
                  "src": "4791:48:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3814,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3797,
                        "src": "4858:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3815,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3801,
                        "src": "4868:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3816,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4886:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4890:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4886:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3813,
                      "name": "isNotListed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1978,
                      "src": "4846:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address) view"
                      }
                    },
                    "id": 3818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4846:51:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3819,
                  "nodeType": "ExpressionStatement",
                  "src": "4846:51:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3820,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3803,
                      "src": "4908:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4918:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4908:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3827,
                  "nodeType": "IfStatement",
                  "src": "4904:71:5",
                  "trueBody": {
                    "id": 3826,
                    "nodeType": "Block",
                    "src": "4921:54:5",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3823,
                            "name": "ListPriceMustBeGreaterThanZero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3709,
                            "src": "4936:30:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4936:32:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3825,
                        "nodeType": "RevertStatement",
                        "src": "4929:39:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [3830],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3830,
                      "mutability": "mutable",
                      "name": "_listDTO",
                      "nameLocation": "4996:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 3859,
                      "src": "4981:23:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ListDTO_$839_memory_ptr",
                        "typeString": "struct MintGoldDustMarketplace.ListDTO"
                      },
                      "typeName": {
                        "id": 3829,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3828,
                          "name": "ListDTO",
                          "nameLocations": ["4981:7:5"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 839,
                          "src": "4981:7:5"
                        },
                        "referencedDeclaration": 839,
                        "src": "4981:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ListDTO_$839_storage_ptr",
                          "typeString": "struct MintGoldDustMarketplace.ListDTO"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3837,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3832,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3797,
                        "src": "5022:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3833,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3799,
                        "src": "5038:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3834,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3801,
                        "src": "5053:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3835,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3803,
                        "src": "5077:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3831,
                      "name": "ListDTO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 839,
                      "src": "5007:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ListDTO_$839_storage_ptr_$",
                        "typeString": "type(struct MintGoldDustMarketplace.ListDTO storage pointer)"
                      }
                    },
                    "id": 3836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5007:82:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ListDTO_$839_memory_ptr",
                      "typeString": "struct MintGoldDustMarketplace.ListDTO memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4981:108:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3839,
                        "name": "_listDTO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3830,
                        "src": "5101:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ListDTO_$839_memory_ptr",
                          "typeString": "struct MintGoldDustMarketplace.ListDTO memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 3840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5111:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "id": 3841,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5114:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5118:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5114:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ListDTO_$839_memory_ptr",
                          "typeString": "struct MintGoldDustMarketplace.ListDTO memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3838,
                      "name": "list",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1518,
                      "src": "5096:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ListDTO_$839_memory_ptr_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (struct MintGoldDustMarketplace.ListDTO memory,uint256,address)"
                      }
                    },
                    "id": 3843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5096:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3844,
                  "nodeType": "ExpressionStatement",
                  "src": "5096:29:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3846,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3797,
                        "src": "5176:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3847,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5192:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5196:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5192:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3849,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3803,
                        "src": "5210:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3850,
                            "name": "_contractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3801,
                            "src": "5224:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3851,
                            "name": "mintGoldDustERC721Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 873,
                            "src": "5244:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "5224:45:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 3854,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3799,
                          "src": "5276:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "5224:59:5",
                        "trueExpression": {
                          "hexValue": "31",
                          "id": 3853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5272:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3856,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3801,
                        "src": "5291:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3845,
                      "name": "MintGoldDustNftListedToSetPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3734,
                      "src": "5137:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,uint256,uint256,address)"
                      }
                    },
                    "id": 3857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5137:176:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3858,
                  "nodeType": "EmitStatement",
                  "src": "5132:181:5"
                }
              ]
            },
            "documentation": {
              "id": 3795,
              "nodeType": "StructuredDocumentation",
              "src": "3682:957:5",
              "text": " @notice that is function to list a MintGoldDustNFT for the marketplace set price market.\n @dev This is an implementation of a virtual function declared in the father\n      contract. Here we're listing an NFT to the MintGoldDustSetPrice market that the item has\n      a fixed price. After that the user can update the price of this item or if necessary\n      delist it. After delist is possible to list again here of for auction or another set price.\n    @notice that here we call the more generic list function passing the correct params for the set price market.\n @param _tokenId: The tokenId of the marketItem.\n @param _amount: The quantity of tokens to be listed for an MintGoldDustERC1155.\n    @dev For MintGoldDustERC721 the amout must be always one.\n @param _contractAddress: The MintGoldDustERC1155 or the MintGoldDustERC721 address.\n @param _price: The price or reserve price for the item."
            },
            "functionSelector": "1502b23b",
            "id": 3860,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3807,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3806,
                  "name": "whenNotPaused",
                  "nameLocations": ["4771:13:5"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4946,
                  "src": "4771:13:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "4771:13:5"
              }
            ],
            "name": "list",
            "nameLocation": "4651:4:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3805,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4762:8:5"
            },
            "parameters": {
              "id": 3804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3797,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4669:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3860,
                  "src": "4661:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4661:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3799,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4691:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3860,
                  "src": "4683:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4683:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3801,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "4712:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3860,
                  "src": "4704:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4704:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3803,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "4742:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3860,
                  "src": "4734:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4734:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4655:97:5"
            },
            "returnParameters": {
              "id": 3808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4785:0:5"
            },
            "scope": 4568,
            "src": "4642:676:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3915,
              "nodeType": "Block",
              "src": "5917:463:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3873,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3867,
                        "src": "5954:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3872,
                      "name": "mustBeMintGoldDustERC721Or1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1771,
                      "src": "5923:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 3874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5923:48:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3875,
                  "nodeType": "ExpressionStatement",
                  "src": "5923:48:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3877,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3863,
                        "src": "5993:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3878,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3867,
                        "src": "6003:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3879,
                        "name": "_seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3869,
                        "src": "6021:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3876,
                      "name": "isTokenIdListed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1875,
                      "src": "5977:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address) view"
                      }
                    },
                    "id": 3880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5977:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3881,
                  "nodeType": "ExpressionStatement",
                  "src": "5977:52:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3883,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3863,
                        "src": "6044:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3884,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3867,
                        "src": "6054:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3885,
                        "name": "_seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3869,
                        "src": "6072:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3882,
                      "name": "isSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1952,
                      "src": "6035:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address) view"
                      }
                    },
                    "id": 3886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6035:45:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3887,
                  "nodeType": "ExpressionStatement",
                  "src": "6035:45:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3888,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3865,
                      "src": "6091:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6101:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6091:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3895,
                  "nodeType": "IfStatement",
                  "src": "6087:71:5",
                  "trueBody": {
                    "id": 3894,
                    "nodeType": "Block",
                    "src": "6104:54:5",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3891,
                            "name": "ListPriceMustBeGreaterThanZero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3709,
                            "src": "6119:30:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 3892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6119:32:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3893,
                        "nodeType": "RevertStatement",
                        "src": "6112:39:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 3896,
                              "name": "idMarketItemsByContractByOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 889,
                              "src": "6164:30:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_MarketItem_$808_storage_$_$_$",
                                "typeString": "mapping(address => mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem storage ref)))"
                              }
                            },
                            "id": 3900,
                            "indexExpression": {
                              "id": 3897,
                              "name": "_contractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3867,
                              "src": "6195:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6164:48:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_MarketItem_$808_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem storage ref))"
                            }
                          },
                          "id": 3901,
                          "indexExpression": {
                            "id": 3898,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3863,
                            "src": "6213:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6164:58:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MarketItem_$808_storage_$",
                            "typeString": "mapping(address => struct MintGoldDustMarketplace.MarketItem storage ref)"
                          }
                        },
                        "id": 3902,
                        "indexExpression": {
                          "id": 3899,
                          "name": "_seller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3869,
                          "src": "6223:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6164:67:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketItem_$808_storage",
                          "typeString": "struct MintGoldDustMarketplace.MarketItem storage ref"
                        }
                      },
                      "id": 3903,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6239:5:5",
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 800,
                      "src": "6164:80:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3904,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3865,
                      "src": "6247:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6164:89:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3906,
                  "nodeType": "ExpressionStatement",
                  "src": "6164:89:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3908,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3863,
                        "src": "6305:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3909,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6321:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6325:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6321:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3911,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3865,
                        "src": "6339:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3912,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3867,
                        "src": "6353:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3907,
                      "name": "MintGoldDustNftListedItemUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3745,
                      "src": "6265:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,uint256,address)"
                      }
                    },
                    "id": 3913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6265:110:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3914,
                  "nodeType": "EmitStatement",
                  "src": "6260:115:5"
                }
              ]
            },
            "documentation": {
              "id": 3861,
              "nodeType": "StructuredDocumentation",
              "src": "5322:461:5",
              "text": " Updates an already listed NFT\n @notice Only seller can call this function and this item must be\n listed.\n @dev The intention here is allow a user update the price of a\n Market Item struct.\n @param _tokenId The token ID of the the token to update.\n @param _price The price of the NFT.\n @param _contractAddress: The MintGoldDustERC1155 or the MintGoldDustERC721 address.\n @param _seller The seller of the marketItem."
            },
            "functionSelector": "d55755c5",
            "id": 3916,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateListedNft",
            "nameLocation": "5795:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3863,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5824:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3916,
                  "src": "5816:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5816:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3865,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "5846:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3916,
                  "src": "5838:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5838:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3867,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "5866:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3916,
                  "src": "5858:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5858:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3869,
                  "mutability": "mutable",
                  "name": "_seller",
                  "nameLocation": "5896:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3916,
                  "src": "5888:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5888:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5810:97:5"
            },
            "returnParameters": {
              "id": 3871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5917:0:5"
            },
            "scope": 4568,
            "src": "5786:594:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4051,
              "nodeType": "Block",
              "src": "7207:1237:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3926,
                          "name": "_delistDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3920,
                          "src": "7244:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DelistDTO_$3721_memory_ptr",
                            "typeString": "struct MintGoldDustSetPrice.DelistDTO memory"
                          }
                        },
                        "id": 3927,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7255:15:5",
                        "memberName": "contractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3720,
                        "src": "7244:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3925,
                      "name": "mustBeMintGoldDustERC721Or1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1771,
                      "src": "7213:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 3928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7213:58:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3929,
                  "nodeType": "ExpressionStatement",
                  "src": "7213:58:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3931,
                          "name": "_delistDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3920,
                          "src": "7293:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DelistDTO_$3721_memory_ptr",
                            "typeString": "struct MintGoldDustSetPrice.DelistDTO memory"
                          }
                        },
                        "id": 3932,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7304:7:5",
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3716,
                        "src": "7293:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3933,
                          "name": "_delistDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3920,
                          "src": "7313:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DelistDTO_$3721_memory_ptr",
                            "typeString": "struct MintGoldDustSetPrice.DelistDTO memory"
                          }
                        },
                        "id": 3934,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7324:15:5",
                        "memberName": "contractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3720,
                        "src": "7313:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3935,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7341:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7345:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7341:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3930,
                      "name": "isTokenIdListed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1875,
                      "src": "7277:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address) view"
                      }
                    },
                    "id": 3937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7277:75:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3938,
                  "nodeType": "ExpressionStatement",
                  "src": "7277:75:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3940,
                          "name": "_delistDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3920,
                          "src": "7367:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DelistDTO_$3721_memory_ptr",
                            "typeString": "struct MintGoldDustSetPrice.DelistDTO memory"
                          }
                        },
                        "id": 3941,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7378:7:5",
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3716,
                        "src": "7367:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 3942,
                          "name": "_delistDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3920,
                          "src": "7387:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DelistDTO_$3721_memory_ptr",
                            "typeString": "struct MintGoldDustSetPrice.DelistDTO memory"
                          }
                        },
                        "id": 3943,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7398:15:5",
                        "memberName": "contractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3720,
                        "src": "7387:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3944,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7415:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7419:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7415:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3939,
                      "name": "isSeller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1952,
                      "src": "7358:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address) view"
                      }
                    },
                    "id": 3946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7358:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3947,
                  "nodeType": "ExpressionStatement",
                  "src": "7358:68:5"
                },
                {
                  "assignments": [3949],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3949,
                      "mutability": "mutable",
                      "name": "realAmount",
                      "nameLocation": "7438:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4051,
                      "src": "7433:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3948,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7433:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3951,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 3950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7451:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7433:19:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3952,
                        "name": "_delistDTO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3920,
                        "src": "7463:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DelistDTO_$3721_memory_ptr",
                          "typeString": "struct MintGoldDustSetPrice.DelistDTO memory"
                        }
                      },
                      "id": 3953,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7474:15:5",
                      "memberName": "contractAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3720,
                      "src": "7463:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 3954,
                      "name": "mintGoldDustERC1155Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 875,
                      "src": "7493:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "7463:56:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3977,
                  "nodeType": "IfStatement",
                  "src": "7459:278:5",
                  "trueBody": {
                    "id": 3976,
                    "nodeType": "Block",
                    "src": "7521:216:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 3959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3956,
                            "name": "realAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3949,
                            "src": "7529:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3957,
                              "name": "_delistDTO",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3920,
                              "src": "7542:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DelistDTO_$3721_memory_ptr",
                                "typeString": "struct MintGoldDustSetPrice.DelistDTO memory"
                              }
                            },
                            "id": 3958,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7553:6:5",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3718,
                            "src": "7542:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7529:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3960,
                        "nodeType": "ExpressionStatement",
                        "src": "7529:30:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3962,
                                "name": "_delistDTO",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3920,
                                "src": "7598:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DelistDTO_$3721_memory_ptr",
                                  "typeString": "struct MintGoldDustSetPrice.DelistDTO memory"
                                }
                              },
                              "id": 3963,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7609:7:5",
                              "memberName": "tokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3716,
                              "src": "7598:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3964,
                                "name": "_delistDTO",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3920,
                                "src": "7626:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DelistDTO_$3721_memory_ptr",
                                  "typeString": "struct MintGoldDustSetPrice.DelistDTO memory"
                                }
                              },
                              "id": 3965,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7637:15:5",
                              "memberName": "contractAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3720,
                              "src": "7626:26:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3968,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "7670:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MintGoldDustSetPrice_$4568",
                                    "typeString": "contract MintGoldDustSetPrice"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MintGoldDustSetPrice_$4568",
                                    "typeString": "contract MintGoldDustSetPrice"
                                  }
                                ],
                                "id": 3967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7662:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3966,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7662:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7662:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3970,
                                "name": "_delistDTO",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3920,
                                "src": "7685:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DelistDTO_$3721_memory_ptr",
                                  "typeString": "struct MintGoldDustSetPrice.DelistDTO memory"
                                }
                              },
                              "id": 3971,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7696:6:5",
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3718,
                              "src": "7685:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3972,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "7712:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7716:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7712:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3961,
                            "name": "hasEnoughAmountListed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1924,
                            "src": "7567:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address,address,uint256,address) view"
                            }
                          },
                          "id": 3974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7567:163:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3975,
                        "nodeType": "ExpressionStatement",
                        "src": "7567:163:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [3980],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3980,
                      "mutability": "mutable",
                      "name": "_marketItem",
                      "nameLocation": "7761:11:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4051,
                      "src": "7743:29:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MarketItem_$808_memory_ptr",
                        "typeString": "struct MintGoldDustMarketplace.MarketItem"
                      },
                      "typeName": {
                        "id": 3979,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3978,
                          "name": "MarketItem",
                          "nameLocations": ["7743:10:5"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 808,
                          "src": "7743:10:5"
                        },
                        "referencedDeclaration": 808,
                        "src": "7743:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketItem_$808_storage_ptr",
                          "typeString": "struct MintGoldDustMarketplace.MarketItem"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3991,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 3981,
                          "name": "idMarketItemsByContractByOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 889,
                          "src": "7775:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_MarketItem_$808_storage_$_$_$",
                            "typeString": "mapping(address => mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem storage ref)))"
                          }
                        },
                        "id": 3984,
                        "indexExpression": {
                          "expression": {
                            "id": 3982,
                            "name": "_delistDTO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3920,
                            "src": "7813:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DelistDTO_$3721_memory_ptr",
                              "typeString": "struct MintGoldDustSetPrice.DelistDTO memory"
                            }
                          },
                          "id": 3983,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7824:15:5",
                          "memberName": "contractAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3720,
                          "src": "7813:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7775:70:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_MarketItem_$808_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem storage ref))"
                        }
                      },
                      "id": 3987,
                      "indexExpression": {
                        "expression": {
                          "id": 3985,
                          "name": "_delistDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3920,
                          "src": "7846:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DelistDTO_$3721_memory_ptr",
                            "typeString": "struct MintGoldDustSetPrice.DelistDTO memory"
                          }
                        },
                        "id": 3986,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7857:7:5",
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3716,
                        "src": "7846:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7775:90:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MarketItem_$808_storage_$",
                        "typeString": "mapping(address => struct MintGoldDustMarketplace.MarketItem storage ref)"
                      }
                    },
                    "id": 3990,
                    "indexExpression": {
                      "expression": {
                        "id": 3988,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7866:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7870:6:5",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7866:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7775:102:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MarketItem_$808_storage",
                      "typeString": "struct MintGoldDustMarketplace.MarketItem storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7743:134:5"
                },
                {
                  "expression": {
                    "id": 3999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 3992,
                        "name": "_marketItem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3980,
                        "src": "7884:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketItem_$808_memory_ptr",
                          "typeString": "struct MintGoldDustMarketplace.MarketItem memory"
                        }
                      },
                      "id": 3994,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7896:11:5",
                      "memberName": "tokenAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 804,
                      "src": "7884:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 3998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 3995,
                          "name": "_marketItem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3980,
                          "src": "7910:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MarketItem_$808_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.MarketItem memory"
                          }
                        },
                        "id": 3996,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7922:11:5",
                        "memberName": "tokenAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 804,
                        "src": "7910:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 3997,
                        "name": "realAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3949,
                        "src": "7936:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7910:36:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7884:62:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4000,
                  "nodeType": "ExpressionStatement",
                  "src": "7884:62:5"
                },
                {
                  "assignments": [4003],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4003,
                      "mutability": "mutable",
                      "name": "_mintGoldDustNFT",
                      "nameLocation": "7969:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4051,
                      "src": "7953:32:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                        "typeString": "contract MintGoldDustNFT"
                      },
                      "typeName": {
                        "id": 4002,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4001,
                          "name": "MintGoldDustNFT",
                          "nameLocations": ["7953:15:5"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3699,
                          "src": "7953:15:5"
                        },
                        "referencedDeclaration": 3699,
                        "src": "7953:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                          "typeString": "contract MintGoldDustNFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4008,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4005,
                          "name": "_marketItem",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3980,
                          "src": "8007:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MarketItem_$808_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.MarketItem memory"
                          }
                        },
                        "id": 4006,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8019:8:5",
                        "memberName": "isERC721",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 802,
                        "src": "8007:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4004,
                      "name": "getERC1155OrERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1540,
                      "src": "7988:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bool_$returns$_t_contract$_MintGoldDustNFT_$3699_$",
                        "typeString": "function (bool) view returns (contract MintGoldDustNFT)"
                      }
                    },
                    "id": 4007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7988:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                      "typeString": "contract MintGoldDustNFT"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7953:75:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4014,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "8076:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MintGoldDustSetPrice_$4568",
                              "typeString": "contract MintGoldDustSetPrice"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MintGoldDustSetPrice_$4568",
                              "typeString": "contract MintGoldDustSetPrice"
                            }
                          ],
                          "id": 4013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8068:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4012,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8068:7:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8068:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4016,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8089:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8093:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8089:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4018,
                          "name": "_delistDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3920,
                          "src": "8107:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DelistDTO_$3721_memory_ptr",
                            "typeString": "struct MintGoldDustSetPrice.DelistDTO memory"
                          }
                        },
                        "id": 4019,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8118:7:5",
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3716,
                        "src": "8107:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4020,
                          "name": "_delistDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3920,
                          "src": "8133:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DelistDTO_$3721_memory_ptr",
                            "typeString": "struct MintGoldDustSetPrice.DelistDTO memory"
                          }
                        },
                        "id": 4021,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8144:6:5",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3718,
                        "src": "8133:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4009,
                        "name": "_mintGoldDustNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4003,
                        "src": "8035:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                          "typeString": "contract MintGoldDustNFT"
                        }
                      },
                      "id": 4011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8052:8:5",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3235,
                      "src": "8035:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256) external"
                      }
                    },
                    "id": 4022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8035:121:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4023,
                  "nodeType": "ExpressionStatement",
                  "src": "8035:121:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4024,
                        "name": "_marketItem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3980,
                        "src": "8167:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MarketItem_$808_memory_ptr",
                          "typeString": "struct MintGoldDustMarketplace.MarketItem memory"
                        }
                      },
                      "id": 4025,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8179:11:5",
                      "memberName": "tokenAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 804,
                      "src": "8167:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8194:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8167:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4041,
                  "nodeType": "IfStatement",
                  "src": "8163:162:5",
                  "trueBody": {
                    "id": 4040,
                    "nodeType": "Block",
                    "src": "8197:128:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 4038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "8205:113:5",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 4028,
                                  "name": "idMarketItemsByContractByOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 889,
                                  "src": "8212:30:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_MarketItem_$808_storage_$_$_$",
                                    "typeString": "mapping(address => mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem storage ref)))"
                                  }
                                },
                                "id": 4031,
                                "indexExpression": {
                                  "expression": {
                                    "id": 4029,
                                    "name": "_delistDTO",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3920,
                                    "src": "8243:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_DelistDTO_$3721_memory_ptr",
                                      "typeString": "struct MintGoldDustSetPrice.DelistDTO memory"
                                    }
                                  },
                                  "id": 4030,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8254:15:5",
                                  "memberName": "contractAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3720,
                                  "src": "8243:26:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8212:58:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_MarketItem_$808_storage_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => struct MintGoldDustMarketplace.MarketItem storage ref))"
                                }
                              },
                              "id": 4034,
                              "indexExpression": {
                                "expression": {
                                  "id": 4032,
                                  "name": "_delistDTO",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3920,
                                  "src": "8280:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DelistDTO_$3721_memory_ptr",
                                    "typeString": "struct MintGoldDustSetPrice.DelistDTO memory"
                                  }
                                },
                                "id": 4033,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8291:7:5",
                                "memberName": "tokenId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3716,
                                "src": "8280:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8212:94:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_MarketItem_$808_storage_$",
                                "typeString": "mapping(address => struct MintGoldDustMarketplace.MarketItem storage ref)"
                              }
                            },
                            "id": 4037,
                            "indexExpression": {
                              "expression": {
                                "id": 4035,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "8307:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8311:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8307:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8212:106:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MarketItem_$808_storage",
                              "typeString": "struct MintGoldDustMarketplace.MarketItem storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4039,
                        "nodeType": "ExpressionStatement",
                        "src": "8205:113:5"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4043,
                          "name": "_delistDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3920,
                          "src": "8363:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DelistDTO_$3721_memory_ptr",
                            "typeString": "struct MintGoldDustSetPrice.DelistDTO memory"
                          }
                        },
                        "id": 4044,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8374:7:5",
                        "memberName": "tokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3716,
                        "src": "8363:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4045,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8389:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8393:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8389:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4047,
                          "name": "_delistDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3920,
                          "src": "8407:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DelistDTO_$3721_memory_ptr",
                            "typeString": "struct MintGoldDustSetPrice.DelistDTO memory"
                          }
                        },
                        "id": 4048,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8418:15:5",
                        "memberName": "contractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3720,
                        "src": "8407:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4042,
                      "name": "NftQuantityDelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3754,
                      "src": "8336:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address)"
                      }
                    },
                    "id": 4049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8336:103:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4050,
                  "nodeType": "EmitStatement",
                  "src": "8331:108:5"
                }
              ]
            },
            "documentation": {
              "id": 3917,
              "nodeType": "StructuredDocumentation",
              "src": "6384:750:5",
              "text": " Delist NFT from marketplace\n @notice Only seller can call this function\n @dev Here we transfer back the token id to the seller that is\n really the owner of the item. And set the sold attribute to true.\n This in conjunction with the fact that this contract address is not more the\n owner of the item, means that the item is not listed.\n @param _delistDTO The DelistDTO parameter to use.\n                 It consists of the following fields:\n                    - tokenid: The tokenId of the marketItem.\n                    - amount: The quantity of tokens to be delisted for an MintGoldDustERC1155.\n                    - contractAddress: The MintGoldDustERC1155 or the MintGoldDustERC721 address."
            },
            "functionSelector": "8ad284d8",
            "id": 4052,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3923,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3922,
                  "name": "nonReentrant",
                  "nameLocations": ["7194:12:5"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5068,
                  "src": "7194:12:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "7194:12:5"
              }
            ],
            "name": "delistNft",
            "nameLocation": "7146:9:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3921,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3920,
                  "mutability": "mutable",
                  "name": "_delistDTO",
                  "nameLocation": "7173:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4052,
                  "src": "7156:27:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelistDTO_$3721_memory_ptr",
                    "typeString": "struct MintGoldDustSetPrice.DelistDTO"
                  },
                  "typeName": {
                    "id": 3919,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3918,
                      "name": "DelistDTO",
                      "nameLocations": ["7156:9:5"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3721,
                      "src": "7156:9:5"
                    },
                    "referencedDeclaration": 3721,
                    "src": "7156:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelistDTO_$3721_storage_ptr",
                      "typeString": "struct MintGoldDustSetPrice.DelistDTO"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7155:29:5"
            },
            "returnParameters": {
              "id": 3924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7207:0:5"
            },
            "scope": 4568,
            "src": "7137:1307:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4214,
              "nodeType": "Block",
              "src": "10710:1675:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4072,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4056,
                          "src": "10747:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4073,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10765:15:5",
                        "memberName": "contractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 841,
                        "src": "10747:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4071,
                      "name": "mustBeMintGoldDustERC721Or1155",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1771,
                      "src": "10716:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 4074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10716:65:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4075,
                  "nodeType": "ExpressionStatement",
                  "src": "10716:65:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4077,
                            "name": "_collectorMintDTO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4056,
                            "src": "10796:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                              "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                            }
                          },
                          "id": 4078,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10814:6:5",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 855,
                          "src": "10796:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10823:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10796:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616d6f756e7420746f206d696e74",
                        "id": 4081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10826:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79696c0c226bb75057744871c9169cce8e3e13a56dc5f3b80764efe0e8605821",
                          "typeString": "literal_string \"Invalid amount to mint\""
                        },
                        "value": "Invalid amount to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79696c0c226bb75057744871c9169cce8e3e13a56dc5f3b80764efe0e8605821",
                          "typeString": "literal_string \"Invalid amount to mint\""
                        }
                      ],
                      "id": 4076,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "10788:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10788:63:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4083,
                  "nodeType": "ExpressionStatement",
                  "src": "10788:63:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4085,
                          "name": "_amountToBuy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4064,
                          "src": "10865:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10880:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10865:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616d6f756e7420746f20627579",
                        "id": 4088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10883:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f251d5f045c37dd8643b994e55815efdeffc9a95930b74de33cd59700ded32eb",
                          "typeString": "literal_string \"Invalid amount to buy\""
                        },
                        "value": "Invalid amount to buy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f251d5f045c37dd8643b994e55815efdeffc9a95930b74de33cd59700ded32eb",
                          "typeString": "literal_string \"Invalid amount to buy\""
                        }
                      ],
                      "id": 4084,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "10857:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10857:50:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4090,
                  "nodeType": "ExpressionStatement",
                  "src": "10857:50:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 4092,
                            "name": "collectorMintIdUsed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3758,
                            "src": "10929:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 4095,
                          "indexExpression": {
                            "expression": {
                              "id": 4093,
                              "name": "_collectorMintDTO",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4056,
                              "src": "10949:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                                "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                              }
                            },
                            "id": 4094,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10967:15:5",
                            "memberName": "collectorMintId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 861,
                            "src": "10949:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10929:54:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 4096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10987:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "10929:63:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6c6c6563746f72204d696e7420496420616c72656164792075736564",
                        "id": 4098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11000:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12c015ed03be9a59ffab81f7d0a5627d67a8617afce92bd4779d8f6508b925d4",
                          "typeString": "literal_string \"Coll Id used\""
                        },
                        "value": "Coll Id used"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12c015ed03be9a59ffab81f7d0a5627d67a8617afce92bd4779d8f6508b925d4",
                          "typeString": "literal_string \"Coll Id used\""
                        }
                      ],
                      "id": 4091,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "10914:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10914:124:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4100,
                  "nodeType": "ExpressionStatement",
                  "src": "10914:124:5"
                },
                {
                  "assignments": [4103],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4103,
                      "mutability": "mutable",
                      "name": "_mintGoldDustNFT",
                      "nameLocation": "11061:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4214,
                      "src": "11045:32:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                        "typeString": "contract MintGoldDustNFT"
                      },
                      "typeName": {
                        "id": 4102,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4101,
                          "name": "MintGoldDustNFT",
                          "nameLocations": ["11045:15:5"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3699,
                          "src": "11045:15:5"
                        },
                        "referencedDeclaration": 3699,
                        "src": "11045:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                          "typeString": "contract MintGoldDustNFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4104,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11045:32:5"
                },
                {
                  "assignments": [4106],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4106,
                      "mutability": "mutable",
                      "name": "realAmount",
                      "nameLocation": "11091:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4214,
                      "src": "11083:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4105,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11083:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4109,
                  "initialValue": {
                    "expression": {
                      "id": 4107,
                      "name": "_collectorMintDTO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4056,
                      "src": "11104:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                        "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                      }
                    },
                    "id": 4108,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "11122:6:5",
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 855,
                    "src": "11104:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11083:45:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4110,
                        "name": "_collectorMintDTO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4056,
                        "src": "11139:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                          "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                        }
                      },
                      "id": 4111,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11157:15:5",
                      "memberName": "contractAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 841,
                      "src": "11139:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 4112,
                      "name": "mintGoldDustERC721Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 873,
                      "src": "11176:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "11139:62:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4131,
                    "nodeType": "Block",
                    "src": "11307:77:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 4129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4125,
                            "name": "_mintGoldDustNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4103,
                            "src": "11315:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                              "typeString": "contract MintGoldDustNFT"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4127,
                                "name": "mintGoldDustERC1155Address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 875,
                                "src": "11350:26:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 4126,
                              "name": "MintGoldDustNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3699,
                              "src": "11334:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MintGoldDustNFT_$3699_$",
                                "typeString": "type(contract MintGoldDustNFT)"
                              }
                            },
                            "id": 4128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11334:43:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                              "typeString": "contract MintGoldDustNFT"
                            }
                          },
                          "src": "11315:62:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                            "typeString": "contract MintGoldDustNFT"
                          }
                        },
                        "id": 4130,
                        "nodeType": "ExpressionStatement",
                        "src": "11315:62:5"
                      }
                    ]
                  },
                  "id": 4132,
                  "nodeType": "IfStatement",
                  "src": "11135:249:5",
                  "trueBody": {
                    "id": 4124,
                    "nodeType": "Block",
                    "src": "11203:98:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 4118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4114,
                            "name": "_mintGoldDustNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4103,
                            "src": "11211:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                              "typeString": "contract MintGoldDustNFT"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4116,
                                "name": "mintGoldDustERC721Address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 873,
                                "src": "11246:25:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 4115,
                              "name": "MintGoldDustNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3699,
                              "src": "11230:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MintGoldDustNFT_$3699_$",
                                "typeString": "type(contract MintGoldDustNFT)"
                              }
                            },
                            "id": 4117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11230:42:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                              "typeString": "contract MintGoldDustNFT"
                            }
                          },
                          "src": "11211:61:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                            "typeString": "contract MintGoldDustNFT"
                          }
                        },
                        "id": 4119,
                        "nodeType": "ExpressionStatement",
                        "src": "11211:61:5"
                      },
                      {
                        "expression": {
                          "id": 4122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4120,
                            "name": "realAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4106,
                            "src": "11280:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 4121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11293:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "11280:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4123,
                        "nodeType": "ExpressionStatement",
                        "src": "11280:14:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4134,
                          "name": "_amountToBuy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4064,
                          "src": "11398:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 4135,
                          "name": "realAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4106,
                          "src": "11414:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11398:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616d6f756e7420746f20627579",
                        "id": 4137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11426:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f251d5f045c37dd8643b994e55815efdeffc9a95930b74de33cd59700ded32eb",
                          "typeString": "literal_string \"Invalid amount to buy\""
                        },
                        "value": "Invalid amount to buy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f251d5f045c37dd8643b994e55815efdeffc9a95930b74de33cd59700ded32eb",
                          "typeString": "literal_string \"Invalid amount to buy\""
                        }
                      ],
                      "id": 4133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "11390:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11390:60:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4139,
                  "nodeType": "ExpressionStatement",
                  "src": "11390:60:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4141,
                        "name": "_collectorMintDTO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4056,
                        "src": "11476:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                          "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                        }
                      },
                      {
                        "id": 4142,
                        "name": "_eip712HashOffChain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4058,
                        "src": "11495:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                          "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 4140,
                      "name": "generateEIP712Hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4476,
                      "src": "11457:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_CollectorMintDTO_$862_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (struct MintGoldDustMarketplace.CollectorMintDTO memory,bytes32) view"
                      }
                    },
                    "id": 4143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11457:58:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4144,
                  "nodeType": "ExpressionStatement",
                  "src": "11457:58:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 4147,
                                "name": "mintGoldDustCompany",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 871,
                                "src": "11562:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MintGoldDustCompany_$228",
                                  "typeString": "contract MintGoldDustCompany"
                                }
                              },
                              "id": 4148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11582:9:5",
                              "memberName": "publicKey",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26,
                              "src": "11562:29:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 4149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11562:31:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4150,
                            "name": "_eip712HashOffChain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4058,
                            "src": "11603:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 4151,
                            "name": "_mintGoldDustSignature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4062,
                            "src": "11632:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 4146,
                          "name": "verifySignature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4423,
                          "src": "11537:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,bytes32,bytes memory) pure returns (bool)"
                          }
                        },
                        "id": 4152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11537:125:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207369676e6174757265",
                        "id": 4153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11670:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
                          "typeString": "literal_string \"Invalid signature\""
                        },
                        "value": "Invalid signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
                          "typeString": "literal_string \"Invalid signature\""
                        }
                      ],
                      "id": 4145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "11522:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11522:173:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4155,
                  "nodeType": "ExpressionStatement",
                  "src": "11522:173:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 4158,
                              "name": "_collectorMintDTO",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4056,
                              "src": "11742:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                                "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                              }
                            },
                            "id": 4159,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11760:12:5",
                            "memberName": "artistSigner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 857,
                            "src": "11742:30:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4160,
                            "name": "_eip712HashOffChain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4058,
                            "src": "11782:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 4161,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4060,
                            "src": "11811:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 4157,
                          "name": "verifySignature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4423,
                          "src": "11717:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,bytes32,bytes memory) pure returns (bool)"
                          }
                        },
                        "id": 4162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11717:112:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207369676e6174757265",
                        "id": 4163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11837:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
                          "typeString": "literal_string \"Invalid signature\""
                        },
                        "value": "Invalid signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
                          "typeString": "literal_string \"Invalid signature\""
                        }
                      ],
                      "id": 4156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "11702:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11702:160:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4165,
                  "nodeType": "ExpressionStatement",
                  "src": "11702:160:5"
                },
                {
                  "assignments": [4167],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4167,
                      "mutability": "mutable",
                      "name": "_tokenId",
                      "nameLocation": "11877:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4214,
                      "src": "11869:16:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4166,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11869:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4168,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11869:16:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 4169,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4056,
                          "src": "11896:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4170,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11914:13:5",
                        "memberName": "collaborators",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 850,
                        "src": "11896:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 4171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11928:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11896:38:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11938:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11896:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4189,
                    "nodeType": "Block",
                    "src": "12027:76:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 4187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4182,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4167,
                            "src": "12035:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4184,
                                "name": "_mintGoldDustNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4103,
                                "src": "12060:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                                  "typeString": "contract MintGoldDustNFT"
                                }
                              },
                              {
                                "id": 4185,
                                "name": "_collectorMintDTO",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4056,
                                "src": "12078:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                                  "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                                  "typeString": "contract MintGoldDustNFT"
                                },
                                {
                                  "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                                  "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                                }
                              ],
                              "id": 4183,
                              "name": "callSplitMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4299,
                              "src": "12046:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_MintGoldDustNFT_$3699_$_t_struct$_CollectorMintDTO_$862_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (contract MintGoldDustNFT,struct MintGoldDustMarketplace.CollectorMintDTO memory) returns (uint256)"
                              }
                            },
                            "id": 4186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12046:50:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12035:61:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4188,
                        "nodeType": "ExpressionStatement",
                        "src": "12035:61:5"
                      }
                    ]
                  },
                  "id": 4190,
                  "nodeType": "IfStatement",
                  "src": "11892:211:5",
                  "trueBody": {
                    "id": 4181,
                    "nodeType": "Block",
                    "src": "11941:80:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 4179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4174,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4167,
                            "src": "11949:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4176,
                                "name": "_mintGoldDustNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4103,
                                "src": "11978:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                                  "typeString": "contract MintGoldDustNFT"
                                }
                              },
                              {
                                "id": 4177,
                                "name": "_collectorMintDTO",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4056,
                                "src": "11996:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                                  "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                                  "typeString": "contract MintGoldDustNFT"
                                },
                                {
                                  "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                                  "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                                }
                              ],
                              "id": 4175,
                              "name": "callCollectorMint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4263,
                              "src": "11960:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_MintGoldDustNFT_$3699_$_t_struct$_CollectorMintDTO_$862_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (contract MintGoldDustNFT,struct MintGoldDustMarketplace.CollectorMintDTO memory) returns (uint256)"
                              }
                            },
                            "id": 4178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11960:54:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11949:65:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4180,
                        "nodeType": "ExpressionStatement",
                        "src": "11949:65:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4192,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4167,
                        "src": "12127:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4193,
                        "name": "_collectorMintDTO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4056,
                        "src": "12137:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                          "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                          "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                        }
                      ],
                      "id": 4191,
                      "name": "listCollectorMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4328,
                      "src": "12109:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_CollectorMintDTO_$862_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,struct MintGoldDustMarketplace.CollectorMintDTO memory)"
                      }
                    },
                    "id": 4194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12109:46:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4195,
                  "nodeType": "ExpressionStatement",
                  "src": "12109:46:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4197,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4167,
                        "src": "12182:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4198,
                        "name": "_amountToBuy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4064,
                        "src": "12198:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4199,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4056,
                          "src": "12218:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4200,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12236:15:5",
                        "memberName": "contractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 841,
                        "src": "12218:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4201,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4056,
                          "src": "12259:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4202,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12277:12:5",
                        "memberName": "artistSigner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 857,
                        "src": "12259:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4203,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "12297:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12301:5:5",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "12297:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4196,
                      "name": "callPurchase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4360,
                      "src": "12162:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,address,address,uint256)"
                      }
                    },
                    "id": 4205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12162:150:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4206,
                  "nodeType": "ExpressionStatement",
                  "src": "12162:150:5"
                },
                {
                  "expression": {
                    "id": 4212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4207,
                        "name": "collectorMintIdUsed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3758,
                        "src": "12319:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 4210,
                      "indexExpression": {
                        "expression": {
                          "id": 4208,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4056,
                          "src": "12339:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4209,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12357:15:5",
                        "memberName": "collectorMintId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 861,
                        "src": "12339:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12319:54:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12376:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "12319:61:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4213,
                  "nodeType": "ExpressionStatement",
                  "src": "12319:61:5"
                }
              ]
            },
            "documentation": {
              "id": 4053,
              "nodeType": "StructuredDocumentation",
              "src": "8448:2004:5",
              "text": " @notice that is a function responsilble by start the collector (lazy) mint process on chain.\n @param _collectorMintDTO is the CollectorMintDTO struct\n                It consists of the following fields:\n                    - contractAddress: The MintGoldDustERC1155 or the MintGoldDustERC721 address.\n                    - tokenURI: The tokenURI of the marketItem.\n                    - royalty: The royalty of the marketItem.\n                    - memoir: The memoir of the marketItem.\n                    - collaborators: The collaborators of the marketItem.\n                    - ownersPercentage: The ownersPercentage of the marketItem.\n                    - amount: The quantity of tokens to be listed for an MintGoldDustERC1155. For\n                              MintGoldDustERC721 the amout must be always one.\n                    - artistSigner: The artistSigner of the marketItem.\n                    - price: The price or reserve price for the item.\n                    - collectorMintId: Is the collector mint id generated off chain.\n @param _eip712HashOffChain is the hash of the eip712 object generated off chain.\n @param _signature is the _signature of the eip712 object generated off chain.\n @param _mintGoldDustSignature is the _signature using mintGoldDustCompany private key.\n @param _amountToBuy is the amount of tokens to buy.\n @dev See that we have some steps here:\n      1. Verify if the artist signer address is not a zero address.\n      2. Verify if contract address is a MintGoldDustERC721 or a MintGoldDustERC1155.\n      3. Verify if the eip712 hash generated on chain match with the eip712 hash generated off chain.\n      4. Verify if the collector mint dto hash generated on chain match with the collector mint dto hash generated off chain.\n      5. Verify if signatures comes from our platform using the public keys.\n      6. Verify if artist signatures are valid."
            },
            "functionSelector": "ff8a166c",
            "id": 4215,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4067,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4066,
                  "name": "nonReentrant",
                  "nameLocations": ["10683:12:5"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5068,
                  "src": "10683:12:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "10683:12:5"
              },
              {
                "id": 4069,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4068,
                  "name": "whenNotPaused",
                  "nameLocations": ["10696:13:5"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4946,
                  "src": "10696:13:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "10696:13:5"
              }
            ],
            "name": "collectorMintPurchase",
            "nameLocation": "10464:21:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4056,
                  "mutability": "mutable",
                  "name": "_collectorMintDTO",
                  "nameLocation": "10515:17:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4215,
                  "src": "10491:41:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                    "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO"
                  },
                  "typeName": {
                    "id": 4055,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4054,
                      "name": "CollectorMintDTO",
                      "nameLocations": ["10491:16:5"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 862,
                      "src": "10491:16:5"
                    },
                    "referencedDeclaration": 862,
                    "src": "10491:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollectorMintDTO_$862_storage_ptr",
                      "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4058,
                  "mutability": "mutable",
                  "name": "_eip712HashOffChain",
                  "nameLocation": "10546:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4215,
                  "src": "10538:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4057,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10538:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4060,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "10584:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4215,
                  "src": "10571:23:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4059,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10571:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4062,
                  "mutability": "mutable",
                  "name": "_mintGoldDustSignature",
                  "nameLocation": "10613:22:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4215,
                  "src": "10600:35:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4061,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10600:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4064,
                  "mutability": "mutable",
                  "name": "_amountToBuy",
                  "nameLocation": "10649:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4215,
                  "src": "10641:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4063,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10641:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10485:180:5"
            },
            "returnParameters": {
              "id": 4070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10710:0:5"
            },
            "scope": 4568,
            "src": "10455:1930:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4230,
              "nodeType": "Block",
              "src": "13589:66:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4223,
                        "name": "_saleDTO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4219,
                        "src": "13618:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SaleDTO_$830_memory_ptr",
                          "typeString": "struct MintGoldDustMarketplace.SaleDTO memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 4224,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "13628:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13632:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13628:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4226,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "13640:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13644:5:5",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "13640:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SaleDTO_$830_memory_ptr",
                          "typeString": "struct MintGoldDustMarketplace.SaleDTO memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4222,
                      "name": "executePurchaseNftFlow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1633,
                      "src": "13595:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SaleDTO_$830_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (struct MintGoldDustMarketplace.SaleDTO memory,address,uint256)"
                      }
                    },
                    "id": 4228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13595:55:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4229,
                  "nodeType": "ExpressionStatement",
                  "src": "13595:55:5"
                }
              ]
            },
            "documentation": {
              "id": 4216,
              "nodeType": "StructuredDocumentation",
              "src": "12389:1134:5",
              "text": " Acquire a listed NFT to Set Price market\n @notice function will fail if the market item does has the auction property to true.\n @notice function will fail if the token was not listed to the set price market.\n @notice function will fail if the contract address is not a MintGoldDustERC721 neither a MintGoldDustERC1155.\n @notice function will fail if the amount paid by the buyer does not cover the purshace amount required.\n @dev This function is specific for the set price market.\n For the auction market we have a second purchaseAuctionNft function. See below.\n @param _saleDTO The SaleDTO struct parameter to use.\n                 It consists of the following fields:\n                    - tokenid: The tokenId of the marketItem.\n                    - amount: The quantity of tokens to be listed for an MintGoldDustERC1155. For\n                              MintGoldDustERC721 the amout must be always one.\n                    - contractAddress: The MintGoldDustERC1155 or the MintGoldDustERC721 address.\n                    - seller: The seller of the marketItem."
            },
            "functionSelector": "ae93cabe",
            "id": 4231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchaseNft",
            "nameLocation": "13535:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4219,
                  "mutability": "mutable",
                  "name": "_saleDTO",
                  "nameLocation": "13562:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4231,
                  "src": "13547:23:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SaleDTO_$830_memory_ptr",
                    "typeString": "struct MintGoldDustMarketplace.SaleDTO"
                  },
                  "typeName": {
                    "id": 4218,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4217,
                      "name": "SaleDTO",
                      "nameLocations": ["13547:7:5"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 830,
                      "src": "13547:7:5"
                    },
                    "referencedDeclaration": 830,
                    "src": "13547:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SaleDTO_$830_storage_ptr",
                      "typeString": "struct MintGoldDustMarketplace.SaleDTO"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13546:25:5"
            },
            "returnParameters": {
              "id": 4221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13589:0:5"
            },
            "scope": 4568,
            "src": "13526:129:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4262,
              "nodeType": "Block",
              "src": "13801:297:5",
              "statements": [
                {
                  "assignments": [4243],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4243,
                      "mutability": "mutable",
                      "name": "_tokenId",
                      "nameLocation": "13815:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4262,
                      "src": "13807:16:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4242,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13807:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4259,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4246,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4237,
                          "src": "13864:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4247,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13882:8:5",
                        "memberName": "tokenURI",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 843,
                        "src": "13864:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 4248,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4237,
                          "src": "13898:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4249,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13916:7:5",
                        "memberName": "royalty",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 845,
                        "src": "13898:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4250,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4237,
                          "src": "13931:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4251,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13949:6:5",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 855,
                        "src": "13931:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4252,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4237,
                          "src": "13963:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4253,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13981:12:5",
                        "memberName": "artistSigner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 857,
                        "src": "13963:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4254,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4237,
                          "src": "14001:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4255,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14019:6:5",
                        "memberName": "memoir",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 847,
                        "src": "14001:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 4256,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4237,
                          "src": "14033:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4257,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14051:15:5",
                        "memberName": "collectorMintId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 861,
                        "src": "14033:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4244,
                        "name": "_mintGoldDustNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4234,
                        "src": "13826:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                          "typeString": "contract MintGoldDustNFT"
                        }
                      },
                      "id": 4245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13843:13:5",
                      "memberName": "collectorMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3365,
                      "src": "13826:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (string memory,uint256,uint256,address,bytes memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 4258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13826:246:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13807:265:5"
                },
                {
                  "expression": {
                    "id": 4260,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4243,
                    "src": "14085:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4241,
                  "id": 4261,
                  "nodeType": "Return",
                  "src": "14078:15:5"
                }
              ]
            },
            "id": 4263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callCollectorMint",
            "nameLocation": "13668:17:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4234,
                  "mutability": "mutable",
                  "name": "_mintGoldDustNFT",
                  "nameLocation": "13707:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4263,
                  "src": "13691:32:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                    "typeString": "contract MintGoldDustNFT"
                  },
                  "typeName": {
                    "id": 4233,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4232,
                      "name": "MintGoldDustNFT",
                      "nameLocations": ["13691:15:5"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3699,
                      "src": "13691:15:5"
                    },
                    "referencedDeclaration": 3699,
                    "src": "13691:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                      "typeString": "contract MintGoldDustNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4237,
                  "mutability": "mutable",
                  "name": "_collectorMintDTO",
                  "nameLocation": "13753:17:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4263,
                  "src": "13729:41:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                    "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO"
                  },
                  "typeName": {
                    "id": 4236,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4235,
                      "name": "CollectorMintDTO",
                      "nameLocations": ["13729:16:5"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 862,
                      "src": "13729:16:5"
                    },
                    "referencedDeclaration": 862,
                    "src": "13729:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollectorMintDTO_$862_storage_ptr",
                      "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13685:89:5"
            },
            "returnParameters": {
              "id": 4241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4240,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4263,
                  "src": "13792:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4239,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13792:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13791:9:5"
            },
            "scope": 4568,
            "src": "13659:439:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4298,
              "nodeType": "Block",
              "src": "14240:384:5",
              "statements": [
                {
                  "assignments": [4275],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4275,
                      "mutability": "mutable",
                      "name": "_tokenId",
                      "nameLocation": "14254:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4298,
                      "src": "14246:16:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4274,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14246:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4295,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4278,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4269,
                          "src": "14308:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4279,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14326:8:5",
                        "memberName": "tokenURI",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 843,
                        "src": "14308:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 4280,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4269,
                          "src": "14342:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4281,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14360:7:5",
                        "memberName": "royalty",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 845,
                        "src": "14342:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4282,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4269,
                          "src": "14375:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4283,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14393:13:5",
                        "memberName": "collaborators",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 850,
                        "src": "14375:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 4284,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4269,
                          "src": "14414:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4285,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14432:16:5",
                        "memberName": "ownersPercentage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 853,
                        "src": "14414:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 4286,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4269,
                          "src": "14456:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4287,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14474:6:5",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 855,
                        "src": "14456:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4288,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4269,
                          "src": "14488:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4289,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14506:12:5",
                        "memberName": "artistSigner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 857,
                        "src": "14488:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4290,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4269,
                          "src": "14526:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4291,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14544:6:5",
                        "memberName": "memoir",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 847,
                        "src": "14526:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 4292,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4269,
                          "src": "14558:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4293,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14576:15:5",
                        "memberName": "collectorMintId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 861,
                        "src": "14558:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4276,
                        "name": "_mintGoldDustNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4266,
                        "src": "14265:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                          "typeString": "contract MintGoldDustNFT"
                        }
                      },
                      "id": 4277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14282:18:5",
                      "memberName": "collectorSplitMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3412,
                      "src": "14265:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (string memory,uint256,address[] memory,uint256[] memory,uint256,address,bytes memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 4294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14265:332:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14246:351:5"
                },
                {
                  "expression": {
                    "id": 4296,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4275,
                    "src": "14611:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4273,
                  "id": 4297,
                  "nodeType": "Return",
                  "src": "14604:15:5"
                }
              ]
            },
            "id": 4299,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callSplitMint",
            "nameLocation": "14111:13:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4266,
                  "mutability": "mutable",
                  "name": "_mintGoldDustNFT",
                  "nameLocation": "14146:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4299,
                  "src": "14130:32:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                    "typeString": "contract MintGoldDustNFT"
                  },
                  "typeName": {
                    "id": 4265,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4264,
                      "name": "MintGoldDustNFT",
                      "nameLocations": ["14130:15:5"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3699,
                      "src": "14130:15:5"
                    },
                    "referencedDeclaration": 3699,
                    "src": "14130:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintGoldDustNFT_$3699",
                      "typeString": "contract MintGoldDustNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4269,
                  "mutability": "mutable",
                  "name": "_collectorMintDTO",
                  "nameLocation": "14192:17:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4299,
                  "src": "14168:41:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                    "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO"
                  },
                  "typeName": {
                    "id": 4268,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4267,
                      "name": "CollectorMintDTO",
                      "nameLocations": ["14168:16:5"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 862,
                      "src": "14168:16:5"
                    },
                    "referencedDeclaration": 862,
                    "src": "14168:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollectorMintDTO_$862_storage_ptr",
                      "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14124:89:5"
            },
            "returnParameters": {
              "id": 4273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4272,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4299,
                  "src": "14231:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14231:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14230:9:5"
            },
            "scope": 4568,
            "src": "14102:522:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4327,
              "nodeType": "Block",
              "src": "14736:226:5",
              "statements": [
                {
                  "assignments": [4309],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4309,
                      "mutability": "mutable",
                      "name": "_listDTO",
                      "nameLocation": "14757:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4327,
                      "src": "14742:23:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ListDTO_$839_memory_ptr",
                        "typeString": "struct MintGoldDustMarketplace.ListDTO"
                      },
                      "typeName": {
                        "id": 4308,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4307,
                          "name": "ListDTO",
                          "nameLocations": ["14742:7:5"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 839,
                          "src": "14742:7:5"
                        },
                        "referencedDeclaration": 839,
                        "src": "14742:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ListDTO_$839_storage_ptr",
                          "typeString": "struct MintGoldDustMarketplace.ListDTO"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4319,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4311,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4301,
                        "src": "14783:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4312,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4304,
                          "src": "14799:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4313,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14817:6:5",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 855,
                        "src": "14799:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4314,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4304,
                          "src": "14831:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4315,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14849:15:5",
                        "memberName": "contractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 841,
                        "src": "14831:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4316,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4304,
                          "src": "14872:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4317,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14890:5:5",
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 859,
                        "src": "14872:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4310,
                      "name": "ListDTO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 839,
                      "src": "14768:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ListDTO_$839_storage_ptr_$",
                        "typeString": "type(struct MintGoldDustMarketplace.ListDTO storage pointer)"
                      }
                    },
                    "id": 4318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14768:133:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ListDTO_$839_memory_ptr",
                      "typeString": "struct MintGoldDustMarketplace.ListDTO memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14742:159:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4321,
                        "name": "_listDTO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4309,
                        "src": "14913:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ListDTO_$839_memory_ptr",
                          "typeString": "struct MintGoldDustMarketplace.ListDTO memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 4322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14923:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "id": 4323,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4304,
                          "src": "14926:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4324,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14944:12:5",
                        "memberName": "artistSigner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 857,
                        "src": "14926:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ListDTO_$839_memory_ptr",
                          "typeString": "struct MintGoldDustMarketplace.ListDTO memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4320,
                      "name": "list",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1518,
                      "src": "14908:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ListDTO_$839_memory_ptr_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (struct MintGoldDustMarketplace.ListDTO memory,uint256,address)"
                      }
                    },
                    "id": 4325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14908:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4326,
                  "nodeType": "ExpressionStatement",
                  "src": "14908:49:5"
                }
              ]
            },
            "id": 4328,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "listCollectorMint",
            "nameLocation": "14637:17:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4301,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "14668:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4328,
                  "src": "14660:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14660:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4304,
                  "mutability": "mutable",
                  "name": "_collectorMintDTO",
                  "nameLocation": "14706:17:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4328,
                  "src": "14682:41:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                    "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO"
                  },
                  "typeName": {
                    "id": 4303,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4302,
                      "name": "CollectorMintDTO",
                      "nameLocations": ["14682:16:5"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 862,
                      "src": "14682:16:5"
                    },
                    "referencedDeclaration": 862,
                    "src": "14682:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollectorMintDTO_$862_storage_ptr",
                      "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14654:73:5"
            },
            "returnParameters": {
              "id": 4306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14736:0:5"
            },
            "scope": 4568,
            "src": "14628:334:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4359,
              "nodeType": "Block",
              "src": "15212:184:5",
              "statements": [
                {
                  "assignments": [4344],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4344,
                      "mutability": "mutable",
                      "name": "_saleDTO",
                      "nameLocation": "15233:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4359,
                      "src": "15218:23:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SaleDTO_$830_memory_ptr",
                        "typeString": "struct MintGoldDustMarketplace.SaleDTO"
                      },
                      "typeName": {
                        "id": 4343,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4342,
                          "name": "SaleDTO",
                          "nameLocations": ["15218:7:5"],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 830,
                          "src": "15218:7:5"
                        },
                        "referencedDeclaration": 830,
                        "src": "15218:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SaleDTO_$830_storage_ptr",
                          "typeString": "struct MintGoldDustMarketplace.SaleDTO"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4351,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4346,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4331,
                        "src": "15259:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4347,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4333,
                        "src": "15275:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4348,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4335,
                        "src": "15290:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4349,
                        "name": "_artistSigner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4337,
                        "src": "15314:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4345,
                      "name": "SaleDTO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 830,
                      "src": "15244:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_SaleDTO_$830_storage_ptr_$",
                        "typeString": "type(struct MintGoldDustMarketplace.SaleDTO storage pointer)"
                      }
                    },
                    "id": 4350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15244:89:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SaleDTO_$830_memory_ptr",
                      "typeString": "struct MintGoldDustMarketplace.SaleDTO memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15218:115:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4353,
                        "name": "_saleDTO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4344,
                        "src": "15362:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SaleDTO_$830_memory_ptr",
                          "typeString": "struct MintGoldDustMarketplace.SaleDTO memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 4354,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "15372:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15376:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15372:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4356,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4339,
                        "src": "15384:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SaleDTO_$830_memory_ptr",
                          "typeString": "struct MintGoldDustMarketplace.SaleDTO memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4352,
                      "name": "executePurchaseNftFlow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1633,
                      "src": "15339:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SaleDTO_$830_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (struct MintGoldDustMarketplace.SaleDTO memory,address,uint256)"
                      }
                    },
                    "id": 4357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15339:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4358,
                  "nodeType": "ExpressionStatement",
                  "src": "15339:52:5"
                }
              ]
            },
            "documentation": {
              "id": 4329,
              "nodeType": "StructuredDocumentation",
              "src": "14966:89:5",
              "text": "@notice that is a function responsible by handling the call to the purchase function."
            },
            "id": 4360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callPurchase",
            "nameLocation": "15067:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4331,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "15093:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4360,
                  "src": "15085:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15085:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4333,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "15115:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4360,
                  "src": "15107:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15107:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4335,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "15136:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4360,
                  "src": "15128:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15128:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4337,
                  "mutability": "mutable",
                  "name": "_artistSigner",
                  "nameLocation": "15166:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4360,
                  "src": "15158:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15158:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4339,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "15193:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4360,
                  "src": "15185:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15185:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15079:124:5"
            },
            "returnParameters": {
              "id": 4341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15212:0:5"
            },
            "scope": 4568,
            "src": "15058:338:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4422,
              "nodeType": "Block",
              "src": "15911:512:5",
              "statements": [
                {
                  "assignments": [4373],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4373,
                      "mutability": "mutable",
                      "name": "prefixedHash",
                      "nameLocation": "15925:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4422,
                      "src": "15917:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4372,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "15917:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4381,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                            "id": 4377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15974:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            "value": "\u0019Ethereum Signed Message:\n32"
                          },
                          {
                            "id": 4378,
                            "name": "_eip712Hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4365,
                            "src": "16010:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 4375,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "15957:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15961:12:5",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "15957:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 4379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15957:65:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4374,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "15940:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15940:88:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15917:111:5"
                },
                {
                  "assignments": [4383],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4383,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "16043:1:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4422,
                      "src": "16035:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4382,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "16035:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4384,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16035:9:5"
                },
                {
                  "assignments": [4386],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4386,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "16058:1:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4422,
                      "src": "16050:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4385,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "16050:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4387,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16050:9:5"
                },
                {
                  "assignments": [4389],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4389,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "16071:1:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4422,
                      "src": "16065:7:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 4388,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "16065:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4390,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16065:7:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4392,
                            "name": "_signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4367,
                            "src": "16087:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 4393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16098:6:5",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "16087:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 4394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16108:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "16087:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207369676e6174757265206c656e677468",
                        "id": 4396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16112:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e57016dfcfa997388e3f3d9ad75ea4d5a67a0f23b0489f2cdbaecf3ef0f78c",
                          "typeString": "literal_string \"Invalid signature length\""
                        },
                        "value": "Invalid signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e57016dfcfa997388e3f3d9ad75ea4d5a67a0f23b0489f2cdbaecf3ef0f78c",
                          "typeString": "literal_string \"Invalid signature length\""
                        }
                      ],
                      "id": 4391,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "16079:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16079:60:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4398,
                  "nodeType": "ExpressionStatement",
                  "src": "16079:60:5"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "16155:130:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "16163:31:5",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "16178:10:5"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16190:2:5",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "16174:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16174:19:5"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "16168:5:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16168:26:5"
                        },
                        "variableNames": [
                          {
                            "name": "r",
                            "nodeType": "YulIdentifier",
                            "src": "16163:1:5"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "16201:31:5",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_signature",
                                  "nodeType": "YulIdentifier",
                                  "src": "16216:10:5"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16228:2:5",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "16212:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16212:19:5"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "16206:5:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16206:26:5"
                        },
                        "variableNames": [
                          {
                            "name": "s",
                            "nodeType": "YulIdentifier",
                            "src": "16201:1:5"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "16239:40:5",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16249:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_signature",
                                      "nodeType": "YulIdentifier",
                                      "src": "16262:10:5"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "16274:2:5",
                                      "type": "",
                                      "value": "96"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "16258:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "16258:19:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "16252:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16252:26:5"
                            }
                          ],
                          "functionName": {
                            "name": "byte",
                            "nodeType": "YulIdentifier",
                            "src": "16244:4:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16244:35:5"
                        },
                        "variableNames": [
                          {
                            "name": "v",
                            "nodeType": "YulIdentifier",
                            "src": "16239:1:5"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 4367,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "16178:10:5",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4367,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "16216:10:5",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4367,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "16262:10:5",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4383,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "16163:1:5",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4386,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "16201:1:5",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4389,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "16239:1:5",
                      "valueSize": 1
                    }
                  ],
                  "id": 4399,
                  "nodeType": "InlineAssembly",
                  "src": "16146:139:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 4402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4400,
                      "name": "v",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4389,
                      "src": "16295:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3237",
                      "id": 4401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16299:2:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_27_by_1",
                        "typeString": "int_const 27"
                      },
                      "value": "27"
                    },
                    "src": "16295:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4408,
                  "nodeType": "IfStatement",
                  "src": "16291:34:5",
                  "trueBody": {
                    "id": 4407,
                    "nodeType": "Block",
                    "src": "16303:22:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 4405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4403,
                            "name": "v",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4389,
                            "src": "16311:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "3237",
                            "id": 4404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16316:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_27_by_1",
                              "typeString": "int_const 27"
                            },
                            "value": "27"
                          },
                          "src": "16311:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 4406,
                        "nodeType": "ExpressionStatement",
                        "src": "16311:7:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [4410],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4410,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "16339:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4422,
                      "src": "16331:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4409,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "16331:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4417,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4412,
                        "name": "prefixedHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4373,
                        "src": "16358:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 4413,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4389,
                        "src": "16372:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 4414,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4383,
                        "src": "16375:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 4415,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4386,
                        "src": "16378:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 4411,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967290,
                      "src": "16348:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 4416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16348:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16331:49:5"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4418,
                      "name": "signer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4410,
                      "src": "16393:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 4419,
                      "name": "_expectedSigner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4363,
                      "src": "16403:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "16393:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4371,
                  "id": 4421,
                  "nodeType": "Return",
                  "src": "16386:32:5"
                }
              ]
            },
            "documentation": {
              "id": 4361,
              "nodeType": "StructuredDocumentation",
              "src": "15400:368:5",
              "text": " @notice that function is responsible by verify a _signature on top of the eip712 object hash.\n @param _expectedSigner is the signer address.\n    @dev in this case is the artist signer address.\n @param _eip712Hash is the _signature of the eip712 object generated off chain.\n @param _signature is the collector mint id generated off chain."
            },
            "id": 4423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifySignature",
            "nameLocation": "15780:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4363,
                  "mutability": "mutable",
                  "name": "_expectedSigner",
                  "nameLocation": "15809:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4423,
                  "src": "15801:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15801:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4365,
                  "mutability": "mutable",
                  "name": "_eip712Hash",
                  "nameLocation": "15838:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4423,
                  "src": "15830:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4364,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15830:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4367,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "15868:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4423,
                  "src": "15855:23:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4366,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15855:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15795:87:5"
            },
            "returnParameters": {
              "id": 4371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4370,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4423,
                  "src": "15905:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4369,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15905:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15904:6:5"
            },
            "scope": 4568,
            "src": "15771:652:5",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4475,
              "nodeType": "Block",
              "src": "17776:365:5",
              "statements": [
                {
                  "assignments": [4433],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4433,
                      "mutability": "mutable",
                      "name": "encodedData",
                      "nameLocation": "17795:11:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4475,
                      "src": "17782:24:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 4432,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "17782:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4437,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4435,
                        "name": "_collectorMintDTO",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4427,
                        "src": "17820:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                          "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                          "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                        }
                      ],
                      "id": 4434,
                      "name": "encodeData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4567,
                      "src": "17809:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_CollectorMintDTO_$862_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (struct MintGoldDustMarketplace.CollectorMintDTO memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 4436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17809:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17782:56:5"
                },
                {
                  "assignments": [4439],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4439,
                      "mutability": "mutable",
                      "name": "domainSeparator",
                      "nameLocation": "17852:15:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4475,
                      "src": "17844:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4438,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "17844:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4442,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4440,
                      "name": "encodeDomainSeparator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4529,
                      "src": "17870:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view returns (bytes32)"
                      }
                    },
                    "id": 4441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17870:23:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17844:49:5"
                },
                {
                  "assignments": [4444],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4444,
                      "mutability": "mutable",
                      "name": "encodedDataHash",
                      "nameLocation": "17908:15:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4475,
                      "src": "17900:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4443,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "17900:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4460,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30783139",
                                "id": 4450,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17961:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_25_by_1",
                                  "typeString": "int_const 25"
                                },
                                "value": "0x19"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_25_by_1",
                                  "typeString": "int_const 25"
                                }
                              ],
                              "id": 4449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17954:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 4448,
                                "name": "bytes1",
                                "nodeType": "ElementaryTypeName",
                                "src": "17954:6:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17954:12:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30783031",
                                "id": 4454,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17975:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "0x01"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 4453,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17968:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 4452,
                                "name": "bytes1",
                                "nodeType": "ElementaryTypeName",
                                "src": "17968:6:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17968:12:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          {
                            "id": 4456,
                            "name": "domainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4439,
                            "src": "17982:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 4457,
                            "name": "encodedData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4433,
                            "src": "17999:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            },
                            {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 4446,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "17943:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17947:6:5",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "17943:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 4458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17943:68:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4445,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "17926:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17926:91:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17900:117:5"
                },
                {
                  "assignments": [4462],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4462,
                      "mutability": "mutable",
                      "name": "hashBytes32",
                      "nameLocation": "18032:11:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4475,
                      "src": "18024:19:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4461,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "18024:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4467,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4465,
                        "name": "encodedDataHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4444,
                        "src": "18054:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 4464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "18046:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 4463,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "18046:7:5",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18046:24:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18024:46:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 4471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4469,
                          "name": "hashBytes32",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4462,
                          "src": "18085:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4470,
                          "name": "_eip712HashOffChain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4429,
                          "src": "18100:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "18085:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642068617368",
                        "id": 4472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18121:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415",
                          "typeString": "literal_string \"Invalid hash\""
                        },
                        "value": "Invalid hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415",
                          "typeString": "literal_string \"Invalid hash\""
                        }
                      ],
                      "id": 4468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [4294967278, 4294967278],
                      "referencedDeclaration": 4294967278,
                      "src": "18077:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18077:59:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4474,
                  "nodeType": "ExpressionStatement",
                  "src": "18077:59:5"
                }
              ]
            },
            "documentation": {
              "id": 4424,
              "nodeType": "StructuredDocumentation",
              "src": "16427:1221:5",
              "text": " @notice that is a function that will generate the hash of the eip712 object on chain.\n @param _collectorMintDTO is the CollectorMintDTO struct\n                It consists of the following fields:\n                    - contractAddress: The MintGoldDustERC1155 or the MintGoldDustERC721 address.\n                    - tokenURI: The tokenURI of the marketItem.\n                    - royalty: The royalty of the marketItem.\n                    - memoir: The memoir of the marketItem.\n                    - collaborators: The collaborators of the marketItem.\n                    - ownersPercentage: The ownersPercentage of the marketItem.\n                    - amount: The quantity of tokens to be listed for an MintGoldDustERC1155. For\n                              MintGoldDustERC721 the amout must be always one.\n                    - artistSigner: The artistSigner of the marketItem.\n                    - price: The price or reserve price for the item.\n @notice that this function depends on another two functions:\n      1. encodeDomainSeparator: that will encode the domain separator.\n      2. encodeData: that will encode the _collectorMintDTO."
            },
            "id": 4476,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateEIP712Hash",
            "nameLocation": "17660:18:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4427,
                  "mutability": "mutable",
                  "name": "_collectorMintDTO",
                  "nameLocation": "17708:17:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4476,
                  "src": "17684:41:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                    "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO"
                  },
                  "typeName": {
                    "id": 4426,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4425,
                      "name": "CollectorMintDTO",
                      "nameLocations": ["17684:16:5"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 862,
                      "src": "17684:16:5"
                    },
                    "referencedDeclaration": 862,
                    "src": "17684:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollectorMintDTO_$862_storage_ptr",
                      "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4429,
                  "mutability": "mutable",
                  "name": "_eip712HashOffChain",
                  "nameLocation": "17739:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4476,
                  "src": "17731:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4428,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17731:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17678:84:5"
            },
            "returnParameters": {
              "id": 4431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17776:0:5"
            },
            "scope": 4568,
            "src": "17651:490:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4528,
              "nodeType": "Block",
              "src": "18333:508:5",
              "statements": [
                {
                  "assignments": [4483],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4483,
                      "mutability": "mutable",
                      "name": "domainTypeHash",
                      "nameLocation": "18347:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4528,
                      "src": "18339:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4482,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "18339:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4490,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                            "id": 4487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18407:84:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                              "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                            },
                            "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                              "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                            }
                          ],
                          "expression": {
                            "id": 4485,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "18381:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "18385:12:5",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "18381:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 4488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18381:118:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4484,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "18364:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18364:141:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18339:166:5"
                },
                {
                  "assignments": [4492],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4492,
                      "mutability": "mutable",
                      "name": "nameHash",
                      "nameLocation": "18520:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4528,
                      "src": "18512:16:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4491,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "18512:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4499,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d696e74476f6c64447573745365745072696365",
                            "id": 4496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18547:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_be74b17595f70ba17b4a80a8e5cc55e44e5bc9477a22afa4c2b461b1cc0615df",
                              "typeString": "literal_string \"MintGoldDustSetPrice\""
                            },
                            "value": "MintGoldDustSetPrice"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_be74b17595f70ba17b4a80a8e5cc55e44e5bc9477a22afa4c2b461b1cc0615df",
                              "typeString": "literal_string \"MintGoldDustSetPrice\""
                            }
                          ],
                          "id": 4495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18541:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 4494,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "18541:5:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18541:29:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4493,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "18531:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18531:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18512:59:5"
                },
                {
                  "assignments": [4501],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4501,
                      "mutability": "mutable",
                      "name": "versionHash",
                      "nameLocation": "18585:11:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4528,
                      "src": "18577:19:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4500,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "18577:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4508,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "312e302e30",
                            "id": 4505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18615:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                              "typeString": "literal_string \"1.0.0\""
                            },
                            "value": "1.0.0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                              "typeString": "literal_string \"1.0.0\""
                            }
                          ],
                          "id": 4504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18609:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 4503,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "18609:5:5",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18609:14:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4502,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "18599:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18599:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18577:47:5"
                },
                {
                  "assignments": [4510],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4510,
                      "mutability": "mutable",
                      "name": "domainSeparator",
                      "nameLocation": "18639:15:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4528,
                      "src": "18631:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4509,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "18631:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4525,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4514,
                            "name": "domainTypeHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4483,
                            "src": "18694:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 4515,
                            "name": "nameHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4492,
                            "src": "18718:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 4516,
                            "name": "versionHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4501,
                            "src": "18736:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 4517,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "18757:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 4518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18763:7:5",
                            "memberName": "chainid",
                            "nodeType": "MemberAccess",
                            "src": "18757:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 4521,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "18788:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MintGoldDustSetPrice_$4568",
                                  "typeString": "contract MintGoldDustSetPrice"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MintGoldDustSetPrice_$4568",
                                  "typeString": "contract MintGoldDustSetPrice"
                                }
                              ],
                              "id": 4520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18780:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4519,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18780:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18780:13:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 4512,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "18674:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 4513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "18678:6:5",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "18674:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 4523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18674:127:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4511,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "18657:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 4524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18657:150:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18631:176:5"
                },
                {
                  "expression": {
                    "id": 4526,
                    "name": "domainSeparator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4510,
                    "src": "18821:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 4481,
                  "id": 4527,
                  "nodeType": "Return",
                  "src": "18814:22:5"
                }
              ]
            },
            "documentation": {
              "id": 4477,
              "nodeType": "StructuredDocumentation",
              "src": "18145:121:5",
              "text": " @notice that is a function that will create and encode the domain separator of the eip712 object on chain."
            },
            "id": 4529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "encodeDomainSeparator",
            "nameLocation": "18278:21:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18299:2:5"
            },
            "returnParameters": {
              "id": 4481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4480,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4529,
                  "src": "18324:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4479,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "18324:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18323:9:5"
            },
            "scope": 4568,
            "src": "18269:572:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4566,
              "nodeType": "Block",
              "src": "19982:442:5",
              "statements": [
                {
                  "assignments": [4539],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4539,
                      "mutability": "mutable",
                      "name": "encodedData",
                      "nameLocation": "20001:11:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4566,
                      "src": "19988:24:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 4538,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "19988:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4563,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4542,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4533,
                          "src": "20033:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4543,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20051:15:5",
                        "memberName": "contractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 841,
                        "src": "20033:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4544,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4533,
                          "src": "20074:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4545,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20092:8:5",
                        "memberName": "tokenURI",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 843,
                        "src": "20074:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 4546,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4533,
                          "src": "20108:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4547,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20126:7:5",
                        "memberName": "royalty",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 845,
                        "src": "20108:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4548,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4533,
                          "src": "20141:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4549,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20159:6:5",
                        "memberName": "memoir",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 847,
                        "src": "20141:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 4550,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4533,
                          "src": "20173:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4551,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20191:13:5",
                        "memberName": "collaborators",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 850,
                        "src": "20173:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 4552,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4533,
                          "src": "20212:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4553,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20230:16:5",
                        "memberName": "ownersPercentage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 853,
                        "src": "20212:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 4554,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4533,
                          "src": "20254:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4555,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20272:6:5",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 855,
                        "src": "20254:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4556,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4533,
                          "src": "20286:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4557,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20304:12:5",
                        "memberName": "artistSigner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 857,
                        "src": "20286:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4558,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4533,
                          "src": "20324:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4559,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20342:5:5",
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 859,
                        "src": "20324:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 4560,
                          "name": "_collectorMintDTO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4533,
                          "src": "20355:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                            "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO memory"
                          }
                        },
                        "id": 4561,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20373:15:5",
                        "memberName": "collectorMintId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 861,
                        "src": "20355:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4540,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967295,
                        "src": "20015:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 4541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "20019:6:5",
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "src": "20015:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 4562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20015:379:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19988:406:5"
                },
                {
                  "expression": {
                    "id": 4564,
                    "name": "encodedData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4539,
                    "src": "20408:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 4537,
                  "id": 4565,
                  "nodeType": "Return",
                  "src": "20401:18:5"
                }
              ]
            },
            "documentation": {
              "id": 4530,
              "nodeType": "StructuredDocumentation",
              "src": "18845:1027:5",
              "text": " @notice that is a function that will encode the _collectorMintDTO for the eip712 object on chain.\n @param _collectorMintDTO is the CollectorMintDTO struct\n                It consists of the following fields:\n                    - contractAddress: The MintGoldDustERC1155 or the MintGoldDustERC721 address.\n                    - tokenURI: The tokenURI of the marketItem.\n                    - royalty: The royalty of the marketItem.\n                    - memoir: The memoir of the marketItem.\n                    - collaborators: The collaborators of the marketItem.\n                    - ownersPercentage: The ownersPercentage of the marketItem.\n                    - amount: The quantity of tokens to be listed for an MintGoldDustERC1155. For\n                              MintGoldDustERC721 the amout must be always one.\n                    - artistSigner: The artistSigner of the marketItem.\n                    - price: The price or reserve price for the item."
            },
            "id": 4567,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "encodeData",
            "nameLocation": "19884:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4533,
                  "mutability": "mutable",
                  "name": "_collectorMintDTO",
                  "nameLocation": "19924:17:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4567,
                  "src": "19900:41:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CollectorMintDTO_$862_memory_ptr",
                    "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO"
                  },
                  "typeName": {
                    "id": 4532,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4531,
                      "name": "CollectorMintDTO",
                      "nameLocations": ["19900:16:5"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 862,
                      "src": "19900:16:5"
                    },
                    "referencedDeclaration": 862,
                    "src": "19900:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollectorMintDTO_$862_storage_ptr",
                      "typeString": "struct MintGoldDustMarketplace.CollectorMintDTO"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19894:51:5"
            },
            "returnParameters": {
              "id": 4537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4536,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4567,
                  "src": "19968:12:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4535,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "19968:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19967:14:5"
            },
            "scope": 4568,
            "src": "19875:549:5",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 4569,
        "src": "794:19632:5",
        "usedErrors": [948, 960, 964, 968, 970, 972, 974, 976, 978, 3709]
      }
    ],
    "src": "39:20388:5"
  },
  "functionHashes": {
    "collectorMintIdUsed(uint256)": "56e3319d",
    "collectorMintPurchase((address,string,uint256,bytes,address[],uint256[],uint256,address,uint256,uint256),bytes32,bytes,bytes,uint256)": "ff8a166c",
    "delistNft((uint256,uint256,address))": "8ad284d8",
    "idMarketItemsByContractByOwner(address,uint256,address)": "e95ce3ea",
    "initializeChild(address,address,address)": "ef3790db",
    "isSecondarySale(address,uint256)": "5e50314a",
    "itemsSold()": "913e0a48",
    "list(uint256,uint256,address,uint256)": "1502b23b",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "pauseContract()": "439766ce",
    "paused()": "5c975abb",
    "purchaseNft((uint256,uint256,address,address))": "ae93cabe",
    "setMintGoldDustMarketplace(address)": "0319a381",
    "setSecondarySale(address,uint256,address,bool,uint256)": "492bb9a5",
    "supportsInterface(bytes4)": "01ffc9a7",
    "unpauseContract()": "b33712c5",
    "updateListedNft(uint256,uint256,address,address)": "d55755c5",
    "updateSecondarySaleAmount(address,uint256,uint256)": "2fa35030",
    "updateSecondarySaleSold(address,uint256,bool)": "60e7d0e8"
  },
  "gasEstimates": {
    "creation": {
      "codeDepositCost": "3665000",
      "executionCost": "4130",
      "totalCost": "3669130"
    },
    "external": {
      "collectorMintIdUsed(uint256)": "2506",
      "collectorMintPurchase((address,string,uint256,bytes,address[],uint256[],uint256,address,uint256,uint256),bytes32,bytes,bytes,uint256)": "infinite",
      "delistNft((uint256,uint256,address))": "infinite",
      "idMarketItemsByContractByOwner(address,uint256,address)": "infinite",
      "initializeChild(address,address,address)": "infinite",
      "isSecondarySale(address,uint256)": "4945",
      "itemsSold()": "2365",
      "list(uint256,uint256,address,uint256)": "infinite",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
      "onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
      "onERC721Received(address,address,uint256,bytes)": "infinite",
      "pauseContract()": "infinite",
      "paused()": "2382",
      "purchaseNft((uint256,uint256,address,address))": "infinite",
      "setMintGoldDustMarketplace(address)": "infinite",
      "setSecondarySale(address,uint256,address,bool,uint256)": "infinite",
      "supportsInterface(bytes4)": "370",
      "unpauseContract()": "infinite",
      "updateListedNft(uint256,uint256,address,address)": "infinite",
      "updateSecondarySaleAmount(address,uint256,uint256)": "27056",
      "updateSecondarySaleSold(address,uint256,bool)": "infinite"
    },
    "internal": {
      "callCollectorMint(contract MintGoldDustNFT,struct MintGoldDustMarketplace.CollectorMintDTO memory)": "infinite",
      "callPurchase(uint256,uint256,address,address,uint256)": "infinite",
      "callSplitMint(contract MintGoldDustNFT,struct MintGoldDustMarketplace.CollectorMintDTO memory)": "infinite",
      "encodeData(struct MintGoldDustMarketplace.CollectorMintDTO memory)": "infinite",
      "encodeDomainSeparator()": "infinite",
      "generateEIP712Hash(struct MintGoldDustMarketplace.CollectorMintDTO memory,bytes32)": "infinite",
      "listCollectorMint(uint256,struct MintGoldDustMarketplace.CollectorMintDTO memory)": "infinite",
      "verifySignature(address,bytes32,bytes memory)": "infinite"
    }
  }
}
